%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: root.dvi
%%Pages: 28
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSCommandLine: dvips root
%DVIPSParameters: dpi=600, comments removed
%DVIPSSource:  TeX output 1999.02.07:1824
%%BeginProcSet: tex.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]{ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}
if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 600 600 (root.dvi)
@start /Fa 1 1 df<FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC02A037A9137>0
D E /Fb 6 114 df<0003C000000FC000003FC00007FFC000FFFFC000FFFFC000F83FC0
00003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC0
00003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC0
00003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC0
00003FC0007FFFFFE07FFFFFE07FFFFFE01B267BA526>49 D<007FC00003FFF8000FFFFE
003F81FF807E007FC07F003FE0FF801FF0FF801FF0FF800FF8FF800FF8FF800FF87F000F
F83E000FF800000FF800000FF800001FF000001FF000003FE000003FC000007F800000FF
000001FC000003F8000007E000000FC000001F8078003E0078007C007800F800F001E000
F007FFFFF00FFFFFF01FFFFFF03FFFFFF07FFFFFF0FFFFFFE0FFFFFFE0FFFFFFE01D267C
A526>I<003FF00000FFFF0003E03FC00F801FE01F001FF01F800FF83FC00FF83FC00FF8
3FE00FF83FE00FF83FC00FF81FC00FF00F001FF000001FE000003FE000007F800001FF00
007FFC00007FF000007FFF0000003FC000001FF000000FF800000FFC000007FC1C0007FE
7F0007FEFF8007FEFF8007FEFF8007FEFF8007FEFF8007FCFF000FFC7E000FF83E001FF0
1FC03FE00FFFFFC003FFFE00007FF0001F277DA526>I<000003E000000007E00000000F
E00000001FE00000003FE00000007FE0000000FFE0000001FFE0000001EFE0000003CFE0
0000078FE000000F0FE000001F0FE000003E0FE000007C0FE00000F80FE00001F00FE000
01E00FE00003C00FE00007800FE0000F000FE0001F000FE0003E000FE0007C000FE000F8
000FE000FFFFFFFF80FFFFFFFF80FFFFFFFF8000001FE00000001FE00000001FE0000000
1FE00000001FE00000001FE00000001FE000000FFFFF80000FFFFF80000FFFFF8021267E
A526>I<180000C01F800FC01FFFFFC01FFFFF801FFFFF001FFFFE001FFFFC001FFFF000
1FFFC0001FFF00001E0000001E0000001E0000001E0000001E3FE0001FFFFC001FFFFF00
1FE07F801F003FC01E001FE01C001FF000000FF000000FF000000FF800000FF83E000FF8
FF000FF8FF000FF8FF000FF8FF000FF8FF000FF0FE001FF07C001FE07C003FE03E003FC0
1F80FF800FFFFE0003FFF800007FC0001D277CA526>I<001FF0078000FFFE0F8003FFFF
1F8007FC0FDF801FF003FF803FE001FF803FC000FF807F80007F807F80007F80FF80007F
80FF00007F80FF00007F80FF00007F80FF00007F80FF00007F80FF00007F80FF80007F80
7F80007F807F80007F803FC000FF803FE001FF801FF003FF800FF80FFF8003FFFF7F8000
FFFC7F80001FF07F800000007F800000007F800000007F800000007F800000007F800000
007F800000007F800000007F80000007FFF8000007FFF8000007FFF825257E9928>113
D E /Fc 9 117 df<003FFFFFFFFF003FFFFFFFFF0000FE00007F0000FE00001F0000FC
00000F0000FC00000F0001FC0000070001FC0000060001F80000060001F80000060003F8
0000060003F80000060003F00000060003F00030060007F00070060007F00070000007E0
0060000007E000E000000FE000E000000FE001E000000FC007C000000FFFFFC000001FFF
FFC000001FC007C000001F80038000001F80038000003F80038000003F80038000003F00
030000003F00030000007F00030000007F00000000007E00000000007E0000000000FE00
00000000FE0000000000FC0000000000FC0000000001FC0000000001FC0000000001F800
00000001F80000000003F800000000FFFFF0000000FFFFF0000000302D7DAC2D>70
D<003FFFFC001FFF80003FFFFC001FFF800000FE000003F8000000FE000003E0000000FC
00000780000000FC00000F00000001FC00001C00000001FC00003800000001F80000E000
000001F80001C000000003F800038000000003F8000E0000000003F0001C0000000003F0
00380000000007F000E00000000007F001C00000000007E007800000000007E00E000000
00000FE01F00000000000FE07F00000000000FC0FF80000000000FC1FF80000000001FC7
1FC0000000001FCE1FC0000000001F9C0FC0000000001FF00FE0000000003FE007E00000
00003FC007F0000000003F0003F0000000003F0003F8000000007F0003F8000000007F00
01FC000000007E0001FC000000007E0000FE00000000FE0000FE00000000FE00007F0000
0000FC00007F00000000FC00003F80000001FC00003F80000001FC00001F80000001F800
001FC0000001F800001FE0000003F800001FE00000FFFFE001FFFE0000FFFFE001FFFE00
00392D7CAC3C>75 D<003FFFFFF80000003FFFFFFF00000000FE001FC0000000FE0007E0
000000FC0003F0000000FC0001F8000001FC0000FC000001FC0000FC000001F80000FE00
0001F80000FE000003F80000FE000003F80001FC000003F00001FC000003F00001FC0000
07F00003F8000007F00003F0000007E00007E0000007E0000FC000000FE0001F8000000F
E0007E0000000FC003F80000000FFFFFE00000001FFFFF000000001FC007C00000001F80
03E00000001F8001F00000003F8001F80000003F8000F80000003F0000FC0000003F0000
FC0000007F0001FC0000007F0001FC0000007E0001F80000007E0001F8000000FE0003F8
000000FE0003F8000000FC0003F8000000FC0003F8000001FC0003F8038001FC0003F803
0001F80003F8030001F80003F8070003F80001FC0E00FFFFE000FC3C00FFFFE0007FF000
000000000FC000312E7CAC35>82 D<000007F00600003FFE0E0000F80F9E0003E001FE00
078000FE000F00007C001E00007C003C00003C003C00003C007800003800780000380078
00003800F800003800F800003000F800003000FC00000000FC00000000FE000000007F80
0000007FF80000003FFF8000003FFFF000001FFFFC000007FFFE000000FFFF0000001FFF
00000001FF800000003F800000001F800000000F800000000F8000000007801800000780
180000078018000007801800000F803800000F003800000F003800001E003800001E007C
00003C007E000078007F0000F0007B8003E000F1F00F8000E07FFE0000C00FF00000272F
7CAD2B>I<FFFF801FFFF001FFF8FFFF801FFFF001FFF807F80001FE00003F8007F00000
FC00001F0007E00000FC00001E0007E00000FC00001C0007E00000FC0000180007F00001
FC0000300003F00001FC0000300003F00003FE0000600003F000037E0000E00003F00006
7E0000C00003F0000E7E0001800003F0000C7E0001800003F000187E0003000003F00018
7E0003000003F000307E0006000003F000307E000C000003F000607E000C000003F800C0
7E0018000001F800C07E0018000001F801807F0030000001F801803F0070000001F80300
3F0060000001F807003F00C0000001F806003F00C0000001F80C003F0180000001F80C00
3F0380000001F818003F0300000001F838003F0600000001FC30003F0600000000FC6000
3F0C00000000FC60003F8C00000000FCC0001F9800000000FCC0001FB000000000FD8000
1FB000000000FF00001FE000000000FF00001FE000000000FE00001FC000000000FE0000
1FC000000000FC00001F8000000000FC00001F0000000000F800001F0000000000700000
1E00000000007000001E00000000006000000C00000000452E7CAC43>87
D<0007E000001FF800007C1CE000F80DE001F00FE003E007E007C007E00FC007E01F8007
C01F8007C03F0007C03F000FC07F000F807E000F807E000F807E001F80FE001F00FC001F
00FC001F00FC003F02FC003E06FC003E06F8003E06F8007E0E7C00FE0C7C00FC0C7C01FC
1C3E07BE181F0E1E380FFC0FF003F003C01F1F7D9D25>97 D<0003F800000FFE00003E07
8000F8038001F003C003E001C007C001C00FC003C01F8003801F8007803F000F003F001E
007F01FC007FFFF0007FFF00007E000000FE000000FC000000FC000000FC000000FC0000
007C0000007C0000607C0000E07C0001C03E0003803E000F001F001C000F81F80003FFE0
0000FE00001B1F7D9D21>101 D<000000E0000001F0000003F0000003F0000003F00000
01C000000000000000000000000000000000000000000000000000000000000000000000
000000007C000003FE0000078F80000E0780001C0780003807C0003007C000700FC00060
0F8000E00F8000C00F8000801F8000001F8000001F0000001F0000003F0000003F000000
3E0000003E0000007E0000007E0000007C0000007C000000FC000000FC000000F8000000
F8000001F8000001F8000001F0000001F0000003F0000003F0000003E0000003E0000007
E0003807C000FC0FC000FC0F8000FC1F0000F83E0000F0F800007FF000001F8000001C3B
81AC1D>106 D<000E00001F00001F00003F00003F00003E00003E00007E00007E00007C
00007C0000FC0000FC00FFFFF8FFFFF801F80001F80001F00001F00003F00003F00003E0
0003E00007E00007E00007C00007C0000FC0000FC0000F80000F80001F80101F80301F00
301F00701F00601F00E01E01C01E03801F07000F0E0007FC0001F000152B7EA919>116
D E /Fd 1 1 df<FFFFFFFEFFFFFFFEFFFFFFFE1F037A8B2D>0 D
E /Fe 4 52 df<0000E000000000E000000000E000000000E000000000E000000000E000
000000E000000000E000000000E000000000E000000000E000000000E000000000E00000
0000E000000000E000000000E00000FFFFFFFFC0FFFFFFFFC0FFFFFFFFC00000E0000000
00E000000000E000000000E000000000E000000000E000000000E000000000E000000000
E000000000E000000000E000000000E000000000E000000000E000000000E000000000E0
000022237C9B2B>43 D<00600001E0000FE000FFE000F1E00001E00001E00001E00001E0
0001E00001E00001E00001E00001E00001E00001E00001E00001E00001E00001E00001E0
0001E00001E00001E00001E00001E0007FFF807FFF80111C7B9B1C>49
D<03FC000FFF003C0FC07003E07801F0FC00F0FC00F8FC00F8FC00787800780000F80000
F00000F00001E00003C0000780000F00001C0000380000E00001C0180380180600180C00
383FFFF07FFFF0FFFFF0FFFFF0151C7D9B1C>I<01FC000FFF801E07C03001E07C01F07C
00F07E00F07C01F03801E00003E00007C0001F8003FE0003FC000007800003C00001E000
00F00000F83000F87800F8FC00F8FC00F8FC00F07801F07003E03C07C00FFF0003FC0015
1D7D9B1C>I E /Ff 4 115 df<007000F800F800F000E00000000000000000000000000F
801FC031E061E061E0C3C003C00780078007800F000F081E181E181E301E700FE007800D
1D7D9C16>105 D<0001800003C00007C00007C000038000000000000000000000000000
0000000000007C0001FE00038F00070F00060F000C0F00000F00000F00001E00001E0000
1E00001E00003C00003C00003C00003C0000780000780000780000780070F000F8F000F9
E000F3C000FF80007E000012257E9C18>I<1FE0001FE00003E00003C00003C00003C000
03C0000780000780000780000780000F00F80F01FC0F070C0F0C1C1E383C1E607C1FC07C
1FE0383FF8003C7C003C1E003C1E04781E0C781E0C781E18780F18F00FF06003E0161D7C
9C1F>I<0F07E03F8FF833D81C63F01CC3E03CC3C07C03C07C03C0380780000780000780
000780000F00000F00000F00000F00001E00000C000016127D911C>114
D E /Fg 2 49 df<FFFFFFFFFEFFFFFFFFFEFFFFFFFFFE27037A8F34>0
D<00E001F003F803F803F807F007F007F007E007E00FE00FC00FC00FC01F801F801F001F
003F003E003E003E007C007C007C007800F800F800F00010000D1E7D9F13>48
D E /Fh 6 62 df<00003800000000380000000038000000003800000000380000000038
000000003800000000380000000038000000003800000000380000000038000000003800
0000003800000000380000000038000000003800000000380000FFFFFFFFFEFFFFFFFFFE
FFFFFFFFFE00003800000000380000000038000000003800000000380000000038000000
003800000000380000000038000000003800000000380000000038000000003800000000
380000000038000000003800000000380000000038000027277C9F2F>43
D<00FF0003FFC00781E00F00F01E00783C003C3C003C78001E78001E78001E78001EF800
1FF8001FF8001FF8001FF8001FF8001FF8001FF8001FF8001FF8001FF8001FF8001FF800
1F78001E78001E7C003E3C003C3C003C1E00780F00F00781E003FFC000FF0018227DA01E
>48 D<00E00001E00007E000FFE000F9E00001E00001E00001E00001E00001E00001E000
01E00001E00001E00001E00001E00001E00001E00001E00001E00001E00001E00001E000
01E00001E00001E00001E00001E00001E00001E00003F000FFFFC0FFFFC012217AA01E>
I<01FC0007FF801C0FC03003E06001F06000F8F800F8FC00FCFC00FCFC007C78007C3000
FC0000FC0000F80000F80001F00003E00003C0000780000F00001E0000380000700000E0
0001C00C03800C0600180C00181800183FFFF87FFFF8FFFFF0FFFFF016217CA01E>I<00
FF0003FFC00F03E01C00F01C00F83E00FC3E007C3E007C1E00FC0C00FC0000F80000F800
01F00003E0000FC001FF0001FF000003E00000F000007800007C00003E00003F30003F78
003FFC003FFC003FFC003EF8007E60007C3800F81E03F00FFFC001FF0018227DA01E>I<
FFFFFFFFFEFFFFFFFFFEFFFFFFFFFE000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000FFFFFFFFFEFFFFFFFFFEFFFF
FFFFFE270F7C932F>61 D E /Fi 5 126 df<FFFFFFFFFFFFFFFFFC00FFFFFFFFFFFFFF
FFFE00FFFFFFFFFFFFFFFFFE00FFFFFFFFFFFFFFFFFE007FC0000000001FFFFF007FC000
000000007FFF003FE0000000000007FF001FF0000000000001FF800FF80000000000007F
800FF80000000000001F8007FC0000000000000FC003FE00000000000007C001FF000000
00000003C001FF00000000000001E000FF80000000000000E0007FC00000000000006000
3FC000000000000070003FE000000000000030001FF000000000000030000FF800000000
000018000FF8000000000000000007FC000000000000000003FE000000000000000001FF
000000000000000001FF000000000000000000FF8000000000000000007FC00000000000
0000003FE000000000000000003FE000000000000000001FF000000000000000000FF800
0000000000000007FC000000000000000007FC000000000000000003FE00000000000000
0001FF000000000000000000FF000000000000000000FF8000000000000000007FC00000
0000000000003FE000000000000000003FE000000000000000001FF00000000000000000
0FF8000000000000000007F0000000000000000007E0000000000000000007E000000000
000000000FC000000000000000000F8000000000000000001F0000000000000000003E00
00000000000000007E000000000000000000FC000000000000000000F800000000000000
0001F0000000000000000003E0000000000000000007E0000000000000000007C0000000
00000000000F8000000000000000001F0000000000000000003E0000000000000000007E
0000000000000000007C000000000000000000F8000000000000000001F0000000000000
180003F0000000000000300007E0000000000000300007C000000000000070000F800000
0000000060001F00000000000000E0003F00000000000001E0007E00000000000003C000
7C00000000000007C000F80000000000000FC001F00000000000001F8003F00000000000
007F8003E0000000000001FF8007C0000000000007FF000F8000000000003FFF001F0000
0000000FFFFF003FFFFFFFFFFFFFFFFE003FFFFFFFFFFFFFFFFE007FFFFFFFFFFFFFFFFE
00FFFFFFFFFFFFFFFFFC00FFFFFFFFFFFFFFFFFC004D537B7F58>80
D<000000007F800000000FFF800000007FFF80000001FFFF8000000FFFFF8000003FFFFF
8000007FFFFF800001FFFFFF800007FFFFFF80000FFFFFFF80001FFFFF0000003FFFE000
0000FFFF00000001FFF800000003FFE000000003FF8000000007FE000000000FFC000000
001FF0000000003FE0000000003FC0000000007F8000000000FF0000000000FF00000000
00FE0000000000FC0000000000F80000000000291B838925>122
D<FF0000000000FFF800000000FFFF00000000FFFFC0000000FFFFF8000000FFFFFE0000
00FFFFFF000000FFFFFFC00000FFFFFFF00000FFFFFFF80000007FFFFC00000003FFFE00
0000007FFF800000000FFFC000000003FFE000000000FFE0000000003FF0000000001FF8
0000000007FC0000000003FE0000000001FE0000000000FF00000000007F80000000007F
80000000003F80000000001F80000000000F80291B818925>I<F80000000000FC000000
0000FE0000000000FF0000000000FF00000000007F80000000003FC0000000003FE00000
00001FF0000000000FFC0000000007FE0000000003FF8000000003FFE000000001FFF800
000000FFFF000000003FFFE00000001FFFFF0000000FFFFFFF800007FFFFFF800001FFFF
FF8000007FFFFF8000003FFFFF8000000FFFFF80000001FFFF800000007FFF800000000F
FF80000000007F80291B839A25>I<000000000F80000000001F80000000003F80000000
007F80000000007F8000000000FF0000000001FE0000000003FE0000000007FC00000000
1FF8000000003FF000000000FFE000000003FFE00000000FFFC00000007FFF80000003FF
FE0000007FFFFC0000FFFFFFF80000FFFFFFF00000FFFFFFC00000FFFFFF000000FFFFFE
000000FFFFF8000000FFFFC0000000FFFF00000000FFF800000000FF0000000000291B81
9A25>I E /Fj 5 107 df<00FFFFFF000000FFFFFFE0000007C003F8000007C000FC0000
0F80003E00000F80001E00000F80001F00000F80000F80001F00000F80001F00000F8000
1F00000F80001F00000FC0003E00000FC0003E00000FC0003E00000FC0003E00000FC000
7C00000F80007C00001F80007C00001F80007C00001F0000F800003F0000F800003F0000
F800003E0000F800007C0001F000007C0001F00000F80001F00001F00001F00003E00003
E00007C00003E0000F800003E0003E000007E001F80000FFFFFFE00000FFFFFF0000002A
227CA132>68 D<001F000000FF8C0001E0DE0003807E0007007C000F003C001E003C003E
003C003C0078007C0078007C0078007C007800F800F000F800F000F800F040F800F060F8
01E0C07801E0C07803E0C03807E1801C1CF3000FF87F0007E03C001B177E9522>97
D<000003E000003FC000003FC0000003C0000003C0000007800000078000000780000007
8000000F0000000F0000000F0000000F00001F1E0000FF9E0001E0DE0003807E0007007C
000F003C001E003C003E003C003C0078007C0078007C0078007C007800F800F000F800F0
00F800F040F800F060F801E0C07801E0C07803E0C03807E1801C1CF3000FF87F0007E03C
001B247EA220>100 D<0038007C007C0078007000000000000000000000000000000780
1FC038E030E060F0C1E0C1E0C1E003C003C003C0078007800F000F040F061E0C1E0C1E18
1C181E700FE007800F237DA116>105 D<00001800003C00007C00007C00003800000000
0000000000000000000000000000000000000780001FE00038E00060F000C0F000C0F001
80F00180F00001E00001E00001E00001E00003C00003C00003C00003C000078000078000
0780000780000F00000F00000F00000F00001E00001E00381E00783C00F83800F8780070
F0007FC0001F0000162D81A119>I E /Fk 25 123 df<000001FF000800000FFFE01800
007F80F0380001F80018700003E0000CF0000F800007F0001F000003F0003E000003E000
7C000003E000F8000001E001F0000001E003E0000001C007C0000001C00FC0000001C00F
80000001C01F80000001801F00000001803F00000000003F00000000007E00000000007E
00000000007E00000000007E00000000007C0000000000FC0000000000FC0000000000FC
00000006007C0000000C007C0000000C007C0000000C007C00000018007E00000030003E
00000030003E00000060001F000000C0000F800001800007800003000003E0000E000001
F00038000000FE01F00000003FFFC000000007FC0000002D2A7DA830>67
D<003FFFFFFC0000003FFFFFFF00000001FC001FC0000001F80003E0000001F80001F800
0003F80000F8000003F800007C000003F000003E000003F000003E000007F000001F0000
07F000001F000007E000001F000007E000001F00000FE000001F00000FE000001F80000F
C000001F80000FC000001F80001FC000001F00001FC000001F00001F8000003F00001F80
00003F00003F8000003F00003F8000003E00003F0000007E00003F0000007C00007F0000
00FC00007F000000F800007E000001F800007E000001F00000FE000003E00000FE000003
E00000FC000007C00000FC00000F800001FC00001F000001FC00007C000001F80000F800
0001F80003E0000003F8001FC00000FFFFFFFE000000FFFFFFF000000031287DA736>I<
003FFC0001FFF8003FFE0001FFF80001FE00001F000001FF00001E000001FF00000C0000
03BF80001C000003BF8000180000031FC000180000031FC000180000070FE00038000007
0FE0003000000607F0003000000607F0003000000E03F8007000000E03F8006000000C01
FC006000000C01FC006000001C00FE00E000001C00FE00C0000018007F00C0000018007F
00C0000038003F81C0000038001F8180000030001FC180000030000FC180000070000FE3
800000700007E3000000600007F3000000600003F3000000E00003FF000000E00001FE00
0000C00001FE000000C00000FE000001C00000FE000001C000007C0000018000007C0000
03C000003C000007C000003C0000FFFC0000180000FFFC000018000035287DA735>78
D<001F8000007FC00000F0E70003C03F0007803F000F001F000F001F001E001F003E003E
003C003E007C003E007C003E00F8007C00F8007C00F8007C00F8007C00F000F800F000F8
30F000F830F000F830F001F060F001F0607803F060780EF0C03C1CF9801FF07F8007C01E
001C1B7C9924>97 D<000FE0003FF800F81C01E00E03803E07807E0F007E1E007C3E007C
3C00007C00007C0000F80000F80000F80000F80000F00000F00000F00000F00004F0000C
7800187800303C00E01E07C00FFF0003F800171B7C991E>99 D<000000F800001FF80000
1FF8000001F0000001F0000003F0000003F0000003E0000003E0000007E0000007E00000
07C0000007C000000FC0001F8FC0007FCF8000F0EF8003C03F8007803F800F001F000F00
1F001E003F003E003F003C003E007C003E007C007E00F8007E00F8007C00F8007C00F800
FC00F000FC00F000F830F000F830F000F830F001F060F001F0607803F060780EF0C03C1C
F9801FF07F8007C01E001D297CA723>I<000FC0007FF000F03803C01C07801C0F001C1F
001C1E001C3E00387C00707C07E07FFF80FFFC00F80000F80000F80000F80000F00000F0
0000F0000478000C7800183800303C00E01E07C00FFF0003F800161B7C991F>I<000003
E000000FF000001E3800003C3C00003C7C00007CFC000078FC0000F8F80000F8700000F8
000000F8000001F0000001F0000001F0000001F0000001F00000FFFFE000FFFFE00003E0
000003E0000003E0000003E0000007C0000007C0000007C0000007C0000007C000000F80
00000F8000000F8000000F8000000F8000000F8000001F0000001F0000001F0000001F00
00001F0000003E0000003E0000003E0000003E0000003C0000007C00003C7C00007C7800
007E780000FC700000FCF0000078E0000071C000003F8000001E0000001E357CA820>I<
0001F0000007FC00001E0CE0003C07E0007807E000F003E001E003E001E003E003E007C0
03C007C007C007C007C007C00F800F800F800F800F800F800F800F800F001F000F001F00
0F001F000F001F000F003E0007807E000780FE0003C3BE0001FF7C00007C7C0000007C00
00007C000000F8000000F8003800F8007C01F000FC01F000FC03E000F807C000701F8000
3FFE00000FF000001B267E9920>I<000E00001F00003F00003F00003E00001C00000000
00000000000000000000000000000000000003E00007F0000C7800187C00307C00307C00
607C0060F800C0F800C0F80001F00001F00001F00003E00003E00007C00007C00007C180
0F81800F81801F03001F03001F06000F0C000F1C0007F00003E00011287DA617>105
D<0000070000000F8000001F8000001F8000001F0000000E000000000000000000000000
00000000000000000000000000000000000003E0000007F800000C3C0000183C0000303E
0000603E0000C03E0000C03E0001807C0001807C0000007C0000007C000000F8000000F8
000000F8000000F8000001F0000001F0000001F0000001F0000003E0000003E0000003E0
000003E0000007C0000007C0000007C0000007C000000F8000000F8000380F80007C1F00
00FC1F0000FC3E0000F87C000070F800007FE000001F800000193380A61B>I<003E0000
07FE000007FE0000007C0000007C000000FC000000FC000000F8000000F8000001F80000
01F8000001F0000001F0000003F0000003F0078003E01FC003E0386007E061E007E0C3E0
07C187E007C307E00FC607C00FCC03800FB800000FE000001FF000001FFE00001F3F8000
1F0FC0003F07E0003F03E0003E03E0603E03E0607E03E0607E03C0C07C03C0C07C03C180
FC03C180FC01E300F800FE0070007C001B297CA723>I<007C0FFC0FFC00F800F801F801
F801F001F003F003F003E003E007E007E007C007C00FC00FC00F800F801F801F801F001F
003F003F003E003E007E007E007C187C187C18F830F830F820786078C03F800F000E297E
A715>I<07801FC007E0000FE07FF01FF80018F0E0F8783C0030F1807CE03E0030FB007D
801E0060FE003F001E0060FC003F001E0060F8003E001E00C1F8007C003E00C1F0007C00
3E0001F0007C003E0001F0007C003E0003E000F8007C0003E000F8007C0003E000F8007C
0003E000F800F80007C001F000F80007C001F000F83007C001F001F03007C001F001F030
0F8003E003E0600F8003E003E0600F8003E003E0C00F8003E001E1801F0007C001E3801F
0007C000FF000E000380007C00341B7D993B>I<07801FC0000FE07FF00018F0E0F80030
F1807C0030FB007C0060FE003C0060FC003C0060F8003C00C1F8007C00C1F0007C0001F0
007C0001F0007C0003E000F80003E000F80003E000F80003E001F00007C001F00007C001
F06007C003E06007C003E0600F8007C0C00F8007C0C00F8007C1800F8003C3001F0003C7
001F0001FE000E0000F800231B7D9929>I<000FE000003FF80000F83C0001E00E0003C0
0F00078007800F0007801E0007803E0007803C0007C07C0007C07C000780F8000F80F800
0F80F8000F80F8000F00F0001F00F0001F00F0003E00F0003C00F0007800780078007800
F0003C03C0001E0F80000FFE000003F800001A1B7C9921>I<00F007C001FC1FF0031E78
78061EE03C061FC01C0C1F801E0C1F001E0C3F001E183F001F183E001F003E001F007E00
1F007E003E007C003E007C003E00FC003E00FC007C00F8007C00F8007801F800F001F800
F001F801E001F803C003FC078003FE1F0003E7FC0003E1F00007E0000007E0000007C000
0007C000000FC000000FC000000F8000001F800000FFF80000FFF800002025809922>I<
001F03007F8701E0CF03C07F07807F0F003E1F003E1E003E3E007E3C007C7C007C7C007C
F800FCF800F8F800F8F800F8F001F8F001F0F001F0F001F0F003F0F003E07007E0780FE0
3C3FE01FF7C007C7C00007C0000FC0000F80000F80000F80001F80001F00003F0003FFF0
03FFF018257C991E>I<07803E000FE0FF8018F3C18030F703C030FE07C060FC0FC060F8
0FC060F80F80C1F00700C1F0000001F0000001F0000003E0000003E0000003E0000003E0
000007C0000007C0000007C0000007C000000F8000000F8000000F8000000F8000001F00
00001F0000000E0000001A1B7D991F>I<000FE0007FF800F03C01C00E03C01E07803E07
803E07803C0F80180FE00007FF0007FFC003FFE001FFF000FFF80007F80001F83C00F87E
00787E0078FC00F0F800F07001E07003C03C0F801FFE0007F800171B7C991F>I<001C00
003E00003E00007C00007C00007C00007C0000F80000F80000F80000F80001F000FFFFE0
FFFFE001F00003E00003E00003E00003E00007C00007C00007C00007C0000F80000F8000
0F80000F80001F00001F00601F00601F00C03E00C03E01803E03001E06001F1C000FF800
03E00013267EA419>I<03E000000007F00038000C78007C00187C007C00307C00F80030
7C00F800607C00F80060F800F800C0F801F000C0F801F00001F001F00001F001F00001F0
03E00003E003E00003E003E00003E003E00007C007C00007C007C18007C007C18007C007
C18007C00F830007C00F830003C01F830003E037860001F0E7CE0000FFC3FC00003F00F0
00211B7D9927>I<03E00000038007F0007007800C7800F80FC0187C00F80FC0307C01F0
07C0307C01F003C0607C01F003C060F801F001C0C0F803E00180C0F803E0018001F003E0
018001F003E0018001F007C0030003E007C0030003E007C0030003E007C0030007C00F80
060007C00F80060007C00F800C0007C00F800C0007C00F80080007C00F80180003C01F80
300003E01FC0700001F073E0E00000FFE1FF8000001F807F00002A1B7D9930>119
D<007C03C001FF0FF007079C300E03B0780C03F0F81803E1F83003E1F83003E1F06007C0
E06007C0000007C0000007C000000F8000000F8000000F8000000F8000001F0000001F00
30381F00307C1F0060FC3E0060FC3E00C0F87E00C0F06F038070C707003F83FE001F01F8
001D1B7D9926>I<003E00C0007F00C000FF818001FFC30003FFFF000701FE0006000C00
0400180000003000000060000000C0000003800000060000000C00000018000000300000
0060000000C001800380018006000300060007000FF81E001FFFFE00383FFC00601FF800
600FF000C007C0001A1B7D9920>122 D E /Fl 19 107 df<7FFFFFFFFFFF80FFFFFFFF
FFFFC0FFFFFFFFFFFFC07FFFFFFFFFFF803204799641>0 D<1C007F00FF80FF80FF80FF
80FF807F001C000909799917>I<000FE000007FFC0000FFFE0003FFFF8007FFFFC00FFF
FFE01FFFFFF03FFFFFF83FFFFFF87FFFFFFC7FFFFFFC7FFFFFFCFFFFFFFEFFFFFFFEFFFF
FFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFE7FFFFFFC7FFFFFFC7FFFFFFC3FFF
FFF83FFFFFF81FFFFFF00FFFFFE007FFFFC003FFFF8000FFFE00007FFC00000FE0001F20
7BA42A>15 D<00000FFFFFFF800000FFFFFFFFC00003FFFFFFFFC0000FFFFFFFFF80001F
F800000000007F800000000000FE000000000001F8000000000003F0000000000007E000
000000000FC000000000000F8000000000001F0000000000001F0000000000003E000000
0000003E0000000000007C0000000000007C00000000000078000000000000F800000000
0000F8000000000000F0000000000000F0000000000000F0000000000000F00000000000
00F0000000000000F0000000000000F0000000000000F0000000000000F8000000000000
F8000000000000780000000000007C0000000000007C0000000000003E0000000000003E
0000000000001F0000000000001F0000000000000F8000000000000FC0000000000007E0
000000000003F0000000000001F8000000000000FE0000000000007F8000000000001FF8
00000000000FFFFFFFFF800003FFFFFFFFC00000FFFFFFFFC000000FFFFFFF8000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000001FFFFFFFFFFF803FFFFFFFFFFFC0
3FFFFFFFFFFFC01FFFFFFFFFFF80324479B441>18 D<00000000000180000000000007C0
00000000001FC000000000007F800000000001FF000000000007FC00000000001FF00000
0000007FC00000000001FF000000000007FC00000000001FF000000000007FC000000000
01FF000000000007FC00000000001FF000000000007FC00000000001FF000000000007FC
00000000001FF000000000007FC00000000001FF000000000007FC00000000003FF00000
0000007FC00000000000FF000000000000FE0000000000007F8000000000003FE0000000
00000FF8000000000003FE000000000000FF8000000000003FE000000000000FF8000000
000003FE000000000000FF8000000000003FE000000000000FF8000000000003FE000000
000000FF8000000000003FE000000000000FF8000000000003FE000000000000FF800000
0000003FE000000000000FF8000000000003FE000000000000FF8000000000003FC00000
0000000FC000000000000380000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00007FFFFFFFFFFF80FFFFFFFFFFFFC0FFFFFFFFFFFFC07FFFFFFFFFFF80324479B441>
20 D<0000000000001E00000000000000001E00000000000000001E0000000000000000
1E00000000000000001F00000000000000000F00000000000000000F0000000000000000
0F800000000000000007800000000000000007C00000000000000003E000000000000000
03E00000000000000001F00000000000000000F80000000000000000FC00000000000000
007E00000000000000003F00000000000000001F80000000000000000FC0000000000000
0007F07FFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFFFFFF
FFFFFC0000000000000007F0000000000000000FC0000000000000001F80000000000000
003F00000000000000007E0000000000000000FC0000000000000000F800000000000000
01F00000000000000003E00000000000000003E00000000000000007C000000000000000
0780000000000000000F80000000000000000F00000000000000000F0000000000000000
1F00000000000000001E00000000000000001E00000000000000001E0000000000000000
1E0000482C7BAA53>33 D<00001FFFFE0000FFFFFF0003FFFFFF000FFFFFFE001FF00000
007F80000000FE00000001F800000003F000000007E00000000FC00000000F800000001F
000000001F000000003E000000003E000000007C000000007C000000007800000000F800
000000F800000000F000000000F000000000FFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFEF000000000F000000000F800000000F80000000078000000007C000000007C000000
003E000000003E000000001F000000001F000000000F800000000FC000000007E0000000
03F000000001F800000000FE000000007F800000001FF00000000FFFFFFE0003FFFFFF00
00FFFFFF00001FFFFE283279AD37>50 D<0000000001800000000003C00000000007C000
00000007C0000000000F80000000000F80000000001F00000000001F00000000003E0000
0000003E00000000007C00000000007C0000000000F80000000000F80000000001F00000
000001F00000000003E00000000003E00000000007C0000000000FC0000000000F800000
00001F00000000001F00000000003E00000000003E00000000007C00000000007C000000
0000F80000000000F80000000001F00000000001F00000000003E00000000003E0000000
0007C00000000007C0000000000F80000000000F80000000001F00000000001F00000000
003E00000000003E00000000007C00000000007C0000000000F80000000000F800000000
01F00000000001F00000000003E00000000003E00000000007C00000000007C000000000
0F80000000000F80000000001F00000000001F00000000003E00000000003E0000000000
7C0000000000FC0000000000F80000000001F00000000001F00000000003E00000000003
E00000000007C00000000007C0000000000F80000000000F80000000001F00000000001F
00000000003E00000000003E00000000007C00000000007C0000000000F80000000000F8
0000000000F000000000006000000000002A4E75BB00>54 D<7FFFFFFFFFF8FFFFFFFFFF
FCFFFFFFFFFFFC7FFFFFFFFFFC00000000003C00000000003C00000000003C0000000000
3C00000000003C00000000003C00000000003C00000000003C00000000003C0000000000
3C00000000003C00000000003C00000000003C00000000003C00000000003C0000000000
3C00000000003C00000000003C0000000000182E177C9D37>58 D<0000006000000000F0
00000000F000000001F0000007F1F000003FFFE000007C1FE00000F007E00001E003C000
03C003E000078007F0000F0007F8000F0007F8001F000FFC001E000FBC001E000F3C003E
000F3E003E001F3E003E001F3E007C001E1F007C003E1F007C003E1F007C003C1F007C00
3C1F007C007C1F00FC007C1F80FC00781F80FC00F81F80FC00F81F80FC00F01F80FC00F0
1F80FC01F01F80FC01F01F80FC01E01F80FC03E01F80FC03E01F80FC03C01F80FC03C01F
80FC07C01F80FC07C01F80FC07801F80FC07801F80FC0F801F80FC0F801F80FC0F001F80
FC1F001F807C1F001F007C1E001F007C1E001F007E3E003F007E3E003F003E3C003E003E
7C003E003E7C003E003E78003E001F78007C001FF8007C000FF80078000FF000F80007F0
00F00003F001E00003E003E00001F007800003FC1F000003FFFE000003C7F0000007C000
000007C000000007800000000780000000030000000021477CBF2A>I<000003FFFFF800
0000007FFFFFFF80000001FFFFFFFFF000000FFFFFFFFFF800003FC3F003FFFE00007803
F0003FFF0001E007F00007FF8003C007F00003FFC0078007F00000FFC00F8007F000007F
C01F0007F000003FE03F0007E000001FE03E0007E000001FE07C0007E000001FE078000F
E000000FE0C0000FE000000FE000000FE000000FE000000FC000000FC000000FC000000F
C000000FC000000FC000001FC000001F8000001FC000001F8000001F8000001F0000001F
8000003E0000001F8000003E0000003F8000007C0000003F800000F80000003F000000F0
0000003F000001E00000003F000003C00000007F000007800000007E00000E000000007E
00003C000000007E0000F800000000FC0003E000000000FC003F8000000000FC1FFE0000
000001FC7FF80000000001F8FFC00000000001F9FC000000000001F800000000000003F0
00000000000003F000000000000003F000000000000007E000000000000007E000000000
000007E00000000000000FC00000000000000FC00000000000000FC00000000000001F80
0000000000001F800000000000001F000000000000003F000000000000003F0000000000
00007E000000000000007E000000000000007E00000000000000FC00000000000000F000
000000000000C00000000000003B3D7FB83A>80 D<600000000018F0000000003CF00000
00003CF0000000003CF0000000003CF0000000003CF0000000003CF0000000003CF00000
00003CF0000000003CF0000000003CF0000000003CF0000000003CF0000000003CF00000
00003CF0000000003CF0000000003CF0000000003CF0000000003CF0000000003CF00000
00003CF0000000003CF0000000003CF0000000003CF0000000003CF0000000003CF00000
00003CF0000000003CF0000000003CF0000000003CF0000000003CF0000000003CF00000
00003CF0000000003CF0000000003CF0000000003CF0000000003CF8000000007CF80000
00007C7C00000000F87C00000000F83E00000001F03F00000003F01F80000007E00FC000
000FC007F000003F8003FE0001FF0000FFC00FFC00007FFFFFF800001FFFFFE0000003FF
FF000000007FF800002E347CB137>91 D<00007FF800000003FFFF0000001FFFFFE00000
7FFFFFF80000FFC00FFC0003FE0001FF0007F000003F800FC000000FC01F80000007E03F
00000003F03E00000001F07C00000000F87C00000000F8F8000000007CF8000000007CF0
000000003CF0000000003CF0000000003CF0000000003CF0000000003CF0000000003CF0
000000003CF0000000003CF0000000003CF0000000003CF0000000003CF0000000003CF0
000000003CF0000000003CF0000000003CF0000000003CF0000000003CF0000000003CF0
000000003CF0000000003CF0000000003CF0000000003CF0000000003CF0000000003CF0
000000003CF0000000003CF0000000003CF0000000003CF0000000003CF0000000003CF0
000000003CF0000000003CF0000000003CF0000000003CF0000000003CF0000000003C60
00000000182E347CB137>I<600000000018F0000000003CF8000000007CF8000000007C
7C00000000F87C00000000F83C00000000F03E00000001F03E00000001F01F00000003E0
1F00000003E00F80000007C00F80000007C007800000078007C000000F8007C000000F80
03E000001F0003E000001F0001F000003E0001F000003E0000F800007C0000F800007C00
007800007800007C0000F800007C0000F800003E0001F000003E0001F000001F0003E000
001F0003E000000F0003C000000F8007C000000F8007C0000007C00F80000007C00F8000
0003E01F00000003E01F00000001F03E00000001F03E00000000F03C00000000F87C0000
0000F87C000000007CF8000000007CF8000000003FF0000000003FF0000000001FE00000
00001FE0000000001FE0000000000FC0000000000FC00000000007800000000003000000
2E347CB137>95 D<7FFFF0FFFFF8FFFFF8FFFFF0F00000F00000F00000F00000F00000F0
0000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F0
0000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F0
0000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F0
0000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F0
0000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F0
0000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F0000060
0000155272BD25>100 D<7FFFF0FFFFF8FFFFF87FFFF800007800007800007800007800
007800007800007800007800007800007800007800007800007800007800007800007800
007800007800007800007800007800007800007800007800007800007800007800007800
007800007800007800007800007800007800007800007800007800007800007800007800
007800007800007800007800007800007800007800007800007800007800007800007800
007800007800007800007800007800007800007800007800007800007800007800007800
007800007800007800007800007800007800007800007800007800007800007800007800
007800003015527FBD25>I<000001F800000FF800003F800000FC000001F8000003F000
0007E0000007E000000FE000000FC000000FC000000FC000000FC000000FC000000FC000
000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000
000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000
000FC000001FC000001F8000003F8000007F000000FE000003F800007FE00000FF000000
7FE0000003F8000000FE0000007F0000003F8000001F8000001FC000000FC000000FC000
000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000
000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000
000FC000000FC000000FC000000FC000000FC000000FE0000007E0000007E0000003F000
0001F8000000FC0000003F8000000FF8000001F81D537ABD2A>I<FC000000FFC0000007
F0000001FC0000007E0000003F0000003F8000001F8000001FC000000FC000000FC00000
0FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC00000
0FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC00000
0FC000000FC000000FC000000FC000000FC000000FE0000007E0000007F0000003F80000
01FC0000007E0000001FF0000007F800001FF000007E000001FC000003F8000007F00000
07E000000FE000000FC000000FC000000FC000000FC000000FC000000FC000000FC00000
0FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC00000
0FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC00000
1FC000001F8000003F8000003F0000007E000001FC000007F00000FFC00000FC0000001D
537ABD2A>I<60F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F060045377BD17>106 D E
/Fm 49 122 df<000000003FFC0000000001FFFF8000000007E007C00000001F8001E000
00003F0001F00000007E0003F0000000FC0007F0000000FC0007F0000001F80007F00000
01F80007E0000003F0000380000003F0000000000003F0000000000003F0000000000007
F0000000000007E0000000000007E0000000000007E0000000000007E000000000000FE0
00000000000FC000000000000FC000000000000FC0000000000FFFFFFFFF00000FFFFFFF
FF00000FFFFFFFFE0000001F80007E0000001F80007E0000001F8000FE0000003F8000FC
0000003F0000FC0000003F0000FC0000003F0001FC0000003F0001F80000007F0001F800
00007E0001F80000007E0003F80000007E0003F00000007E0003F0000000FE0003F00000
00FC0007F0000000FC0007E0000000FC0007E0000000FC0007E0000001FC000FE0000001
FC000FC0000001F8000FC1C00001F8000FC1C00001F8001FC1C00001F8001F83C00003F8
001F83800003F0001F83800003F0001F83800003F0001F87000007F0001F87000007E000
1F0F000007E0000F8E000007E000079E000007E00003FC00000FE00000F000000FC00000
0000000FC000000000000FC000000000000F8000000000001F8000000000001F80000000
001C1F00000000007E1F00000000007E3F0000000000FE3E0000000000FE3C0000000000
FE7C0000000000F878000000000078F000000000003FE000000000000F80000000000034
4C82BA2F>12 D<0000000C0000001C00000038000000F0000001E0000003C00000078000
000F0000001E0000003C0000007C000000F8000000F0000001E0000003E0000007C00000
078000000F8000001F0000001F0000003E0000003E0000007C0000007C000000F8000000
F8000001F0000001F0000003F0000003E0000007E0000007C0000007C000000FC000000F
8000000F8000001F8000001F8000001F0000001F0000003F0000003F0000003E0000003E
0000007E0000007E0000007C0000007C0000007C0000007C000000FC000000F8000000F8
000000F8000000F8000000F8000000F8000000F8000000F8000000F8000000F8000000F8
000000F8000000F800000078000000780000007800000078000000780000003C0000003C
0000003C0000001C0000001E0000001E0000000E00000007000000070000000380000001
C0000001C0000000C000001E5274BD22>40 D<00000C0000000E00000007000000038000
000380000001C0000001E0000001E0000000E0000000F0000000F0000000780000007800
000078000000780000007C0000003C0000003C0000003C0000003C0000003C0000003C00
00003C0000003C0000003C0000003C0000003C0000007C0000007C0000007C0000007C00
00007C0000007C0000007C000000FC000000FC000000F8000000F8000001F8000001F800
0001F0000001F0000003F0000003F0000003E0000003E0000007E0000007E0000007C000
000FC000000F8000000F8000001F8000001F0000001F0000003E0000003E0000007C0000
007C000000F8000000F8000001F0000001F0000003E0000003C0000007C000000F800000
0F0000001F0000003E0000003C00000078000000F0000001E0000003E0000003C0000007
0000000E0000001C00000078000000F0000000C00000001E527FBD22>I<03C007F00FF0
1FF01FF81FF81FF81FF007B0003000700060006000E000C001C00380030007000E001C00
38007000E000C0000D197A8819>44 D<7FFFF87FFFF8FFFFF8FFFFF8FFFFF0150579941E
>I<0E003F807F80FF80FF80FF80FF007E003C000909778819>I<00000000000300000000
0000078000000000000F8000000000000F8000000000001F0000000000003F0000000000
003E0000000000007C0000000000007C000000000000F8000000000000F8000000000001
F0000000000003F0000000000003E0000000000007C0000000000007C000000000000F80
00000000000F8000000000001F0000000000001F0000000000003E0000000000007E0000
000000007C000000000000F8000000000000F8000000000001F0000000000001F0000000
000003E0000000000007E0000000000007C000000000000F8000000000000F8000000000
001F0000000000001F0000000000003E0000000000007E0000000000007C000000000000
F8000000000000F8000000000001F0000000000001F0000000000003E0000000000007E0
000000000007C000000000000F8000000000000F8000000000001F0000000000001F0000
000000003E0000000000003E0000000000007C000000000000FC000000000000F8000000
000001F0000000000001F0000000000003E0000000000003E0000000000007C000000000
000FC000000000000F8000000000001F0000000000001F0000000000003E000000000000
3E0000000000007C000000000000FC000000000000F8000000000001F0000000000001F0
000000000003E0000000000003E0000000000007C000000000000FC000000000000F8000
000000001F0000000000001F0000000000003E0000000000003E0000000000007C000000
0000007C000000000000F8000000000000F80000000000007000000000000031537FBD2A
>I<000000180000003800000078000000F0000001F0000003F0000007F000000FE00000
1FE000007FE00003FFE0003FEFC0003F8FC0001C1FC000001FC000001F8000001F800000
3F8000003F8000003F0000003F0000007F0000007F0000007E0000007E000000FE000000
FE000000FC000000FC000001FC000001FC000001F8000001F8000003F8000003F8000003
F0000003F0000007F0000007F0000007E0000007E000000FE000000FE000000FC000000F
C000001FC000001FC000001F8000001F8000003F8000003F8000003F0000007F8000FFFF
FF80FFFFFF80FFFFFF801D3877B72A>49 D<000003F80000000FFE0000003C0F800000F0
07C00001E003E00003C003F000078001F000070001F8000E0001F8001E0001F8001C6000
FC00387000FC00383001FC00703001FC00703001FC00F03001FC00E03001FC00E07003FC
01E06003F801C06003F801C0E003F801C0C007F801C1C007F00181800FF00183800FE001
C7001FC001FE003F800078003F000000007E00000000FC00000001F800000003F0000000
07C00000001F800000003E00000000FC00000001F000000007C00000000F800000001E00
0000007C00000000F80000C001F00001C001E00001C003C00001C007800003C00F000003
800E000007801E00000F803C00001F003FF8003F007FFFC07E00783FFFFC00700FFFFC00
F007FFF800E001FFF000E000FFC000E0001F0000263A79B72A>I<000003FC0000001FFF
0000007E07C00000F003E00003C001F000078001F8000F0000F8001E0000F8001C0000FC
003C0000FC0038C000FC0078E000FC00706000FC00706001FC00F06001F800E06001F800
E06001F800E0E003F80071C003F0007F8007F0001E0007E00000000FC00000001F800000
003F000000007E00000000FC000001FFF8000003FFE0000003FF000000000FC000000003
F000000001F000000000F800000000FC00000000FC00000000FC00000000FE00000000FE
00000000FE00000000FE00000000FE007E0001FE00FE0001FC00FE0001FC00FE0001FC00
FE0003FC00FC0003F800E00003F000E00007F000E0000FE000E0000FC000E0001F800070
003F000078007E00003C00F800001E07F0000007FF80000001FC000000263A78B72A>I<
003C007E00FF01FF01FF01FF01FE01FC0070000000000000000000000000000000000000
0000000000000000000000000000000000000E003F807F80FF80FF80FF80FF007E003C00
102477A319>58 D<07FFFFFFFFFFFE0FFFFFFFFFFFFF0FFFFFFFFFFFFF07FFFFFFFFFFFE
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000007FFFFFFFFFFFC0FFFFFF
FFFFFFE0FFFFFFFFFFFFE07FFFFFFFFFFFC03816779F40>61 D<0000000001C000000000
0003C0000000000003C0000000000007C000000000000FC000000000000FC00000000000
1FC000000000001FE000000000003FE000000000003FE000000000007FE00000000000FF
E00000000000EFE00000000001EFE00000000001CFE000000000038FE000000000038FE0
00000000070FE000000000070FE0000000000E0FE0000000001E0FE0000000001C0FE000
000000380FE000000000380FE000000000700FF000000000700FF000000000E007F00000
0000E007F000000001C007F000000003C007F0000000038007F0000000070007F0000000
070007F00000000E0007F00000000E0007F00000001C0007F00000001C0007F000000038
0007F00000007FFFFFF00000007FFFFFF0000000FFFFFFF0000000E00007F8000001C000
03F8000001C00003F8000003800003F8000007800003F8000007000003F800000F000003
F800000E000003F800001C000003F800001C000003F8000038000003F8000078000003F8
000070000003F80000F0000003F80003F8000003F80007FC000007FC00FFFF8001FFFFF0
FFFF8001FFFFF0FFFF8001FFFFF0343C7BBB3E>65 D<0007FFFFFFFC000007FFFFFFFF80
0007FFFFFFFFC000000FF0001FF000000FE00007F800000FE00003F800001FE00003FC00
001FE00001FC00001FC00001FE00001FC00001FE00003FC00000FE00003FC00000FE0000
3F800001FE00003F800001FE00007F800001FE00007F800001FC00007F000003FC00007F
000003F80000FF000007F80000FF000007F00000FE00000FE00000FE00001FC00001FE00
003F800001FE00007F000001FC0001FE000001FC0007F8000003FFFFFFE0000003FFFFFF
C0000003F80007F0000003F80001FC000007F80000FE000007F800007F000007F000003F
800007F000003F80000FF000003FC0000FF000001FC0000FE000001FC0000FE000001FC0
001FE000001FC0001FE000003FC0001FC000003FC0001FC000003FC0003FC000003FC000
3FC000007F80003F8000007F80003F8000007F00007F800000FF00007F800001FE00007F
000003FC00007F000003F80000FF00000FF80000FF00001FE00000FE00003FC00001FE00
01FF8000FFFFFFFFFE0000FFFFFFFFF80000FFFFFFFFC0000037397BB83A>I<00000003
FE000E0000003FFF801E000000FFFFE03C000003FE01F03C00000FF000787C00003FC000
3CFC00007F00001FF80000FE00000FF80003FC00000FF80007F8000007F8000FF0000007
F0001FE0000003F0003FC0000003F0003F80000003F0007F00000003E000FF00000003E0
01FE00000003E001FC00000003E003FC00000003C007F800000003C007F800000003C00F
F000000003C00FF000000003801FE000000003801FE000000000001FE000000000003FC0
00000000003FC000000000003FC000000000007FC000000000007F8000000000007F8000
000000007F800000000000FF800000000000FF000000000000FF000000000000FF000000
000000FF000000000000FF000000003800FF000000003800FF000000007800FE00000000
7000FF000000007000FF00000000F0007F00000000E0007F00000001E0007F00000001C0
007F00000003C0003F8000000780003F8000000700001F8000000E00001FC000001E0000
0FC000003C00000FE0000078000007F00001F0000003F80003C0000001FE000F80000000
7F807E000000003FFFFC000000000FFFE00000000000FF00000000373D74BA3B>I<0003
FFFFFFFE00000003FFFFFFFFC0000003FFFFFFFFF000000007F8000FF800000007F00003
FC00000007F00000FE0000000FF000007F0000000FF000003F8000000FE000001F800000
0FE000001FC000001FE000000FC000001FE000000FE000001FC000000FE000001FC00000
07E000003FC0000007E000003FC0000007F000003F80000007F000003F80000007F00000
7F80000007F000007F80000007F000007F00000007F000007F00000007F00000FF000000
07F00000FF0000000FF00000FE0000000FF00000FE0000000FF00001FE0000000FF00001
FE0000000FE00001FC0000001FE00001FC0000001FE00003FC0000001FE00003FC000000
1FC00003F80000003FC00003F80000003FC00007F80000003F800007F80000007F800007
F00000007F000007F00000007F00000FF0000000FE00000FF0000000FE00000FE0000001
FC00000FE0000001F800001FE0000003F800001FE0000007F000001FC0000007E000001F
C000000FC000003FC000001F8000003FC000003F8000003F8000007F0000003F800000FC
0000007F800003F80000007F800007F00000007F00001FC0000000FF0001FF8000007FFF
FFFFFE000000FFFFFFFFF0000000FFFFFFFF800000003C397CB83F>I<0007FFFFFFFFFE
0007FFFFFFFFFE0007FFFFFFFFFE00000FF00007FE00000FE00000FE00000FE000007C00
001FE000003C00001FE000003C00001FC000003C00001FC000003C00003FC000003C0000
3FC000003C00003F8000003C00003F8000003800007F8000003800007F8000003800007F
0000003800007F000380380000FF000780380000FF000780000000FE000700000000FE00
0700000001FE000F00000001FE000F00000001FC001E00000001FC003E00000003FC00FE
00000003FFFFFE00000003FFFFFC00000003FFFFFC00000007F800FC00000007F8007C00
000007F0007800000007F000780000000FF000780000000FF000780000000FE000700000
000FE000700000001FE000F00000001FE000F00000001FC000000000001FC00000000000
3FC000000000003FC000000000003F8000000000003F8000000000007F8000000000007F
8000000000007F0000000000007F000000000000FF000000000000FF000000000000FE00
0000000001FF0000000000FFFFFF00000000FFFFFF00000000FFFFFF0000000037397BB8
36>70 D<0007FFFFFC000007FFFFFC000007FFFFF80000000FF8000000000FF000000000
0FE0000000001FE0000000001FE0000000001FC0000000001FC0000000003FC000000000
3FC0000000003F80000000003F80000000007F80000000007F80000000007F0000000000
7F0000000000FF0000000000FF0000000000FE0000000000FE0000000001FE0000000001
FE0000000001FC0000000001FC0000000003FC0000000003FC0000000003F80000000003
F80000000007F80000000007F80000000007F00000000007F0000000000FF0000000000F
F000000C000FE000001C000FE000001C001FE000003C001FE0000038001FC0000078001F
C0000078003FC0000070003FC00000F0003F800000E0003F800001E0007F800003E0007F
800003C0007F000007C0007F00000FC000FF00001F8000FF00003F8000FE0000FF8001FE
0007FF00FFFFFFFFFF00FFFFFFFFFF00FFFFFFFFFE002E397BB834>76
D<0007FFF800000007FFF00007FFF80000000FFFF00007FFF80000001FFFE000000FF800
00001FF00000000FF80000003FE00000000FF80000003FE00000001FF80000007FE00000
001FF8000000EFC00000001DF8000000EFC00000001CFC000001CFC00000003CFC000001
DFC00000003CFC0000039F8000000038FC0000071F8000000038FC0000071F8000000078
FC00000E3F8000000078FC00000E3F0000000070FC00001C3F0000000070FC00001C3F00
000000F0FC0000387F00000000F0FC0000707E00000000E0FC0000707E00000000E07E00
00E07E00000001E07E0000E0FE00000001E07E0001C0FC00000001C07E000380FC000000
01C07E000380FC00000003C07E000701FC00000003C07E000701F800000003807E000E01
F800000003807E000E01F800000007807E001C03F800000007807E003803F00000000700
7E003803F000000007003F007003F00000000F003F007007F00000000F003F00E007E000
00000E003F01C007E00000000E003F01C007E00000001E003F03800FE00000001E003F03
800FC00000001C003F07000FC00000001C003F07000FC00000003C003F0E001FC0000000
3C003F1C001F8000000038003F1C001F8000000038001FB8001F8000000078001FB8003F
8000000078001FF0003F0000000070001FE0003F0000000070001FE0003F00000000F000
1FC0007F00000000F0001FC0007E00000001F0001F80007E00000007F8001F8000FE0000
00FFFFC01F007FFFFC0000FFFFC01E007FFFFC0000FFFFC00E007FFFFC00004C397AB84A
>I<0003FFF80000FFFFE00003FFF80000FFFFE00003FFFC0000FFFFE0000007FC000007
F800000007FE000003F000000007FE000003E00000000FFE000003C00000000FFF000003
C00000000E7F000003800000000E7F000003800000001E7F800007800000001E3F800007
000000001C3F800007000000001C3FC00007000000003C1FC0000F000000003C1FE0000E
00000000380FE0000E00000000380FE0000E00000000780FF0001E000000007807F0001C
000000007007F0001C000000007007F8001C00000000F003F8003C00000000F003FC0038
00000000E003FC003800000000E001FC003800000001E001FE007800000001E000FE0070
00000001C000FE007000000001C000FF007000000003C0007F00F000000003C0007F00E0
0000000380007F80E00000000380003F80E00000000780003FC1E00000000780001FC1C0
0000000700001FC1C00000000700001FE1C00000000F00000FE3C00000000F00000FE380
0000000E00000FF3800000000E000007F3800000001E000007FF800000001E000007FF00
0000001C000003FF000000001C000003FF000000003C000001FF000000003C000001FE00
00000038000001FE0000000038000000FE0000000078000000FE0000000078000000FC00
000000F80000007C00000003FC0000007C0000007FFFE000003C000000FFFFE000003800
0000FFFFE000003800000043397CB83E>I<0007FFFFFFF8000007FFFFFFFF000007FFFF
FFFF8000000FF0003FE000000FE0000FF000000FE00003F800001FE00003F800001FE000
01FC00001FC00001FC00001FC00001FC00003FC00001FE00003FC00001FE00003F800001
FE00003F800001FE00007F800001FE00007F800003FC00007F000003FC00007F000003FC
0000FF000003F80000FF000007F80000FE000007F00000FE00000FE00001FE00000FE000
01FE00001FC00001FC00003F800001FC0000FE000003FC0001FC000003FC000FF0000003
FFFFFFC0000003FFFFFE00000007F8000000000007F8000000000007F0000000000007F0
00000000000FF000000000000FF000000000000FE000000000000FE000000000001FE000
000000001FE000000000001FC000000000001FC000000000003FC000000000003FC00000
0000003F8000000000003F8000000000007F8000000000007F8000000000007F00000000
00007F000000000000FF000000000000FF000000000000FE000000000001FE0000000000
FFFFFC00000000FFFFFC00000000FFFFFC0000000037397BB838>80
D<0003FFFFFFF0000003FFFFFFFE000003FFFFFFFF80000007F8003FC0000007F0000FF0
000007F00007F000000FF00003F800000FF00001FC00000FE00001FC00000FE00001FC00
001FE00001FE00001FE00001FE00001FC00001FE00001FC00001FE00003FC00001FE0000
3FC00003FC00003F800003FC00003F800003FC00007F800007F800007F800007F000007F
00000FF000007F00000FE00000FF00001FC00000FF00003F000000FE0000FE000000FE00
01F8000001FE000FE0000001FFFFFF80000001FFFFFC00000001FC003F00000003FC000F
80000003FC000FC0000003F80007E0000003F80007F0000007F80003F0000007F80003F0
000007F00003F0000007F00003F800000FF00007F800000FF00007F000000FE00007F000
000FE00007F000001FE0000FF000001FE0000FF000001FC0000FF000001FC0000FF00000
3FC0000FF000003FC0001FF000003F80001FE007003F80001FE007007F80001FE00F007F
80001FE00E007F00001FE00E00FF00000FE01C7FFFFE000FE03CFFFFFE0007F078FFFFFE
0003F0F00000000000FFE000000000003F80383B7CB83D>82 D<0000003FC00E000001FF
F01C000007FFFC1C00001FC07E3C00003F001F7C00007C000FF80000F80007F80001F000
03F80003E00003F80007C00001F00007C00001F0000F800001F0000F800001F0001F8000
01E0001F000001E0001F000001E0001F000001E0003F000001C0003F000001C0003F0000
01C0003F80000000003F80000000003FC0000000001FE0000000001FFC000000001FFF80
0000000FFFF00000000FFFFE00000007FFFF80000003FFFFE0000000FFFFF00000003FFF
F800000007FFF8000000007FFC000000000FFC0000000003FC0000000001FC0000000001
FC0000000000FC0000000000FC00000000007C000E0000007C000E0000007C000E000000
7C001E000000FC001E000000F8001E000000F8001E000000F8003E000001F0003E000001
F0003E000003E0003E000003E0007F000007C0007F00000F80007F80001F00007FC0003E
0000F9F000FC0000F8FC03F80000F07FFFE00000E01FFF800000C003FC0000002F3D7ABA
2F>I<07FFFFFFFFFFE007FFFFFFFFFFE00FFFFFFFFFFFE00FF800FF001FE00FC000FE00
07C01F8000FE0007C01F0001FE0003C01E0001FE0003C01C0001FC0003C03C0001FC0003
803C0003FC000380380003FC000380780003F8000380700003F8000780700007F8000780
F00007F8000700E00007F0000700E00007F0000700E0000FF000070000000FF000000000
000FE000000000000FE000000000001FE000000000001FE000000000001FC00000000000
1FC000000000003FC000000000003FC000000000003F8000000000003F8000000000007F
8000000000007F8000000000007F0000000000007F000000000000FF000000000000FF00
0000000000FE000000000000FE000000000001FE000000000001FE000000000001FC0000
00000001FC000000000003FC000000000003FC000000000003F8000000000003F8000000
000007F8000000000007F8000000000007F0000000000007F000000000000FF000000000
000FF000000000000FE000000000003FF0000000007FFFFFF8000000FFFFFFF8000000FF
FFFFF8000000333971B83B>I<0000F800000007FE0000001F871C00003E03FE00007C03
FE0000F801FE0001F801FE0003F000FC0007E000FC000FE000FC000FC001FC001FC001F8
001FC001F8003F8001F8003F8003F8007F8003F0007F0003F0007F0003F0007F0007F000
FF0007E000FE0007E000FE0007E000FE000FE000FE000FC000FC000FC1C0FC000FC1C0FC
001FC1C0FC001F83C0FC001F8380FC003F8380FC003F87807C007F87007C00FF07003E01
FF0F003E038F8E001F0F079E0007FE03FC0001F000F000222677A42A>97
D<003F00001FFF00001FFF00001FFF0000007F0000007E0000007E0000007E000000FE00
0000FC000000FC000000FC000001FC000001F8000001F8000001F8000003F8000003F000
0003F0000003F0000007F0000007E0F80007E7FE0007EF0F800FFC07C00FF807C00FF003
E00FE003E01FC003F01FC003F01F8003F01F8003F03F8003F03F0003F03F0003F03F0007
F07F0007F07E0007F07E0007F07E000FF0FE000FF0FC000FE0FC000FE0FC001FE0FC001F
C0F8001FC0F8003F80F8003F80F8003F00F8007F00F8007E00F800FC007801F8007C01F0
003C03E0003E07C0001E1F80000FFE000001F000001C3B77B926>I<00007F000003FFC0
000FC1E0001F0070007E007800FC003801F801F803F003F807F003F807E003F80FE003F8
1FC003F01FC000003F8000003F8000007F8000007F0000007F0000007F000000FF000000
FE000000FE000000FE000000FE000000FC000000FC000000FC000000FC000030FC000038
FC0000787C0000F07E0001E03E0003C03E000F801F003E000F81F80003FFE00000FF0000
1D2677A426>I<00000001F8000000FFF8000000FFF8000000FFF800000003F800000003
F000000003F000000007F000000007F000000007E000000007E00000000FE00000000FE0
0000000FC00000000FC00000001FC00000001FC00000001F800000001F800000003F8000
00003F800000F83F000007FE3F00001F877F00003E03FF00007C03FE0000F801FE0001F8
01FE0003F000FE0007E000FC000FE000FC000FC001FC001FC001FC001FC001F8003F8001
F8003F8003F8007F8003F8007F0003F0007F0003F0007F0007F000FF0007F000FE0007E0
00FE0007E000FE000FE000FE000FE000FC000FC1C0FC000FC1C0FC001FC1C0FC001FC3C0
FC001F8380FC003F8380FC003F87807C007F87007C00FF07003E01FF0F003E038F8E001F
0F079E0007FE03FC0001F000F000253B77B92A>I<00007F000003FFC0000FC1E0003F00
F0007E007800FC007801F8007803F0007807E000780FE000780FC000F81FC000F03F8001
F03F8007E03F801F807F81FF007FFFF8007FFF00007F000000FF000000FE000000FE0000
00FE000000FE000000FE000000FC000000FC000000FC0000307C0000387C0000787E0000
F03E0001E03E0003C01F000F800F003E000781F80003FFE00000FF00001D2677A426>I<
00000007C00000001FF00000003E380000007C3C000000F8FC000000F9FC000001F9FC00
0001F1FC000003F1F8000003F0F0000003F000000007F000000007E000000007E0000000
07E000000007E00000000FE00000000FC00000000FC00000000FC00000000FC00000001F
C00000001F8000000FFFFFC0001FFFFFC0001FFFFF8000003F800000003F000000003F00
0000003F000000003F000000007F000000007E000000007E000000007E000000007E0000
0000FE00000000FC00000000FC00000000FC00000000FC00000001FC00000001F8000000
01F800000001F800000001F800000003F800000003F000000003F000000003F000000003
F000000007F000000007E000000007E000000007E000000007E00000000FE00000000FC0
0000000FC00000000FC00000001FC00000001F800000001F800000001F800000001F0000
00003F0000001C3F0000007E3E0000007E3E000000FE3C000000FE7C000000FE78000000
F8F000000078F00000003FC00000000F80000000264C82BA19>I<000007C00000003FF0
000000FC38E00001F01FF00003E01FF00007C00FF0000F800FF0001F8007F0003F0007E0
007F0007E0007E000FE000FE000FE000FC000FC001FC000FC001FC001FC003FC001FC003
F8001F8003F8001F8003F8003F8007F8003F8007F0003F0007F0003F0007F0007F0007F0
007F0007E0007E0007E0007E0007E000FE0007E000FE0007E000FC0003E001FC0003E003
FC0003E007FC0001F00FF80000F01FF80000787BF800003FF3F800000FC3F000000003F0
00000007F000000007F000000007E000000007E00000000FE00000000FC0001C000FC000
7E001FC0007E001F8000FE003F0000FE007E0000FE00FC00007801F800007C07E000001F
FF80000003FE00000024367CA426>I<0003F0000001FFF0000001FFF0000001FFF00000
0007F000000007E000000007E000000007E00000000FE00000000FC00000000FC0000000
0FC00000001FC00000001F800000001F800000001F800000003F800000003F000000003F
000000003F000000007F000000007E07F000007E1FFC00007E783E0000FFE01F0000FFC0
1F8000FF800F8000FF000F8001FE000F8001FE000FC001FC000FC001F8001F8003F8001F
8003F0001F8003F0001F8003F0003F8007F0003F0007E0003F0007E0003F0007E0007F00
0FE0007E000FC0007E000FC000FE000FC000FC001FC000FC001F8001FC1C1F8001F81C1F
8001F83C3F8003F8383F0003F0383F0003F0383F0003F0707F0003E0707E0003E0F07E00
03E0E07E0003E1C0FE0001E380FC0000FF003800003C00263B7BB92A>I<0001C00007E0
0007F0000FF0000FE00007E0000380000000000000000000000000000000000000000000
00000000000000000000000000F00003FC00071E000E1F001C1F001C1F00381F00383F00
703F00703F00707F00F07E00E07E00E0FE0000FC0000FC0001FC0001F80003F80003F800
03F00007F00007E00007E0000FE0E00FC0E00FC1E01FC1C01F81C01F81C01F83801F0380
1F07001F07001F0E000F1C0007F80001E000143879B619>I<0000000E0000003F000000
7F0000007F0000007F0000007E0000001C00000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000001F8000007FC00000F1
F00001C0F0000380F8000780F8000701F8000F01F8000E01F8001E01F8001C03F8003C03
F8003803F0003803F0000007F0000007F0000007E0000007E000000FE000000FE000000F
C000000FC000001FC000001FC000001F8000001F8000003F8000003F8000003F0000003F
0000007F0000007F0000007E0000007E000000FE000000FE000000FC000000FC000001FC
000001FC000001F8000001F8000003F8000003F0001C03F0007E07E0007E07E000FE0FC0
00FE0F8000FE1F0000F83E0000787C00003FF000000FC00000204883B619>I<0003F000
0001FFF0000001FFF0000001FFF000000007F000000007E000000007E000000007E00000
000FE00000000FC00000000FC00000000FC00000001FC00000001F800000001F80000000
1F800000003F800000003F000000003F000000003F000000007F000000007E000F80007E
003FE0007E00F0E000FE01C1F000FC0387F000FC0707F000FC0E07F001FC1C07E001F838
07E001F830038001F870000003F8E0000003F1C0000003F380000003FF00000007FC0000
0007FE00000007FFC0000007E7F800000FE1FC00000FC07E00000FC07F00000FC03F0000
1FC03F80001F801F81C01F801F81C01F801F83C03F803F83803F003F03803F003F03803F
003F07807F003F07007E003E07007E001E0E007E001E1E00FE000F3C00FC0007F8003800
01E000243B7BB926>I<000FC007FFC007FFC007FFC0001FC0001F80001F80003F80003F
80003F00003F00007F00007F00007E00007E0000FE0000FE0000FC0000FC0001FC0001FC
0001F80001F80003F80003F80003F00003F00007F00007F00007E00007E0000FE0000FE0
000FC0000FC0001FC0001FC0001F80001F80003F80003F80003F00003F00007F00007F00
007E0E007E0E00FE0E00FE1E00FC1C00FC1C00FC3C00FC3800F83800F878007870007CE0
001FE0000F8000123B79B915>I<01E000FE0007F00007F803FF801FFC000E3C0F07C078
3E001E3E3C03E1E01F001C1F7803F3C01F80383FF001F7800F80383FE001F7000F80783F
C001FE000F80703FC001FE000FC0703F8001FC000FC0703F0003F8001F80F07F0003F800
1F80E07E0003F0001F80E07E0003F0001F80007E0007F0003F8000FE0007F0003F0000FC
0007E0003F0000FC0007E0003F0000FC000FE0007F0001FC000FE0007E0001F8000FC000
7E0001F8000FC000FE0001F8001FC000FC0003F8001FC000FC0003F0001F8001FC1C03F0
001F8001F81C03F0003F8001F83C07F0003F8003F83807E0003F0003F03807E0003F0003
F03807E0007F0003F0700FE0007F0003E0700FC0007E0003E0F00FC0007E0003E0E00FC0
00FE0003E1C01FC000FE0001E3C01F8000FC0000FF000700003800003C003E2679A444>
I<01E000FE000007F803FF80000E3C0F07C0001E3E3C03E0001C1F7803F000383FF001F0
00383FE001F000783FC001F000703FC001F800703F8001F800703F0003F000F07F0003F0
00E07E0003F000E07E0003F000007E0007F00000FE0007E00000FC0007E00000FC0007E0
0000FC000FE00001FC000FC00001F8000FC00001F8001FC00001F8001F800003F8001F80
0003F0003F838003F0003F038003F0003F078007F0007F070007E0007E070007E0007E07
0007E0007E0E000FE0007C0E000FC0007C1E000FC0007C1C000FC0007C38001FC0003C78
001F80001FE000070000078000292679A42F>I<00007F000003FFC0000FC1F0001F00F8
007E007C00FC007C01F8007E03F0003E07F0003F07E0003F0FE0003F1FC0003F1FC0003F
3F80003F3F80007F7F80007F7F00007F7F00007F7F0000FFFF0000FFFE0000FEFE0000FE
FE0001FEFE0001FCFC0001FCFC0003F8FC0003F8FC0007F0FC0007E0FC000FE07C000FC0
7E001F803E003F003E007E001F00F8000F83F00003FFC00000FE0000202677A42A>I<00
078007C000001FE03FF000003CF0787C000038F8E03E0000787FC03E0000707F801F0000
70FF001F0000F0FE001F8000E0FE001F8000E0FC001F8001E1FC001F8001C1FC001F8001
C1F8001F8001C1F8001F800003F8003F800003F8003F800003F0003F800003F0003F8000
07F0007F800007F0007F800007E0007F000007E0007F00000FE000FF00000FE000FE0000
0FC000FE00000FC001FC00001FC001FC00001FC001F800001F8003F800001F8003F00000
3F8007E000003FC00FC000003FC00F8000003FE01F0000007FE03E0000007F70FC000000
7E3FF00000007E0F80000000FE0000000000FE0000000000FC0000000000FC0000000001
FC0000000001FC0000000001F80000000001F80000000003F80000000003F80000000003
F00000000007F000000000FFFFC0000000FFFFC0000000FFFFC0000000293580A42A>I<
0000F8030007FE07001F871F003E03BF007C03FE00F801FE01F801FE03F000FE07E000FC
0FE000FC0FC000FC1FC001FC1FC001F83F8001F83F8001F87F8003F87F0003F07F0003F0
7F0003F0FF0007F0FE0007E0FE0007E0FE0007E0FE000FE0FC000FC0FC000FC0FC000FC0
FC001FC0FC001F80FC003F80FC003F807C007F807C00FF003E01FF003E03BF001F0F7F00
07FE7E0001F07E0000007E000000FE000000FC000000FC000000FC000001FC000001F800
0001F8000001F8000003F8000003F0000007F00001FFFFC001FFFFC001FFFFC0203577A4
26>I<03C003F0000FF01FFC001E783C0F001C7C700F003C3EE03F80383FC03F80387F80
3F80787F803F00707F003F00707F001C00F07E000000E0FE000000E0FC000000E0FC0000
0000FC00000001FC00000001F800000001F800000001F800000003F800000003F0000000
03F000000003F000000007F000000007E000000007E000000007E00000000FE00000000F
C00000000FC00000000FC00000001FC00000001F800000001F800000001F800000003F80
0000003F000000000E00000000212679A423>I<0000FE000007FF80000F83C0003E00E0
007C00F00078007000F800F001F803F001F003F001F003F001F003E003F001C003F80000
03FC000003FFC00001FFF80001FFFE0000FFFF00007FFF80003FFF80000FFFC00000FFC0
00003FC000001FC000000FC03E000FC07E000FC0FE000F80FE000F80FE000F80FC001F00
E0001F00F0003E0070007C003800F8001E03E0000FFFC00001FE00001C267AA422>I<00
03800007C0000FC0000FC0000FC0000FC0001FC0001F80001F80001F80003F80003F0000
3F00003F00007F00007E007FFFFF7FFFFFFFFFFF00FC0000FC0000FC0001FC0001F80001
F80001F80003F80003F00003F00003F00007F00007E00007E00007E0000FE0000FC0000F
C0000FC0001FC0001F801C1F801C1F803C3F80383F00783F00703F00F03F00E03F01C03E
03C01F07800F0F0007FC0001F000183579B31C>I<00F800000003FE0001C0078F0003E0
0E0F8007E01E0F8007E01C0F8007E0380F800FE0381F800FE0781F800FC0701F800FC070
3F801FC0F03F001FC0E03F001F80E07F001F80007E003F80007E003F8000FE003F0000FC
003F0000FC007F0001FC007F0001F8007E0001F8007E0001F800FE0003F800FE0003F000
FC0E03F000FC0E03F001FC1E03F001FC1C03F001F81C03E001F81C03E001F83C03F003F8
3803F007F83801F007F07001F01EF8F000F83C78E0003FF03FC0000FC00F00272679A42D
>I<00F0000E0003FC003F00071E007F800E1F007F801C1F007F803C1F007F80381F003F
80383F001F80703F000F80703F000F80707F000F80F07E000F00E07E000700E0FE000700
00FC000F0000FC000E0001FC000E0001F8000E0001F8001E0003F8001C0003F0001C0003
F0001C0003F0003C0007F000380007E000380007E000700007E000700007E000700007E0
00E00007E000E00007E001C00007E003C00003E003800003F007000001F00E000000F83C
0000007FF80000000FC00000212679A426>I<00F0000000070003FC0003801F80071E00
07C03FC00E1F000FC03FC01C1F000FC03FC03C1F000FC03FC0381F001FC01FC0383F001F
800FC0703F001F8007C0703F001F8007C0707F003F8007C0F07E003F800780E07E003F00
0380E0FE003F00038000FC007F00078000FC007F00070001FC007E00070001F8007E0007
0001F800FE000F0003F800FE000E0003F000FC000E0003F000FC000E0003F000FC001E00
07F001FC001C0007E001F8001C0007E001F8003C0007E001F800380007E001F800380007
E001F800780007E001F800700007E003F800F00007E003F800E00003E007F801E00003F0
0FFC03C00001F01E7C07800000FC3C3E0F0000003FF81FFE0000000FE003F00000322679
A437>I<0007E007C0001FF81FF800787C383C00F03E703C01E01EE0FE03C01FE0FE0380
1FC0FE07001FC0FC0F001F80FC0E001F80700E003F80001E003F00001C003F00001C003F
000000007F000000007F000000007E000000007E00000000FE00000000FE00000000FC00
000000FC00000001FC00000001FC00000001F800700001F800700003F800F00003F800E0
1C03F000E07E03F001E07E07F001C0FE07F00380FE0FF00780FE0EF00F00781CF81E0078
387C3C003FF03FF00007C00FC00027267CA427>I<00F000000003FC0001C0071E0003E0
0E1F0007E01C1F0007E03C1F0007E0381F000FE0383F000FC0703F000FC0703F000FC070
7F001FC0F07E001F80E07E001F80E0FE001F8000FC003F8000FC003F0001FC003F0001F8
003F0001F8007F0003F8007E0003F0007E0003F0007E0003F000FE0007F000FC0007E000
FC0007E000FC0007E001FC0007E001F80007E001F80007E001F80007E003F80007E003F0
0007E007F00003E00FF00003F01FF00001F87FE000007FF7E000001FC7E00000000FE000
00000FC00000000FC00000001FC0003F001F80007F003F80007F003F00007F007E00007F
007C00007E00FC00007001F800007003E000003807C000003C1F8000000FFE00000003F0
000000233679A428>I E /Fn 9 54 df<0006000C00180030006000E001C00380038007
000F000E001E001E001C003C003C003C0078007800780078007800F800F000F000F000F0
00F000F000F000F000F000F000F000F800780078007800780078003C003C003C001C001E
001E000E000F0007000380038001C000E0006000300018000C00060F3B7AAB1A>40
D<C0006000300018000C000E0007000380038001C001E000E000F000F000700078007800
78003C003C003C003C003C003E001E001E001E001E001E001E001E001E001E001E001E00
3E003C003C003C003C003C007800780078007000F000F000E001E001C00380038007000E
000C00180030006000C0000F3B7DAB1A>I<00000E00000000000E00000000000E000000
00000E00000000000E00000000000E00000000000E00000000000E00000000000E000000
00000E00000000000E00000000000E00000000000E00000000000E00000000000E000000
00000E00000000000E00000000000E00000000000E00000000000E000000FFFFFFFFFFE0
FFFFFFFFFFE0FFFFFFFFFFE000000E00000000000E00000000000E00000000000E000000
00000E00000000000E00000000000E00000000000E00000000000E00000000000E000000
00000E00000000000E00000000000E00000000000E00000000000E00000000000E000000
00000E00000000000E00000000000E00000000000E0000002B2B7DA333>43
D<003F800001FFF00003E0F80007803C000F001E001E000F003E000F803E000F803C0007
807C0007C07C0007C07C0007C07C0007C0FC0007E0FC0007E0FC0007E0FC0007E0FC0007
E0FC0007E0FC0007E0FC0007E0FC0007E0FC0007E0FC0007E0FC0007E0FC0007E0FC0007
E07C0007C07C0007C07C0007C03E000F803E000F803E000F801F001F000F001E0007803C
0003E0F80001FFF000003F80001B277EA521>48 D<00380000780001F8001FF800FEF800
E0F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F800
00F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F800
00F80000F80000F80000F80000F80000F80001FC00FFFFF8FFFFF815267BA521>I<00FF
000003FFE0000E03F0001800F80030007C0060007E0078003F00FC003F00FE001F80FE00
1F80FE001F80FE001F807C001F8000001F8000001F0000003F0000003E0000007E000000
7C000000F8000001F0000003E0000003C00000078000000E0000001C0000003800000070
018000E001800180018003000300060003000C0003001FFFFF003FFFFF007FFFFE00FFFF
FE00FFFFFE0019267DA521>I<00FF000003FFE0000F01F8001C007C0030007E003C003E
007E003F007E003F007E003F007E003F003C003F0000003E0000007E0000007C000000F8
000001F0000007E00001FF800001FF00000001E0000000F00000007C0000003E0000003F
0000001F0000001F8000001F8038001F807C001F80FE001F80FE001F80FE001F00FC003F
0078003E0070007C003800F8001F01F00007FFC00000FF000019277DA521>I<00003800
00003800000078000000F8000001F8000001F8000003F8000007F8000006F800000CF800
001CF8000018F8000030F8000070F8000060F80000C0F80001C0F8000180F8000300F800
0700F8000E00F8000C00F8001C00F8003800F8003000F8006000F800E000F800FFFFFFE0
FFFFFFE00000F8000000F8000000F8000000F8000000F8000000F8000000F8000001FC00
003FFFE0003FFFE01B277EA621>I<18000C001F007C001FFFF8001FFFF0001FFFE0001F
FF800019FC00001800000018000000180000001800000018000000180000001800000018
7F000019FFE0001F81F0001E0078001C003C0018003E0000003E0000001F0000001F0000
001F8000001F8030001F807C001F80FC001F80FC001F80FC001F80FC001F00F0001F0060
003E0070003E0030007C001C00F8000F03E00003FFC00000FE000019277DA521>I
E /Fo 43 122 df<1C007F00FF80FF80FF80FF80FF807F001C000909798817>58
D<1C007F00FF80FF80FFC0FFC0FFC07FC01CC000C000C000C000C001C001800180038003
00070006000E001C003800700060000A19798817>I<0000000000038000000000000FC0
00000000003FC00000000000FF800000000003FE00000000000FF800000000003FE00000
000000FF800000000003FE00000000000FF800000000003FE00000000000FF8000000000
03FE00000000000FF800000000003FE00000000000FF800000000003FE00000000000FF8
00000000003FE00000000000FF800000000003FE00000000000FF800000000003FE00000
0000007F800000000000FE000000000000FE0000000000007F8000000000003FE0000000
00000FF8000000000003FE000000000000FF8000000000003FE000000000000FF8000000
000003FE000000000000FF8000000000003FE000000000000FF8000000000003FE000000
000000FF8000000000003FE000000000000FF8000000000003FE000000000000FF800000
0000003FE000000000000FF8000000000003FE000000000000FF8000000000003FC00000
0000000FC000000000000380323279AD41>I<60000000000000FC000000000000FF0000
000000007FC000000000001FF0000000000007FC000000000001FF0000000000007FC000
000000001FF0000000000007FC000000000001FF0000000000007FC000000000001FF000
0000000007FC000000000001FF0000000000007FC000000000001FF0000000000007FC00
0000000001FF0000000000007FC000000000001FF0000000000007FC000000000001FF00
00000000007F8000000000001FC000000000001FC000000000007F800000000001FF0000
00000007FC00000000001FF000000000007FC00000000001FF000000000007FC00000000
001FF000000000007FC00000000001FF000000000007FC00000000001FF000000000007F
C00000000001FF000000000007FC00000000001FF000000000007FC00000000001FF0000
00000007FC00000000003FF000000000007FC00000000000FF000000000000FC00000000
000070000000000000323279AD41>62 D<00000000006000000000000070000000000000
F0000000000001F0000000000001F0000000000003F0000000000003F0000000000007F0
00000000000FF000000000000FF000000000001FF800000000001FF8000000000033F800
0000000073F8000000000063F80000000000C3F80000000000C3F8000000000183F80000
00000183F8000000000303F8000000000603F8000000000603FC000000000C03FC000000
000C01FC000000001801FC000000003001FC000000003001FC000000006001FC00000000
6001FC00000000C001FC00000001C001FC000000018001FC000000030001FE0000000300
01FE000000060000FE0000000E0000FE0000000C0000FE000000180000FE0000001FFFFF
FE0000003FFFFFFE0000003FFFFFFE000000600000FE000000C00000FE000000C00000FF
000001800000FF0000018000007F0000030000007F0000060000007F0000060000007F00
000C0000007F00000C0000007F0000180000007F0000380000007F0000700000007F0000
F00000007F8001F80000007F8007F8000000FF80FFFF80003FFFFFFFFF80007FFFFFFFFF
80007FFFFF383C7DBB3E>65 D<0003FFFFFFFF80000007FFFFFFFFF0000007FFFFFFFFFC
00000007F80003FE00000007F00000FF00000007F000007F8000000FF000003FC000000F
F000001FC000000FE000001FE000000FE000001FE000001FE000001FE000001FE000001F
E000001FC000001FE000001FC000001FE000003FC000001FE000003FC000001FC000003F
8000003FC000003F8000003F8000007F8000007F8000007F8000007F0000007F000000FE
0000007F000001FC000000FF000003F8000000FF00000FF0000000FE00001FC0000000FE
0000FF00000001FFFFFFFC00000001FFFFFFF800000001FC0000FF00000001FC00003FC0
000003FC00000FE0000003FC000007F0000003F8000007F0000003F8000003F8000007F8
000003F8000007F8000003FC000007F0000001FC000007F0000001FC00000FF0000001FC
00000FF0000003FC00000FE0000003FC00000FE0000003FC00001FE0000003FC00001FE0
000007F800001FC0000007F800001FC000000FF000003FC000000FF000003FC000001FE0
00003F8000003FC000003F8000007F8000007F800000FF0000007F800001FE0000007F00
0007FC000000FF00003FF00000FFFFFFFFFFC00000FFFFFFFFFF000000FFFFFFFFF80000
003B397DB83F>I<00000000FF8001C00000000FFFE001C00000007FFFF80380000001FF
807E0780000007F8000F0F8000001FE000079F8000003F800003BF000000FF000001FF00
0001FC000000FF000003F8000000FF000007F00000007E00000FE00000007E00001FC000
00007E00003F800000003E00007F800000003C0000FF000000003C0000FE000000003C00
01FE000000003C0003FC00000000380003F800000000380007F80000000038000FF00000
000038000FF00000000030001FF00000000030001FE00000000000001FE0000000000000
3FC00000000000003FC00000000000003FC00000000000007FC00000000000007F800000
000000007F800000000000007F80000000000000FF80000000000000FF00000000000000
FF00000000000000FF00000000000000FF00000000000000FF00000000030000FF000000
00030000FF00000000070000FF00000000060000FF000000000600007F000000000E0000
7F000000000C00007F000000001C00007F000000003800003F800000003800003F800000
007000001F80000000E000001FC0000001C000000FE00000038000000FE0000007800000
07F000000E00000003F800003C00000001FC00007800000000FF0001F0000000003FE00F
C0000000000FFFFF000000000003FFFC0000000000007FC0000000003A3D7CBA3B>I<00
03FFFFFFFF00000007FFFFFFFFE0000007FFFFFFFFF800000007F80007FE00000007F000
00FF00000007F000003F8000000FF000001FC000000FF000000FC000000FE000000FE000
000FE0000007F000001FE0000003F000001FE0000003F000001FC0000003F800001FC000
0001F800003FC0000001F800003FC0000001FC00003F80000001FC00003F80000001FC00
007F80000001FC00007F80000001FC00007F00000001FC00007F00000001FC0000FF0000
0001FC0000FF00000003FC0000FE00000003FC0000FE00000003FC0001FE00000003FC00
01FE00000003F80001FC00000007F80001FC00000007F80003FC00000007F80003FC0000
0007F00003F80000000FF00003F80000000FF00007F80000000FE00007F80000001FE000
07F00000001FC00007F00000001FC0000FF00000003F80000FF00000003F80000FE00000
007F00000FE00000007E00001FE0000000FE00001FE0000001FC00001FC0000001F80000
1FC0000003F000003FC0000007E000003FC000000FC000003F8000001F8000003F800000
7F0000007F800000FE0000007F800003FC0000007F00000FF0000000FF00007FC00000FF
FFFFFFFF000000FFFFFFFFFC000000FFFFFFFFC00000003E397DB845>I<0003FFFFFFFF
FFE00007FFFFFFFFFFE00007FFFFFFFFFFE0000007F800003FE0000007F000000FE00000
07F0000003C000000FF0000003C000000FF0000001C000000FE0000001C000000FE00000
01C000001FE0000001C000001FE0000001C000001FC0000001C000001FC0000001800000
3FC00000018000003FC00000018000003F800000018000003F800060018000007F8000E0
018000007F8000E0000000007F0000C0000000007F0000C000000000FF0001C000000000
FF0001C000000000FE00038000000000FE00078000000001FE001F8000000001FFFFFF80
00000001FFFFFF0000000001FFFFFF0000000003FC001F0000000003FC000F0000000003
F8000E0000000003F8000E0000000007F8000E0000000007F8000E0000000007F0000C00
00000007F0000C000000000FF0001C000000000FF0001C000000000FE00000000000000F
E00000000000001FE00000000000001FE00000000000001FC00000000000001FC0000000
0000003FC00000000000003FC00000000000003F800000000000003F800000000000007F
800000000000007F800000000000007F00000000000000FF800000000000FFFFFFC00000
0000FFFFFFC000000000FFFFFFC0000000003B397DB835>70 D<0003FFFFF80007FFFC00
07FFFFF80007FFFC0007FFFFF80007FFFC000007F8000000FF80000007F0000000FC0000
0007F0000000F00000000FF0000001E00000000FF0000003800000000FE0000007000000
000FE000000E000000001FE0000038000000001FE0000070000000001FC00000E0000000
001FC0000380000000003FC0000700000000003FC0000E00000000003F80003C00000000
003F80007000000000007F8000E000000000007F8001C000000000007F00070000000000
007F000E000000000000FF001C000000000000FF007E000000000000FE00FE0000000000
00FE01FF000000000001FE03FF000000000001FE0E7F800000000001FC1C7F8000000000
01FC383F800000000003FCE03FC00000000003FDC03FC00000000003FB801FE000000000
03FF001FE00000000007FC000FF00000000007F8000FF00000000007F00007F000000000
07F00007F8000000000FF00007F8000000000FF00003FC000000000FE00003FC00000000
0FE00001FC000000001FE00001FE000000001FE00001FE000000001FC00000FF00000000
1FC00000FF000000003FC000007F800000003FC000007F800000003F8000003F80000000
3F8000003FC00000007F8000003FC00000007F8000001FE00000007F0000003FE0000000
FF8000003FF00000FFFFFF0007FFFFC000FFFFFF0007FFFFC000FFFFFF0007FFFF800046
397DB847>75 D<0003FFF8000000003FFF800007FFF8000000007FFF800007FFFC000000
007FFF80000007FC00000000FF8000000006FC00000001BF0000000006FC00000001BF00
0000000EFC000000037F000000000EFC000000037E000000000CFC000000067E00000000
0CFC0000000C7E000000001C7E0000000CFE000000001C7E00000018FC00000000187E00
000030FC00000000187E00000030FC00000000387E00000061FC00000000387E00000061
F800000000307E000000C1F800000000307E00000181F800000000703F00000183F80000
0000703F00000303F000000000603F00000603F000000000603F00000603F000000000E0
3F00000C07F000000000E03F00000C07E000000000C03F00001807E000000000C03F0000
3007E000000001C01F8000300FE000000001C01F8000600FC000000001801F8000C00FC0
00000001801F8000C00FC000000003801F8001801FC000000003801F8003001F80000000
03001F8003001F8000000003000FC006001F8000000007000FC006003F8000000007000F
C00C003F0000000006000FC018003F0000000006000FC018003F000000000E000FC03000
7F000000000E000FC060007E000000000C000FC060007E000000000C0007E0C0007E0000
00001C0007E0C000FE000000001C0007E18000FC00000000180007E30000FC0000000018
0007E30000FC00000000380007E60001FC00000000380007EC0001F800000000300007EC
0001F800000000300003F80001F800000000700003F80003F800000000700003F00003F0
00000000F00003E00003F000000007FC0003E00007F8000000FFFFE003C007FFFFF00000
FFFFE0038007FFFFF00000FFFFE0018007FFFFF0000051397CB851>77
D<0003FFF800001FFFF80007FFFC00003FFFF80007FFFC00003FFFF8000007FC000001FF
00000007FE0000007C00000006FE000000780000000EFF000000700000000E7F00000070
0000000C7F800000600000000C7F800000600000001C3F800000E00000001C3FC00000C0
000000181FC00000C0000000181FE00000C0000000381FE00001C0000000380FF0000180
000000300FF00001800000003007F00001800000007007F80003800000007003F8000300
0000006003FC0003000000006003FC000300000000E001FC000700000000E001FE000600
000000C000FE000600000000C000FF000600000001C0007F000E00000001C0007F800C00
00000180007F800C0000000180003F800C0000000380003FC01C0000000380001FC01800
00000300001FE0180000000300000FE0180000000700000FF0380000000700000FF03000
000006000007F03000000006000007F8300000000E000003F8700000000E000003FC6000
00000C000003FC600000000C000001FE600000001C000001FEE00000001C000000FEC000
000018000000FFC0000000180000007FC0000000380000007FC0000000380000007F8000
0000300000003F80000000300000003F80000000700000001F80000000700000001F0000
0000F00000000F00000007FC0000000F000000FFFFE000000F000000FFFFE00000060000
00FFFFE000000600000045397DB843>I<00000001FF00000000001FFFF000000000FE01
FC00000003F0007E00000007C0001F8000001F80000FC000003E000007E00000FC000003
F00001F8000003F00003F0000001F80007E0000001F8000FC0000000FC001F80000000FC
003F00000000FE007F000000007E00FE000000007E00FC000000007F01FC000000007F03
F8000000007F03F8000000007F07F0000000007F07F0000000007F0FF0000000007F0FE0
000000007F1FE000000000FF1FE000000000FF3FC000000000FF3FC000000000FF3FC000
000000FF7F8000000001FE7F8000000001FE7F8000000001FE7F8000000001FEFF800000
0003FCFF0000000003FCFF0000000003FCFF0000000007F8FF0000000007F8FF00000000
0FF0FF000000000FF0FF000000000FE0FF000000001FE0FF000000001FC0FF000000003F
807F000000007F807F000000007F007F00000000FE007F00000001FC003F80000001F800
3F80000003F8001F80000007F0001FC000000FE0000FC000001F800007E000003F000007
F000007E000003F00001F8000001FC0003F00000007E000FC00000003F807F0000000007
FFF80000000000FF80000000383D7CBA3F>I<0003FFFFFFFF00000007FFFFFFFFE00000
07FFFFFFFFF800000007F80007FC00000007F00000FE00000007F000007F0000000FF000
003F8000000FF000001FC000000FE000001FC000000FE000001FC000001FE000001FE000
001FE000001FE000001FC000001FE000001FC000001FE000003FC000001FE000003FC000
003FC000003F8000003FC000003F8000003FC000007F8000007F8000007F8000007F8000
007F0000007F0000007F000000FE000000FF000001FC000000FF000001F8000000FE0000
07F0000000FE00000FE0000001FE00003FC0000001FE0001FF00000001FFFFFFFC000000
01FFFFFFE000000003FC00000000000003FC00000000000003F800000000000003F80000
0000000007F800000000000007F800000000000007F000000000000007F0000000000000
0FF00000000000000FF00000000000000FE00000000000000FE00000000000001FE00000
000000001FE00000000000001FC00000000000001FC00000000000003FC0000000000000
3FC00000000000003F800000000000003F800000000000007F800000000000007F800000
000000007F00000000000000FF800000000000FFFFFF0000000000FFFFFF0000000000FF
FFFF00000000003B397DB835>I<0003FFFFFFF800000007FFFFFFFF80000007FFFFFFFF
E000000007F8001FF800000007F00003FC00000007F00000FE0000000FF000007F000000
0FF000007F0000000FE000003F8000000FE000003F8000001FE000003FC000001FE00000
3FC000001FC000003FC000001FC000003FC000003FC000003FC000003FC000007F800000
3F8000007F8000003F8000007F8000007F800000FF0000007F800000FE0000007F000001
FC0000007F000003F8000000FF000007F0000000FF00000FE0000000FE00001F80000000
FE00007F00000001FE0007F800000001FFFFFFE000000001FFFFFF0000000001FC000FC0
00000003FC0003F000000003FC0001F800000003F80000FC00000003F80000FE00000007
F80000FE00000007F800007E00000007F000007E00000007F000007F0000000FF00000FF
0000000FF00000FE0000000FE00000FE0000000FE00000FE0000001FE00001FE0000001F
E00001FE0000001FC00001FE0000001FC00001FE0000003FC00001FE0000003FC00003FE
0000003F800003FC0060003F800003FC0060007F800003FC00E0007F800003FC00C0007F
000003FC01C000FF800001FC0180FFFFFF0001FC0380FFFFFF0000FE0700FFFFFF00007E
0E0000000000001FFC00000000000007F0003B3B7DB83F>82 D<0000001FE00380000000
FFFC0300000003FFFE070000000FE01F8F0000003F0007DF0000007E0001FE000000F800
00FE000001F00000FE000003E000007E000003E000007C000007C000003C00000F800000
3C00000F8000003C00001F8000003800001F0000003800001F0000003800001F00000038
00003F0000003000003F0000003000003F8000003000003F8000000000003FC000000000
003FE000000000001FF000000000001FFE00000000001FFFE0000000000FFFFE00000000
07FFFFC000000003FFFFF000000001FFFFF800000000FFFFFC000000001FFFFE00000000
03FFFF00000000003FFF000000000003FF800000000000FF8000000000007F8000000000
003F8000000000001F8000000000001F8000000000001F80000C0000001F80000C000000
0F80000C0000000F80001C0000001F80001C0000001F00001C0000001F00001C0000001F
00003C0000003E00003C0000003E00003C0000007C00003E000000F800007E000000F800
007F000001F000007F800003E000007FC0000FC00000F9F0001F800000F0FE00FE000000
E03FFFF8000000E00FFFE0000000C001FF00000000313D7CBA33>I<03FFFFFFFFFFFE03
FFFFFFFFFFFE07FFFFFFFFFFFE07F8003FC001FE07C0003F80007E0F80003F80003C0F00
007F80001C1E00007F80001C1C00007F00001C1C00007F00001C380000FF00001C380000
FF00001C300000FE00001C700000FE000018600001FE000018E00001FE000018C00001FC
000018C00001FC000018C00003FC000018000003FC000000000003F8000000000003F800
0000000007F8000000000007F8000000000007F0000000000007F000000000000FF00000
0000000FF000000000000FE000000000000FE000000000001FE000000000001FE0000000
00001FC000000000001FC000000000003FC000000000003FC000000000003F8000000000
003F8000000000007F8000000000007F8000000000007F0000000000007F000000000000
FF000000000000FF000000000000FE000000000000FE000000000001FE000000000001FE
000000000001FC000000000001FC000000000003FC000000000003FC000000000003F800
000000000FFC000000003FFFFFFF0000007FFFFFFF0000007FFFFFFF00000037397EB831
>I<3FFFFF8001FFFF807FFFFF8003FFFF807FFFFF8003FFFF80007F8000001FF000007F
00000007C000007F00000007800000FF00000007000000FF00000007000000FE00000006
000000FE00000006000001FE0000000E000001FE0000000C000001FC0000000C000001FC
0000000C000003FC0000001C000003FC00000018000003F800000018000003F800000018
000007F800000038000007F800000030000007F000000030000007F00000003000000FF0
0000007000000FF00000006000000FE00000006000000FE00000006000001FE0000000E0
00001FE0000000C000001FC0000000C000001FC0000000C000003FC0000001C000003FC0
0000018000003F800000018000003F800000018000007F800000038000007F8000000300
00007F000000030000007F000000030000007F00000007000000FF00000006000000FE00
000006000000FE0000000E000000FE0000000C000000FE0000001C000000FE0000001800
0000FE00000038000000FE000000700000007E000000700000007E000000E00000007E00
0001C00000003F000003800000003F000007000000001F80001E000000000FC0003C0000
000007E000F80000000003F807E00000000001FFFFC000000000007FFE0000000000000F
F00000000000393B7BB839>I<7FFFFC01FFFFF800FFFF80FFFFFC01FFFFF800FFFF80FF
FFFC01FFFFF000FFFF8003FF000007FC00000FF80003FC000007F8000003E00001FC0000
07F8000003C00001FC000003F8000003800001FC000003F8000003000001FC000003F800
0007000001FC000003F8000006000001FC000007F800000C000001FC000007F800000C00
0001FC00000FF8000018000001FC00000FF8000018000001FC00001BF8000030000001FC
00001BF8000060000001FC000033F8000060000001FE000073F80000C0000001FE000063
F80000C0000000FE0000C3F8000180000000FE0000C3FC000180000000FE000183FC0003
00000000FE000181FC000700000000FE000301FC000600000000FE000701FC000C000000
00FE000601FC000C00000000FE000C01FC001800000000FE000C01FC001800000000FE00
1801FC003000000000FE001801FC007000000000FE003001FC006000000000FE003001FC
00C000000000FE006001FC00C000000000FF00E001FC018000000000FF00C001FC018000
0000007F018001FC0300000000007F018001FE0300000000007F030001FE060000000000
7F030000FE0E00000000007F060000FE0C00000000007F0E0000FE1800000000007F0C00
00FE1800000000007F180000FE3000000000007F180000FE3000000000007F300000FE60
00000000007F300000FEE000000000007F600000FEC000000000007F600000FF80000000
00007FC00000FF8000000000007F800000FF0000000000007F800000FF0000000000003F
000000FE0000000000003F000000FE0000000000003E0000007C0000000000003E000000
780000000000003C000000780000000000003C0000007000000000000038000000700000
0000000030000000600000000000513B7CB84E>87 D<00007E00000003FF8000000FC1C3
80001F00EFC0007E007FC000FC003FC001F8003FC003F0001F8007F0001F8007E0001F80
0FE0003F801FC0003F001FC0003F003F80003F003F80007F007F80007E007F00007E007F
00007E007F0000FE00FF0000FC00FE0000FC00FE0000FC00FE0001FC00FE0001F800FC00
01F80CFC0001F80CFC0003F80CFC0003F01CFC0003F018FC0007F0187C0007F0387E000F
F0303E001FF0303E007BF0701F00E1F0E00F83C0F9C003FF007F8000FC001F0026267DA4
2C>97 D<003F00001FFF00001FFF00001FFF0000007F0000007E0000007E0000007E0000
00FE000000FC000000FC000000FC000001FC000001F8000001F8000001F8000003F80000
03F0000003F0000003F0000007F0000007E0FC0007E3FF0007E707C00FFE03E00FF801F0
0FF001F80FE000F81FC000F81FC000FC1F8000FC1F8000FC3F8000FC3F0000FC3F0000FC
3F0001FC7F0001FC7E0001FC7E0001FC7E0003FCFE0003FCFC0003F8FC0003F8FC0007F8
FC0007F0F80007F0F8000FE0F8000FE0F8000FC0F8001F80F8003F8078003F007C007E00
7C00FC003C01F8001E03F0000F07C00007FF000001FC00001E3B7CB924>I<00003FC000
01FFF00007E03C000F800E003F0007007E001F00FC007F01F800FF03F000FF07E000FF0F
E000FF0FC000FE1FC000383F8000003F8000007F8000007F0000007F0000007F000000FF
000000FE000000FE000000FE000000FE000000FC000000FC000000FC000000FC000003FC
0000077E0000067E00000E3E00003C3F0000701F0000E00F8007C007C03F0001FFF80000
3FC00020267DA424>I<000000003F0000001FFF0000001FFF0000001FFF000000007F00
0000007E000000007E00000000FE00000000FE00000000FC00000000FC00000001FC0000
0001FC00000001F800000001F800000003F800000003F800000003F000000003F0000000
07F000000007F000007E07E00003FF87E0000FC1CFE0001F00EFE0007E007FC000FC003F
C001F8003FC003F0001FC007F0001F8007E0001F800FE0003F801FC0003F801FC0003F00
3F80003F003F80007F007F80007F007F00007E007F00007E007F0000FE00FF0000FE00FE
0000FC00FE0000FC00FE0001FC00FE0001FC00FC0001F80CFC0001F80CFC0003F80CFC00
03F81CFC0003F018FC0007F0187C0007F0387E000FF0303E001FF0303E007BF0701F00E1
F0E00F83C0F9C003FF007F8000FC001F00283B7DB92B>I<00003FC00001FFF00007E078
001F801C007E001E00FC000E01F8000E03F0000E07F0000E0FE0000E0FC0001E1FC0001C
1FC0003C3F8000F83F8003E07F803FC07FFFFE007FFFE0007F000000FF000000FE000000
FE000000FE000000FE000000FE000000FE000000FE0000007E0000037E0000077E000006
3E00000E3E00003C1F0000700F8000E00F8007C003E03F0001FFF800003FC00020267DA4
27>I<00000000F80000000003FE000000000F87000000001F0F800000003E3F80000000
3E7F800000007C7F800000007C7F80000000FC7F80000000FC7F00000000FC1C00000001
F80000000001F80000000001F80000000001F80000000003F80000000003F00000000003
F00000000003F00000000003F00000000007F00000000007E00000000007E000000007FF
FFF0000007FFFFF0000007FFFFF00000000FE0000000000FC0000000000FC0000000000F
C0000000000FC0000000001FC0000000001F80000000001F80000000001F80000000001F
80000000003F80000000003F00000000003F00000000003F00000000003F00000000007F
00000000007E00000000007E00000000007E00000000007E00000000007E0000000000FE
0000000000FC0000000000FC0000000000FC0000000000FC0000000001FC0000000001F8
0000000001F80000000001F80000000001F80000000003F00000000003F00000000003F0
0000000003F00000000003E00000000007E00000000007E00000000007C00000001E07C0
0000003F07C00000007F8F800000007F8F80000000FF8F00000000FF1E00000000FE1E00
0000007C3C000000007878000000001FF00000000007C000000000294C7CBA29>I<0000
07E00000001FF80000007C1C380001F80EFC0003F007FC0007E003FC000FC003FC001F80
01FC003F0001F8007F0001F8007E0003F800FE0003F800FE0003F001FC0003F001FC0007
F003FC0007F003F80007E003F80007E003F8000FE007F8000FE007F0000FC007F0000FC0
07F0001FC007F0001FC007E0001F8007E0001F8007E0003F8007E0003F8007E0003F0003
E0007F0003F000FF0001F001FF0001F003FE0000F8077E00007C1EFE00001FF8FE000007
E0FC00000000FC00000001FC00000001FC00000001F800000001F800000003F8001E0003
F0003F0003F0007F8007F0007F8007E000FF800FC000FF001F8000FE003F00007C007E00
003C01F800001FFFE0000003FF00000026367FA428>I<0000E00003F80003F80007F800
07F80007F80007F00001C000000000000000000000000000000000000000000000000000
000000000000000000F80003FE00070F000E0F801C0F80180F80380F80300F80701F8060
1F80603F80E03F00C03F00C07F00007E00007E0000FE0000FC0001FC0001FC0001F80003
F80003F00003F00007F01807E01807E0380FE0300FC0300FC0700F80600F80E00F80C00F
81C00F838007870003FE0000F80015397EB71D>105 D<0000000F000000003F80000000
3F800000007F800000007F800000007F800000007F000000001C00000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000F800000003FE0000000F0F0000001C0F800000380FC0000
0300FC00000700FC00000E00FC00000C00FC00001C00FC00001801FC00003801FC000030
01F800003001F800000003F800000003F800000003F000000003F000000007F000000007
F000000007E000000007E00000000FE00000000FE00000000FC00000000FC00000001FC0
0000001FC00000001F800000001F800000003F800000003F800000003F000000003F0000
00007F000000007F000000007E000000007E00000000FE00000000FE00000000FC000000
00FC00000001FC00001E01F800003F01F800007F83F000007F83F00000FF87E00000FF0F
C00000FE0F8000007C1F000000707E0000003FF80000000FC0000000214981B722>I<00
03F0000001FFF0000001FFF0000001FFF000000007F000000007E000000007E000000007
E00000000FE00000000FC00000000FC00000000FC00000001FC00000001F800000001F80
0000001F800000003F800000003F000000003F000000003F000000007F000000007E0007
C0007E001FF0007E00783800FE00E0F800FC01C1FC00FC0383FC00FC0707FC01FC0E07FC
01F81C07F801F83803F001F87001E003F8E0000003F1C0000003F380000003F700000007
FE00000007FE00000007FFE0000007E7F800000FE0FE00000FC07F00000FC03F80000FC0
1F80001FC01FC0001F800FC0301F800FC0301F800FC0703F801FC0603F001F80603F001F
80603F001F80E07F001F80C07E001F81C07E000F81807E000F8380FE00078700FC0003FE
00380000F800263B7CB92B>I<000FC003FFC007FFC007FFC0001FC0001F80001F80003F
80003F80003F00003F00007F00007F00007E00007E0000FE0000FE0000FC0000FC0001FC
0001FC0001F80001F80003F80003F80003F00003F00007F00007F00007E00007E0000FE0
000FE0000FC0000FC0001FC0001FC0001F80001F80003F80003F80003F00003F00007F00
007F00007E03007E0300FE0700FE0600FC0600FC0600FC0E00FC0C00FC1C00FC18007C38
003C70001FE000078000123B7DB919>I<03E0007F0000FE000007F801FFE003FFC0000E
3C0781F00F03E0001C3E1E00F83C01F000383F3800FC7001F800303F7000FCE001F80030
3FE0007DC000F800703FC0007F8000F800603F80007F0000F800603F80007F0000F800E0
3F0000FE0001F800C07F0000FE0001F800C07E0000FC0001F800C07E0000FC0001F80000
7E0001FC0003F80000FE0001FC0003F00000FC0001F80003F00000FC0001F80003F00000
FC0003F80007F00001FC0003F80007E00001F80003F00007E00001F80003F0000FE00001
F80007F0000FC00003F80007F0000FC00003F00007E0001FC06003F00007E0001F806003
F0000FE0003F80E007F0000FE0003F00C007E0000FC0003F00C007E0000FC0003F01C007
E0001FC0003E01800FE0001FC0003E03800FC0001F80003E03000FC0001F80003E07000F
C0003F80003E0E001FC0003F80001E1C001F80003F00000FF8000700000E000003E00043
267EA449>I<03E0007F000007F801FFE0000E3C0781F0001C3E1E00F800383F3800FC00
303F7000FC00303FE0007C00703FC0007C00603F80007C00603F80007C00E03F0000FC00
C07F0000FC00C07E0000FC00C07E0000FC00007E0001FC0000FE0001F80000FC0001F800
00FC0001F80000FC0003F80001FC0003F00001F80003F00001F80007F00001F80007E000
03F80007E00003F0000FE03003F0000FC03003F0001FC07007F0001F806007E0001F8060
07E0001F80E007E0001F00C00FE0001F01C00FC0001F01800FC0001F03800FC0001F0700
1FC0000F0E001F800007FC0007000001F0002C267EA432>I<00001FC0000000FFF80000
07E07E00000F801F00003F000F80007E000FC000FC0007C001F80007E003F00007E007E0
0003F00FE00003F00FC00003F01FC00003F03F800007F03F800007F07F800007F07F0000
07F07F000007F07F00000FF0FF00000FF0FE00000FE0FE00000FE0FE00001FE0FE00001F
C0FE00001FC0FC00003F80FC00003F00FC00007F00FC00007E007E0000FC007E0001F800
3E0003F0003F0007E0001F000FC0000F801F000007E07E000001FFF00000003F80000024
267DA428>I<000F8003F000001FE00FFC000039F03C1F000070F8700F8000E0FDE007C0
00C0FF8007C000C0FF0007E001C0FE0003E00180FE0003F00180FC0003F00381FC0003F0
0301FC0003F00301F80003F00301F80003F00003F80007F00003F80007F00003F00007F0
0003F00007F00007F0000FF00007F0000FF00007E0000FE00007E0000FE0000FE0001FE0
000FE0001FC0000FC0001FC0000FC0003F80001FC0003F80001FC0007F00001F80007E00
001F8000FE00003F8000FC00003FC001F800003FC003F000003FE007E000007F700F8000
007F383F0000007E1FFC0000007E07E0000000FE0000000000FE0000000000FC00000000
00FC0000000001FC0000000001FC0000000001F80000000001F80000000003F800000000
03F80000000003F00000000007F000000000FFFFC0000000FFFFC0000000FFFFC0000000
2C3583A42A>I<0000FC00C00003FF01C0000F8383C0003F01C7C0007E00EF8000FC007F
8001F8007F8003F0003F8007F0003F0007E0003F000FC0003F001FC0007F001FC0007E00
3F80007E003F80007E007F8000FE007F0000FC007F0000FC007F0000FC00FF0001FC00FE
0001F800FE0001F800FE0001F800FE0003F800FC0003F000FC0003F000FC0003F000FC00
07F000FC0007E000FC000FE0007C000FE0007C001FE0007E003FC0003E007FC0001F01EF
C0000F839FC00003FF1F800000FC1F800000001F800000003F800000003F000000003F00
0000003F000000007F000000007E000000007E000000007E00000000FE00000000FC0000
0001FC0000007FFFF000007FFFF000007FFFF00022357DA425>I<03E001F80007F807FE
000E3C1E07001C3E381F00183F703F80383FE07F80303FC0FF80703F80FF80603F80FF00
603F007E00603F003C00E07F000000C07E000000C07E000000007E00000000FE00000000
FC00000000FC00000000FC00000001FC00000001F800000001F800000001F800000003F8
00000003F000000003F000000003F000000007F000000007E000000007E000000007E000
00000FE00000000FC00000000FC00000000FC00000001FC00000001F8000000007000000
0021267EA425>I<0000FF000003FFC0000F80F0003E00380078001C0078003C00F000FC
01F001FC01E001FC01E001FC01E001FC03F000F003F8000003FC000001FFE00001FFFC00
01FFFF0000FFFF80007FFFC0001FFFE00003FFE000003FF0000007F0000003F01E0001F0
7F0001F07F0001F0FF0001E0FF0001E0FF0001E0FE0003C0F80003C0E000078070000F00
38003E001E00F80007FFE00001FF00001E267CA427>I<0001C0000003E0000007E00000
07E0000007E0000007E000000FE000000FC000000FC000000FC000001FC000001F800000
1F8000001F8000003F8000003F00007FFFFF807FFFFF80FFFFFF80007E0000007E000000
7E000000FE000000FC000000FC000000FC000001FC000001F8000001F8000001F8000003
F8000003F0000003F0000003F0000007F0000007E0000007E0000007E000000FE000000F
C006000FC006000FC00E001FC00C001F801C001F8018001F8038001F8070001F8060001F
80E0000F81C0000787800003FE000000F8000019357EB31E>I<00F80000000003FE0000
3800070F00007C000E0F8000FC001C0F8000FC00180F8000FC00380F8001FC00300F8001
FC00701F8001F800601F8001F800601F8003F800E03F8003F800C03F0003F000C07F0003
F000007E0007F000007E0007F00000FE0007E00000FC0007E00000FC000FE00001FC000F
E00001F8000FC00001F8000FC00001F8001FC00003F8001FC00003F0001F80C003F0001F
80C003F0003F80C003F0003F81C003F0003F018003F0003F018003F0007F038003F000FF
030001F000FF030001F001FF070000F8079F0E00007C0E0F1C00003FFC07F8000007F001
F0002A267EA430>I<00F80003C003FE0007E0070F000FE00E0F800FF01C0F800FF0180F
800FF0380F8007F0300F8003F0701F8001F0601F8001F0601F8000F0E03F8000E0C03F00
00E0C07F0000E0007E0000E0007E0000C000FE0000C000FC0000C000FC0001C001FC0001
8001F800018001F800038001F800030003F800030003F000070003F000060003F0000E00
03F0000C0003F0001C0003F000180003F000380003F000700001F000E00001F801C00000
FC038000007E0F0000001FFE00000007F0000024267EA428>I<00F800000000F003FE00
00E001F8070F0001F003F80E0F8003F003FC1C0F8003F003FC180F8003F003FC380F8007
F001FC300F8007E000FC701F8007E0007C601F8007E0007C601F800FE0003CE03F800FE0
0038C03F000FC00038C07F000FC00038007E001FC00038007E001FC0003000FE001F8000
3000FC001F80003000FC003F80007001FC003F80006001F8003F00006001F8003F000060
01F8003F0000E003F8007F0000C003F0007E0000C003F0007E0001C003F0007E00018003
F0007E00038003F0007E00030003F0007E00070003F000FE00060003F000FE000E0001F0
01FE001C0001F801BF00380000FC039F807000007E0F0FC0E000001FFC03FFC0000003F0
007F000036267EA43B>I<0007E001F000001FF807FC0000783E0E0F0000E01F1C1F0001
C01F383F8003800FF07F8003000FE0FF8007000FE0FF800E000FC0FF000C000FC07E000C
001FC03C001C001F80000018001F80000018001F80000000003F80000000003F80000000
003F00000000003F00000000007F00000000007F00000000007E00000000007E00000000
00FE0000000000FE0000000000FC000C000000FC000C000001FC001C001E01FC0018003F
01F80018007F81F80038007F83F8007000FF83F8006000FF07F800E000FE0E7C01C0007C
1C7C03800078383E0F00001FF00FFC000007C003F0000029267EA42F>I<00F800000003
FE000070070F0000F80E0F8001F81C0F8001F8180F8001F8380F8003F8300F8003F0701F
8003F0601F8003F0603F8007F0E03F0007E0C03F0007E0C07F0007E0007E000FE0007E00
0FC000FE000FC000FC000FC000FC001FC001FC001F8001F8001F8001F8001F8001F8003F
8003F8003F0003F0003F0003F0003F0003F0007F0003F0007E0003F0007E0003F0007E00
03F000FE0003F000FC0003F001FC0001F003FC0000F807FC00007C1FF800003FF9F80000
0FE1F800000003F800000003F000000003F0000E0007F0003F8007E0007F800FC0007F80
0FC0007F801F80007F801F00007F003E00007C007C00007000F800003801F000001E07C0
00000FFF00000001FC00000025367EA429>I E /Fp 39 120 df<000000780000000000
FC0000000003FC0000000007FC000000001FFC00000000FFFC0000000FFFFC000007FFFF
FC0000FFFFFFFC0000FFFFFFFC0000FFFF7FFC0000FFF07FFC0000F8007FFC000000007F
FC000000007FFC000000007FFC000000007FFC000000007FFC000000007FFC000000007F
FC000000007FFC000000007FFC000000007FFC000000007FFC000000007FFC000000007F
FC000000007FFC000000007FFC000000007FFC000000007FFC000000007FFC000000007F
FC000000007FFC000000007FFC000000007FFC000000007FFC000000007FFC000000007F
FC000000007FFC000000007FFC000000007FFC000000007FFC000000007FFC000000007F
FC000000007FFC000000007FFC000000007FFC000000007FFC000000007FFC000000007F
FC000000007FFC000000007FFC000000007FFC000000007FFC000000007FFC000000007F
FC000000007FFC000000007FFC000000007FFC000000007FFC000000007FFC000000007F
FC000000007FFC000000007FFC000000007FFC000000007FFC000000007FFC000000007F
FC000000007FFC000000007FFC000000007FFC000000007FFC000000007FFC00007FFFFF
FFFFFE7FFFFFFFFFFE7FFFFFFFFFFE7FFFFFFFFFFE7FFFFFFFFFFE2F4E76CD43>49
D<00003FFE0000000003FFFFE00000000FFFFFFC0000003FFFFFFF000000FFFFFFFFC000
01FFC07FFFE00003FE000FFFF80007F80003FFFC000FE00001FFFE001FC00000FFFF003F
8000007FFF003FF000007FFF807FF800003FFFC07FFC00003FFFC0FFFE00001FFFE0FFFF
00001FFFE0FFFF00001FFFE0FFFF00000FFFF0FFFF00000FFFF0FFFF00000FFFF0FFFF00
000FFFF0FFFF00000FFFF07FFE00000FFFF07FFE00000FFFF03FFC00000FFFF00FF00000
0FFFF003C000000FFFF0000000000FFFE0000000001FFFE0000000001FFFE0000000001F
FFC0000000003FFFC0000000003FFF80000000003FFF80000000007FFF00000000007FFE
0000000000FFFC0000000001FFF80000000001FFF00000000003FFE00000000003FFC000
00000007FF80000000000FFF00000000001FFE00000000001FFC00000000003FF8000000
00007FE00000000000FFC00000000001FF800000000003FE000000000007FC0000000000
07F800000000000FF00001F000001FE00001F000003F800001F000007F000001F00000FE
000003E00001FC000003E00003F8000003E00007F0000003E0000FE0000003E0001F8000
0007E0003F00000007E0003E0000000FE0007FFFFFFFFFE000FFFFFFFFFFC001FFFFFFFF
FFC003FFFFFFFFFFC007FFFFFFFFFFC00FFFFFFFFFFFC01FFFFFFFFFFFC03FFFFFFFFFFF
C07FFFFFFFFFFFC0FFFFFFFFFFFFC0FFFFFFFFFFFF80FFFFFFFFFFFF80FFFFFFFFFFFF80
FFFFFFFFFFFF80344E79CD43>I<00000FFFC000000000FFFFFC00000007FFFFFF800000
1FFFFFFFE000003FF807FFF00000FF8001FFFC0001FE00007FFE0003F800003FFF0003F0
00003FFF8007FC00001FFF800FFF00001FFFC00FFF80001FFFC01FFFC0001FFFE01FFFC0
001FFFE01FFFC0001FFFE01FFFC0001FFFE01FFFE0001FFFE01FFFC0001FFFE01FFFC000
1FFFE01FFFC0001FFFE00FFFC0001FFFC007FF80001FFFC003FF00003FFFC001FC00003F
FF80000000003FFF80000000007FFF00000000007FFE00000000007FFE0000000000FFFC
0000000001FFF80000000003FFF00000000007FFC0000000000FFF8000000000FFFE0000
0000FFFFF800000000FFFFE000000000FFFFFC00000000FFFFFF800000000007FFE00000
000001FFF800000000007FFE00000000003FFF00000000001FFF80000000000FFFC00000
00000FFFE00000000007FFF00000000007FFF00000000007FFF80000000007FFF8000000
0003FFFC0000000003FFFC0000000003FFFE0000000003FFFE03E0000003FFFE0FF80000
03FFFE1FFC000003FFFE3FFE000003FFFE7FFF000003FFFEFFFF800003FFFEFFFF800003
FFFEFFFF800003FFFEFFFF800003FFFCFFFF800003FFFCFFFF800007FFFCFFFF800007FF
F8FFFF000007FFF87FFF000007FFF07FFE00000FFFF03FFC00000FFFE03FF000001FFFC0
1FE000003FFF800FF800007FFF0007FF0000FFFE0003FFF007FFFC0000FFFFFFFFF00000
7FFFFFFFE000001FFFFFFF80000003FFFFFC000000001FFF800000374F7ACD43>I<0000
0000007C00000000000000FE00000000000000FE00000000000001FE00000000000003FE
00000000000007FE0000000000000FFE0000000000000FFE0000000000001FFE00000000
00003FFE0000000000007FFE0000000000007FFE000000000000FFFE000000000001FFFE
000000000003FFFE000000000003FFFE000000000007FFFE00000000000FFFFE00000000
001FBFFE00000000003F3FFE00000000003E3FFE00000000007C3FFE0000000000FC3FFE
0000000001F83FFE0000000001F03FFE0000000003E03FFE0000000007E03FFE00000000
0FC03FFE000000000F803FFE000000001F003FFE000000003F003FFE000000007E003FFE
000000007C003FFE00000000F8003FFE00000001F8003FFE00000003F0003FFE00000007
E0003FFE00000007C0003FFE0000000F80003FFE0000001F80003FFE0000003F00003FFE
0000003E00003FFE0000007C00003FFE000000FC00003FFE000001F800003FFE000001F0
00003FFE000003E000003FFE000007E000003FFE00000FC000003FFE00001F8000003FFE
00001F0000003FFE00003E0000003FFE00007E0000003FFE0000FC0000003FFE0000FFFF
FFFFFFFFFFC0FFFFFFFFFFFFFFC0FFFFFFFFFFFFFFC0FFFFFFFFFFFFFFC0FFFFFFFFFFFF
FFC0000000007FFE0000000000007FFE0000000000007FFE0000000000007FFE00000000
00007FFE0000000000007FFE0000000000007FFE0000000000007FFE0000000000007FFE
0000000000007FFE0000000000007FFE0000000000007FFE0000000000007FFE00000000
00007FFE0000000000007FFE000000000FFFFFFFFFC000000FFFFFFFFFC000000FFFFFFF
FFC000000FFFFFFFFFC000000FFFFFFFFFC03A4F7CCE43>I<03800000000E0007E00000
007E0007FE000003FE0007FFF0007FFE0007FFFFFFFFFC0007FFFFFFFFF80007FFFFFFFF
F00007FFFFFFFFE00007FFFFFFFFC00007FFFFFFFF800007FFFFFFFF000007FFFFFFFE00
0007FFFFFFFC000007FFFFFFF0000007FFFFFFC0000007FFFFFF00000007FFFFF8000000
07E1FF0000000007E0000000000007E0000000000007E0000000000007E0000000000007
E0000000000007E0000000000007E0000000000007E0000000000007E0000000000007E0
000000000007E0000000000007E00FFF00000007E07FFFF0000007E3FFFFFE000007E7FF
FFFF800007FFF807FFC00007FFC001FFE00007FE0000FFF80007FC00007FFC0007F80000
3FFC0007F000003FFE0007E000001FFF0003C000001FFF80000000001FFF80000000001F
FFC0000000000FFFC0000000000FFFE0000000000FFFE0000000000FFFE0000000000FFF
E0000000000FFFF0000000000FFFF0000000000FFFF00FE000000FFFF01FF000000FFFF0
3FF800000FFFF07FFC00000FFFF0FFFE00000FFFF0FFFE00000FFFF0FFFE00000FFFF0FF
FE00000FFFF0FFFE00000FFFE0FFFE00000FFFE0FFFE00000FFFE0FFFC00000FFFE07FF8
00001FFFC07FF000001FFFC07FE000001FFF803E0000003FFF803F0000003FFF001F8000
007FFE001FC000007FFC000FE00000FFF80007F80001FFF00003FE0007FFE00001FFC03F
FFC00000FFFFFFFF8000003FFFFFFE0000001FFFFFF800000003FFFFC0000000007FF800
0000344F79CD43>I<0000000FFF0000000000FFFFE000000007FFFFF00000001FFFFFFC
0000007FFE03FE000001FFF0007F000003FFC0003F800007FF00001F80000FFE00007FC0
001FFC0000FFC0003FF80001FFE0007FF00003FFE000FFF00007FFE001FFE00007FFE001
FFE00007FFE003FFC00007FFE007FFC00007FFE007FFC00007FFE00FFFC00003FFC00FFF
800001FF801FFF800000FF001FFF8000007E001FFF80000000003FFF80000000003FFF80
000000003FFF00000000007FFF00000000007FFF00000000007FFF00080000007FFF01FF
F800007FFF07FFFF0000FFFF0FFFFFC000FFFF1FFFFFF000FFFF3F007FF800FFFF3C003F
FC00FFFF78001FFE00FFFFF0000FFF00FFFFF00007FF80FFFFE00007FFC0FFFFE00007FF
C0FFFFC00007FFE0FFFFC00003FFF0FFFF800003FFF0FFFF800003FFF8FFFF800003FFF8
FFFF800003FFF8FFFF800003FFF8FFFF000003FFFCFFFF000003FFFCFFFF000003FFFC7F
FF000003FFFC7FFF000003FFFC7FFF000003FFFC7FFF000003FFFC7FFF000003FFFC7FFF
000003FFFC3FFF000003FFFC3FFF000003FFFC3FFF000003FFFC3FFF000003FFFC1FFF00
0003FFF81FFF800003FFF81FFF800003FFF80FFF800003FFF80FFF800003FFF007FF8000
07FFF007FF800007FFE003FFC00007FFC001FFC00007FFC001FFE0000FFF8000FFF0000F
FF00007FF8001FFE00003FFC007FFC00001FFF01FFF800000FFFFFFFF0000003FFFFFFC0
000000FFFFFF000000003FFFFC0000000007FFC00000364F7ACD43>I<1F000000000000
001F800000000000001FC00000000000001FFF8000000000001FFFFFFFFFFFFF801FFFFF
FFFFFFFF801FFFFFFFFFFFFF801FFFFFFFFFFFFF803FFFFFFFFFFFFF803FFFFFFFFFFFFF
003FFFFFFFFFFFFE003FFFFFFFFFFFFC003FFFFFFFFFFFF8003FFFFFFFFFFFF8003FFFFF
FFFFFFF0003FFFFFFFFFFFE0003FFFFFFFFFFFC0007FFFFFFFFFFF80007F800000007F00
007E00000000FF00007E00000001FE00007C00000003FC00007C00000003F800007C0000
0007F000007C0000000FF000007C0000001FE00000F80000003FC00000F80000007F8000
00F80000007F000000F8000000FE00000000000001FE00000000000003FC000000000000
03F800000000000007F00000000000000FF00000000000001FE00000000000001FE00000
000000003FC00000000000003FC00000000000007F80000000000000FF80000000000000
FF80000000000001FF00000000000001FF00000000000003FF00000000000003FE000000
00000007FE00000000000007FE0000000000000FFE0000000000000FFE0000000000000F
FC0000000000001FFC0000000000001FFC0000000000003FFC0000000000003FFC000000
0000003FFC0000000000003FFC0000000000007FFC0000000000007FF80000000000007F
F80000000000007FF8000000000000FFF8000000000000FFF8000000000000FFF8000000
000000FFF8000000000000FFF8000000000001FFF8000000000001FFF8000000000001FF
F8000000000001FFF8000000000001FFF8000000000001FFF8000000000001FFF8000000
000001FFF8000000000001FFF8000000000001FFF8000000000001FFF8000000000001FF
F8000000000000FFF0000000000000FFF00000000000003FC00000000000001F80000000
00395279D043>I<00000000001F00000000000000000000003F80000000000000000000
007FC0000000000000000000007FC000000000000000000000FFE0000000000000000000
00FFE000000000000000000000FFE000000000000000000001FFF0000000000000000000
01FFF000000000000000000003FFF800000000000000000003FFF8000000000000000000
03FFF800000000000000000007FFFC00000000000000000007FFFC000000000000000000
07FFFC0000000000000000000FFFFE0000000000000000000FFFFE000000000000000000
1FFFFF0000000000000000001FFFFF0000000000000000001FFFFF000000000000000000
3FFFFF8000000000000000003F7FFF8000000000000000007F7FFFC00000000000000000
7E7FFFC000000000000000007E3FFFC00000000000000000FE3FFFE00000000000000000
FC1FFFE00000000000000001FC1FFFF00000000000000001F81FFFF00000000000000001
F80FFFF00000000000000003F80FFFF80000000000000003F007FFF80000000000000007
F007FFFC0000000000000007E007FFFC0000000000000007E003FFFC000000000000000F
E003FFFE000000000000000FC001FFFE000000000000001FC001FFFF000000000000001F
8001FFFF000000000000001F8000FFFF000000000000003F8000FFFF800000000000003F
00007FFF800000000000007F00007FFFC00000000000007E00007FFFC00000000000007E
00003FFFC0000000000000FE00003FFFE0000000000000FC00001FFFE0000000000001FC
00001FFFF0000000000001F800001FFFF0000000000001F800000FFFF0000000000003F8
00000FFFF8000000000003F0000007FFF8000000000007F0000007FFFC000000000007E0
000007FFFC000000000007E0000003FFFC00000000000FFFFFFFFFFFFE00000000000FFF
FFFFFFFFFE00000000001FFFFFFFFFFFFF00000000001FFFFFFFFFFFFF00000000001FFF
FFFFFFFFFF00000000003F80000000FFFF80000000003F000000007FFF80000000007F00
0000007FFFC0000000007F000000007FFFC0000000007E000000003FFFC000000000FE00
0000003FFFE000000000FC000000001FFFE000000001FC000000001FFFF000000001FC00
0000001FFFF000000001F8000000000FFFF000000003F8000000000FFFF800000003F000
00000007FFF800000007F00000000007FFFC00000007F00000000007FFFC00000007E000
00000003FFFC0000000FE00000000003FFFE0000000FC00000000003FFFE0000001FC000
00000001FFFF000000FFFC0000000001FFFF0000FFFFFFF800000FFFFFFFFFE0FFFFFFF8
00000FFFFFFFFFE0FFFFFFF800000FFFFFFFFFE0FFFFFFF800000FFFFFFFFFE0FFFFFFF8
00000FFFFFFFFFE05B547BD366>65 D<FFFFFFFFFFFFFFC0000000FFFFFFFFFFFFFFFE00
0000FFFFFFFFFFFFFFFFC00000FFFFFFFFFFFFFFFFF00000FFFFFFFFFFFFFFFFFC000000
07FFF0000003FFFF00000007FFF00000007FFF80000007FFF00000003FFFC0000007FFF0
0000000FFFE0000007FFF000000007FFF0000007FFF000000007FFF8000007FFF0000000
03FFF8000007FFF000000003FFFC000007FFF000000001FFFC000007FFF000000001FFFE
000007FFF000000000FFFE000007FFF000000000FFFE000007FFF000000000FFFF000007
FFF000000000FFFF000007FFF000000000FFFF000007FFF000000000FFFF000007FFF000
000000FFFF000007FFF000000000FFFF000007FFF000000000FFFF000007FFF000000000
FFFF000007FFF000000001FFFE000007FFF000000001FFFE000007FFF000000001FFFC00
0007FFF000000003FFFC000007FFF000000003FFF8000007FFF000000007FFF8000007FF
F000000007FFF0000007FFF00000000FFFE0000007FFF00000001FFFC0000007FFF00000
007FFF00000007FFF0000001FFFE00000007FFF0000007FFF800000007FFFFFFFFFFFFE0
00000007FFFFFFFFFFFF0000000007FFFFFFFFFFFF8000000007FFFFFFFFFFFFF0000000
07FFF0000003FFFE00000007FFF00000003FFF80000007FFF00000000FFFE0000007FFF0
00000007FFF0000007FFF000000001FFF8000007FFF000000001FFFC000007FFF0000000
00FFFE000007FFF0000000007FFF000007FFF0000000007FFF800007FFF0000000003FFF
C00007FFF0000000003FFFC00007FFF0000000001FFFE00007FFF0000000001FFFE00007
FFF0000000001FFFE00007FFF0000000001FFFF00007FFF0000000001FFFF00007FFF000
0000001FFFF00007FFF0000000000FFFF00007FFF0000000000FFFF00007FFF000000000
0FFFF00007FFF0000000001FFFF00007FFF0000000001FFFF00007FFF0000000001FFFF0
0007FFF0000000001FFFE00007FFF0000000001FFFE00007FFF0000000003FFFE00007FF
F0000000003FFFC00007FFF0000000003FFFC00007FFF0000000007FFF800007FFF00000
0000FFFF800007FFF000000000FFFF000007FFF000000001FFFE000007FFF000000007FF
FE000007FFF00000000FFFFC000007FFF00000003FFFF0000007FFF0000001FFFFE000FF
FFFFFFFFFFFFFFFF8000FFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFF80000FFFFFFFF
FFFFFFFFC00000FFFFFFFFFFFFFFF800000054527CD160>I<0000000001FFFC000001C0
000000007FFFFFC00003C000000007FFFFFFF80007C00000003FFFFFFFFE001FC0000000
FFFFFFFFFF803FC0000003FFFFE003FFC07FC000000FFFFC00003FF0FFC000003FFFE000
000FF9FFC000007FFF80000003FFFFC00001FFFE00000000FFFFC00003FFF8000000007F
FFC00007FFF0000000003FFFC0000FFFE0000000001FFFC0001FFFC0000000000FFFC000
3FFF800000000007FFC0007FFF000000000003FFC000FFFE000000000001FFC000FFFE00
0000000001FFC001FFFC000000000000FFC003FFF8000000000000FFC003FFF800000000
00007FC007FFF00000000000007FC00FFFF00000000000003FC00FFFF00000000000003F
C01FFFE00000000000001FC01FFFE00000000000001FC01FFFE00000000000001FC03FFF
C00000000000001FC03FFFC00000000000000FC03FFFC00000000000000FC07FFFC00000
000000000FC07FFFC00000000000000FC07FFFC000000000000000007FFF800000000000
0000007FFF800000000000000000FFFF800000000000000000FFFF800000000000000000
FFFF800000000000000000FFFF800000000000000000FFFF800000000000000000FFFF80
0000000000000000FFFF800000000000000000FFFF800000000000000000FFFF80000000
0000000000FFFF800000000000000000FFFF800000000000000000FFFF80000000000000
0000FFFF800000000000000000FFFF8000000000000000007FFF8000000000000000007F
FF8000000000000000007FFFC000000000000000007FFFC000000000000000007FFFC000
000000000007C03FFFC000000000000007C03FFFC000000000000007C03FFFC000000000
000007C01FFFE000000000000007C01FFFE000000000000007C01FFFE00000000000000F
C00FFFF00000000000000F800FFFF00000000000000F8007FFF00000000000001F8003FF
F80000000000001F8003FFF80000000000001F0001FFFC0000000000003F0000FFFE0000
000000007E0000FFFE0000000000007E00007FFF000000000000FC00003FFF8000000000
01F800001FFFC00000000003F800000FFFE00000000007F0000007FFF0000000000FE000
0003FFFC000000001FC0000001FFFE000000007F800000007FFF80000000FF000000003F
FFE0000007FE000000000FFFFE00001FF80000000003FFFFE001FFF00000000000FFFFFF
FFFFC000000000003FFFFFFFFF00000000000007FFFFFFFC000000000000007FFFFFE000
00000000000001FFFC00000000525479D261>I<FFFFFFFFFFFFFF8000000000FFFFFFFF
FFFFFFFC00000000FFFFFFFFFFFFFFFF80000000FFFFFFFFFFFFFFFFF0000000FFFFFFFF
FFFFFFFFFC0000000007FFF000000FFFFF0000000007FFF0000000FFFFC000000007FFF0
0000001FFFE000000007FFF000000007FFF800000007FFF000000001FFFC00000007FFF0
00000000FFFE00000007FFF0000000007FFF00000007FFF0000000003FFF80000007FFF0
000000001FFFC0000007FFF0000000000FFFC0000007FFF00000000007FFE0000007FFF0
0000000003FFF0000007FFF00000000003FFF8000007FFF00000000001FFF8000007FFF0
0000000001FFFC000007FFF00000000000FFFC000007FFF00000000000FFFE000007FFF0
0000000000FFFE000007FFF000000000007FFF000007FFF000000000007FFF000007FFF0
00000000007FFF000007FFF000000000007FFF800007FFF000000000003FFF800007FFF0
00000000003FFF800007FFF000000000003FFFC00007FFF000000000003FFFC00007FFF0
00000000003FFFC00007FFF000000000003FFFC00007FFF000000000003FFFC00007FFF0
00000000003FFFE00007FFF000000000003FFFE00007FFF000000000003FFFE00007FFF0
00000000001FFFE00007FFF000000000001FFFE00007FFF000000000001FFFE00007FFF0
00000000001FFFE00007FFF000000000001FFFE00007FFF000000000001FFFE00007FFF0
00000000001FFFE00007FFF000000000001FFFE00007FFF000000000001FFFE00007FFF0
00000000003FFFE00007FFF000000000003FFFE00007FFF000000000003FFFE00007FFF0
00000000003FFFC00007FFF000000000003FFFC00007FFF000000000003FFFC00007FFF0
00000000003FFFC00007FFF000000000003FFFC00007FFF000000000003FFF800007FFF0
00000000003FFF800007FFF000000000007FFF800007FFF000000000007FFF000007FFF0
00000000007FFF000007FFF000000000007FFF000007FFF00000000000FFFE000007FFF0
0000000000FFFE000007FFF00000000000FFFC000007FFF00000000001FFFC000007FFF0
0000000001FFF8000007FFF00000000003FFF0000007FFF00000000007FFF0000007FFF0
0000000007FFE0000007FFF0000000000FFFC0000007FFF0000000001FFF80000007FFF0
000000003FFF00000007FFF000000000FFFE00000007FFF000000001FFFC00000007FFF0
00000007FFF800000007FFF00000001FFFF000000007FFF0000000FFFFC000000007FFF0
00000FFFFF000000FFFFFFFFFFFFFFFFFE000000FFFFFFFFFFFFFFFFF0000000FFFFFFFF
FFFFFFFFC0000000FFFFFFFFFFFFFFFC00000000FFFFFFFFFFFFFF80000000005B527CD1
67>I<FFFFFFFFFFFFFFFFFE00FFFFFFFFFFFFFFFFFE00FFFFFFFFFFFFFFFFFE00FFFFFF
FFFFFFFFFFFE00FFFFFFFFFFFFFFFFFE000007FFF8000007FFFF000007FFF80000007FFF
000007FFF80000001FFF000007FFF800000007FF000007FFF800000003FF000007FFF800
000001FF000007FFF800000000FF000007FFF8000000007F000007FFF8000000003F0000
07FFF8000000003F800007FFF8000000003F800007FFF8000000001F800007FFF8000000
001F800007FFF8000000001F800007FFF8000000000F800007FFF8000000000F800007FF
F8000000000F800007FFF8000000000F800007FFF8000000000FC00007FFF80000F80007
C00007FFF80000F80007C00007FFF80000F80007C00007FFF80000F80007C00007FFF800
00F80000000007FFF80000F80000000007FFF80000F80000000007FFF80001F800000000
07FFF80001F80000000007FFF80001F80000000007FFF80003F80000000007FFF80007F8
0000000007FFF8000FF80000000007FFF8007FF80000000007FFFFFFFFF80000000007FF
FFFFFFF80000000007FFFFFFFFF80000000007FFFFFFFFF80000000007FFFFFFFFF80000
000007FFF8007FF80000000007FFF8000FF80000000007FFF80007F80000000007FFF800
03F80000000007FFF80001F80000000007FFF80001F80000000007FFF80001F800000000
07FFF80000F80000000007FFF80000F80000000007FFF80000F80000000007FFF80000F8
0000000007FFF80000F80000000007FFF80000F80000000007FFF80000F80000000007FF
F80000000000000007FFF80000000000000007FFF80000000000000007FFF80000000000
000007FFF80000000000000007FFF80000000000000007FFF80000000000000007FFF800
00000000000007FFF80000000000000007FFF80000000000000007FFF800000000000000
07FFF80000000000000007FFF80000000000000007FFF80000000000000007FFF8000000
0000000007FFF80000000000000007FFF80000000000000007FFF80000000000000007FF
F8000000000000FFFFFFFFFFF800000000FFFFFFFFFFF800000000FFFFFFFFFFF8000000
00FFFFFFFFFFF800000000FFFFFFFFFFF8000000004A517CD055>70
D<FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC00007FFF800
000007FFF800000007FFF800000007FFF800000007FFF800000007FFF800000007FFF800
000007FFF800000007FFF800000007FFF800000007FFF800000007FFF800000007FFF800
000007FFF800000007FFF800000007FFF800000007FFF800000007FFF800000007FFF800
000007FFF800000007FFF800000007FFF800000007FFF800000007FFF800000007FFF800
000007FFF800000007FFF800000007FFF800000007FFF800000007FFF800000007FFF800
000007FFF800000007FFF800000007FFF800000007FFF800000007FFF800000007FFF800
000007FFF800000007FFF800000007FFF800000007FFF800000007FFF800000007FFF800
000007FFF800000007FFF800000007FFF800000007FFF800000007FFF800000007FFF800
000007FFF800000007FFF800000007FFF800000007FFF800000007FFF800000007FFF800
000007FFF800000007FFF800000007FFF800000007FFF800000007FFF800000007FFF800
000007FFF800000007FFF800000007FFF800000007FFF800000007FFF800000007FFF800
000007FFF800000007FFF800000007FFF800000007FFF800000007FFF80000FFFFFFFFFF
C0FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC02A527CD132>73
D<FFFFFFFC000000000000003FFFFFFEFFFFFFFE000000000000007FFFFFFEFFFFFFFE00
0000000000007FFFFFFEFFFFFFFF00000000000000FFFFFFFEFFFFFFFF00000000000000
FFFFFFFE0007FFFF00000000000000FFFFC0000007FFFF80000000000001EFFFC0000007
FFFF80000000000001EFFFC0000007EFFFC0000000000003CFFFC0000007EFFFC0000000
000003CFFFC0000007E7FFE00000000000078FFFC0000007E7FFE00000000000078FFFC0
000007E3FFF000000000000F0FFFC0000007E3FFF000000000000F0FFFC0000007E1FFF8
00000000001E0FFFC0000007E1FFF800000000001E0FFFC0000007E1FFF800000000001E
0FFFC0000007E0FFFC00000000003C0FFFC0000007E0FFFC00000000003C0FFFC0000007
E07FFE0000000000780FFFC0000007E07FFE0000000000780FFFC0000007E03FFF000000
0000F00FFFC0000007E03FFF0000000000F00FFFC0000007E01FFF8000000001E00FFFC0
000007E01FFF8000000001E00FFFC0000007E00FFFC000000003C00FFFC0000007E00FFF
C000000003C00FFFC0000007E00FFFC000000003C00FFFC0000007E007FFE00000000780
0FFFC0000007E007FFE000000007800FFFC0000007E003FFF00000000F000FFFC0000007
E003FFF00000000F000FFFC0000007E001FFF80000001E000FFFC0000007E001FFF80000
001E000FFFC0000007E000FFFC0000003C000FFFC0000007E000FFFC0000003C000FFFC0
000007E000FFFC0000003C000FFFC0000007E0007FFE00000078000FFFC0000007E0007F
FE00000078000FFFC0000007E0003FFF000000F0000FFFC0000007E0003FFF000000F000
0FFFC0000007E0001FFF800001E0000FFFC0000007E0001FFF800001E0000FFFC0000007
E0000FFFC00003C0000FFFC0000007E0000FFFC00003C0000FFFC0000007E00007FFE000
0780000FFFC0000007E00007FFE0000780000FFFC0000007E00007FFE0000780000FFFC0
000007E00003FFF0000F00000FFFC0000007E00003FFF0000F00000FFFC0000007E00001
FFF8001E00000FFFC0000007E00001FFF8001E00000FFFC0000007E00000FFFC003C0000
0FFFC0000007E00000FFFC003C00000FFFC0000007E000007FFE007800000FFFC0000007
E000007FFE007800000FFFC0000007E000007FFE007800000FFFC0000007E000003FFF00
F000000FFFC0000007E000003FFF00F000000FFFC0000007E000001FFF81E000000FFFC0
000007E000001FFF81E000000FFFC0000007E000000FFFC3C000000FFFC0000007E00000
0FFFC3C000000FFFC0000007E0000007FFE78000000FFFC0000007E0000007FFE7800000
0FFFC0000007E0000003FFFF0000000FFFC0000007E0000003FFFF0000000FFFC0000007
E0000003FFFF0000000FFFC0000007E0000001FFFE0000000FFFC0000007E0000001FFFE
0000000FFFC0000007E0000000FFFC0000000FFFC0000007E0000000FFFC0000000FFFC0
000007E00000007FF80000000FFFC0000007E00000007FF80000000FFFC0000007E00000
003FF00000000FFFC0000007E00000003FF00000000FFFC000003FFC0000001FE0000000
0FFFC000FFFFFFFF00001FE00001FFFFFFFFFEFFFFFFFF00001FE00001FFFFFFFFFEFFFF
FFFF00000FC00001FFFFFFFFFEFFFFFFFF00000FC00001FFFFFFFFFEFFFFFFFF00000780
0001FFFFFFFFFE77527CD180>77 D<FFFFFFFFFFFFFF000000FFFFFFFFFFFFFFF80000FF
FFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFE000FFFFFFFFFFFFFFFFF0000007FFF000001F
FFFC000007FFF0000001FFFF000007FFF00000007FFF800007FFF00000003FFFC00007FF
F00000000FFFE00007FFF00000000FFFF00007FFF000000007FFF00007FFF000000003FF
F80007FFF000000003FFFC0007FFF000000003FFFC0007FFF000000001FFFE0007FFF000
000001FFFE0007FFF000000001FFFE0007FFF000000001FFFE0007FFF000000001FFFF00
07FFF000000001FFFF0007FFF000000001FFFF0007FFF000000001FFFF0007FFF0000000
01FFFF0007FFF000000001FFFF0007FFF000000001FFFF0007FFF000000001FFFF0007FF
F000000001FFFE0007FFF000000001FFFE0007FFF000000001FFFE0007FFF000000001FF
FC0007FFF000000003FFFC0007FFF000000003FFFC0007FFF000000003FFF80007FFF000
000007FFF00007FFF00000000FFFE00007FFF00000001FFFE00007FFF00000003FFFC000
07FFF00000007FFF000007FFF0000001FFFE000007FFF000001FFFFC000007FFFFFFFFFF
FFF0000007FFFFFFFFFFFFC0000007FFFFFFFFFFFE00000007FFFFFFFFFFE000000007FF
F80000000000000007FFF80000000000000007FFF80000000000000007FFF80000000000
000007FFF80000000000000007FFF80000000000000007FFF80000000000000007FFF800
00000000000007FFF80000000000000007FFF80000000000000007FFF800000000000000
07FFF80000000000000007FFF80000000000000007FFF80000000000000007FFF8000000
0000000007FFF80000000000000007FFF80000000000000007FFF80000000000000007FF
F80000000000000007FFF80000000000000007FFF80000000000000007FFF80000000000
000007FFF80000000000000007FFF80000000000000007FFF80000000000000007FFF800
00000000000007FFF80000000000000007FFF80000000000000007FFF800000000000000
07FFF80000000000000007FFF80000000000000007FFF8000000000000FFFFFFFFFFC000
000000FFFFFFFFFFC000000000FFFFFFFFFFC000000000FFFFFFFFFFC000000000FFFFFF
FFFFC00000000050527CD15C>80 D<FFFFFFFFFFFFF00000000000FFFFFFFFFFFFFF8000
000000FFFFFFFFFFFFFFF800000000FFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFFC0
0000000007FFF00000FFFFF00000000007FFF000000FFFF80000000007FFF0000001FFFE
0000000007FFF0000000FFFF0000000007FFF00000007FFF8000000007FFF00000003FFF
C000000007FFF00000001FFFC000000007FFF00000000FFFE000000007FFF00000000FFF
F000000007FFF00000000FFFF000000007FFF000000007FFF800000007FFF000000007FF
F800000007FFF000000007FFF800000007FFF000000007FFFC00000007FFF000000007FF
FC00000007FFF000000007FFFC00000007FFF000000007FFFC00000007FFF000000007FF
FC00000007FFF000000007FFFC00000007FFF000000007FFFC00000007FFF000000007FF
FC00000007FFF000000007FFF800000007FFF000000007FFF800000007FFF00000000FFF
F800000007FFF00000000FFFF000000007FFF00000000FFFE000000007FFF00000000FFF
E000000007FFF00000001FFFC000000007FFF00000003FFF8000000007FFF00000007FFF
0000000007FFF0000000FFFE0000000007FFF0000003FFFC0000000007FFF000000FFFF0
0000000007FFF00000FFFFC00000000007FFFFFFFFFFFF000000000007FFFFFFFFFFF800
0000000007FFFFFFFFFFE0000000000007FFFFFFFFFFF8000000000007FFF00003FFFE00
0000000007FFF000007FFF800000000007FFF000003FFFC00000000007FFF000001FFFE0
0000000007FFF000000FFFF00000000007FFF0000007FFF80000000007FFF0000003FFFC
0000000007FFF0000003FFFE0000000007FFF0000001FFFE0000000007FFF0000001FFFE
0000000007FFF0000001FFFF0000000007FFF0000000FFFF0000000007FFF0000000FFFF
0000000007FFF0000000FFFF0000000007FFF0000000FFFF0000000007FFF0000000FFFF
0000000007FFF0000000FFFF0000000007FFF0000000FFFF0000000007FFF0000000FFFF
8000000007FFF0000000FFFF8000000007FFF0000000FFFF8000000007FFF0000000FFFF
8000000007FFF0000000FFFF8000000007FFF0000000FFFF8000000007FFF0000000FFFF
8000000007FFF0000000FFFF80001C0007FFF0000000FFFFC0003E0007FFF0000000FFFF
C0003E0007FFF0000000FFFFC0003E0007FFF00000007FFFC0003E0007FFF00000007FFF
E0007E0007FFF00000003FFFE0007C0007FFF00000003FFFF000FC0007FFF00000001FFF
F001FCFFFFFFFFFF80000FFFF803F8FFFFFFFFFF800003FFFE07F0FFFFFFFFFF800001FF
FFFFE0FFFFFFFFFF8000007FFFFFC0FFFFFFFFFF8000000FFFFF00000000000000000000
7FFC005F537CD164>82 D<00000FFF800007000000FFFFF8000F000007FFFFFF001F0000
1FFFFFFFC03F00003FFFFFFFF07F0000FFFC00FFF8FF0001FFE0000FFDFF0003FF800001
FFFF0007FE0000007FFF000FFC0000003FFF000FF80000000FFF001FF800000007FF001F
F000000003FF003FF000000003FF003FE000000001FF007FE000000000FF007FE0000000
00FF007FE0000000007F00FFE0000000007F00FFE0000000003F00FFE0000000003F00FF
F0000000003F00FFF0000000003F00FFF8000000001F00FFF8000000001F00FFFC000000
001F00FFFE000000001F00FFFF000000000000FFFFC000000000007FFFF000000000007F
FFFF00000000007FFFFFF8000000003FFFFFFF800000003FFFFFFFFC0000001FFFFFFFFF
C000001FFFFFFFFFF000000FFFFFFFFFFC000007FFFFFFFFFF000003FFFFFFFFFFC00001
FFFFFFFFFFE00000FFFFFFFFFFF000007FFFFFFFFFF800003FFFFFFFFFFC00000FFFFFFF
FFFE000003FFFFFFFFFE000000FFFFFFFFFF0000001FFFFFFFFF80000000FFFFFFFF8000
00000FFFFFFFC0000000007FFFFFC00000000007FFFFE00000000000FFFFE00000000000
3FFFE000000000000FFFF0000000000007FFF0000000000003FFF0000000000003FFF078
0000000001FFF0F80000000000FFF0F80000000000FFF0F80000000000FFF0F800000000
007FF0F800000000007FF0FC00000000007FF0FC00000000007FF0FC00000000007FE0FE
00000000007FE0FE00000000007FE0FF0000000000FFC0FF0000000000FFC0FF80000000
00FFC0FFC000000001FF80FFE000000001FF00FFF000000003FF00FFFC00000007FE00FF
FF0000000FFC00FFFFC000001FF800FFFFF800007FF000FF1FFFC003FFE000FE0FFFFFFF
FFC000FC03FFFFFFFF0000F8007FFFFFFC0000F0000FFFFFF00000E000007FFF0000003C
5479D24B>I<3FFFFFFFFFFFFFFFFFFF803FFFFFFFFFFFFFFFFFFF803FFFFFFFFFFFFFFF
FFFF803FFFFFFFFFFFFFFFFFFF803FFFFFFFFFFFFFFFFFFF803FFFC0003FFFC0007FFF80
3FFE00003FFFC00007FF807FF800003FFFC00001FFC07FE000003FFFC00000FFC07FC000
003FFFC000007FC07F8000003FFFC000003FC07F0000003FFFC000001FC07F0000003FFF
C000001FC07E0000003FFFC000000FC07E0000003FFFC000000FC07E0000003FFFC00000
0FC07C0000003FFFC0000007C07C0000003FFFC0000007C07C0000003FFFC0000007C07C
0000003FFFC0000007C07C0000003FFFC0000007C0FC0000003FFFC0000007E0F8000000
3FFFC0000003E0F80000003FFFC0000003E0F80000003FFFC0000003E0F80000003FFFC0
000003E0F80000003FFFC0000003E0F80000003FFFC0000003E0000000003FFFC0000000
00000000003FFFC000000000000000003FFFC000000000000000003FFFC0000000000000
00003FFFC000000000000000003FFFC000000000000000003FFFC000000000000000003F
FFC000000000000000003FFFC000000000000000003FFFC000000000000000003FFFC000
000000000000003FFFC000000000000000003FFFC000000000000000003FFFC000000000
000000003FFFC000000000000000003FFFC000000000000000003FFFC000000000000000
003FFFC000000000000000003FFFC000000000000000003FFFC000000000000000003FFF
C000000000000000003FFFC000000000000000003FFFC000000000000000003FFFC00000
0000000000003FFFC000000000000000003FFFC000000000000000003FFFC00000000000
0000003FFFC000000000000000003FFFC000000000000000003FFFC00000000000000000
3FFFC000000000000000003FFFC000000000000000003FFFC000000000000000003FFFC0
00000000000000003FFFC000000000000000003FFFC000000000000000003FFFC0000000
00000000003FFFC000000000000000003FFFC000000000000000003FFFC0000000000000
00003FFFC000000000000000003FFFC000000000000000003FFFC000000000000000003F
FFC000000000000000003FFFC000000000000000003FFFC000000000000000003FFFC000
000000000000003FFFC0000000000000FFFFFFFFFFFFF000000000FFFFFFFFFFFFF00000
0000FFFFFFFFFFFFF000000000FFFFFFFFFFFFF000000000FFFFFFFFFFFFF0000053517B
D05E>I<FFFFFFFFFC007FFFFFFFFE0000FFFFFFF0FFFFFFFFFC007FFFFFFFFE0000FFFF
FFF0FFFFFFFFFC007FFFFFFFFE0000FFFFFFF0FFFFFFFFFC007FFFFFFFFE0000FFFFFFF0
FFFFFFFFFC007FFFFFFFFE0000FFFFFFF0003FFFC00000001FFFE000000000FFF800003F
FFE00000001FFFF0000000000FC000001FFFE00000000FFFF0000000000F8000001FFFE0
0000000FFFF8000000000F8000001FFFF00000000FFFF8000000001F8000000FFFF00000
0007FFF8000000001F0000000FFFF800000007FFFC000000001F0000000FFFF800000003
FFFC000000003F00000007FFF800000003FFFC000000003E00000007FFFC00000003FFFE
000000003E00000003FFFC00000001FFFE000000007C00000003FFFC00000001FFFF0000
00007C00000003FFFE00000001FFFF00000000FC00000001FFFE00000001FFFF00000000
F800000001FFFF00000003FFFF80000000F800000001FFFF00000003FFFF80000001F800
000000FFFF00000003FFFF80000001F000000000FFFF80000007FFFFC0000001F0000000
007FFF80000007FFFFC0000003E0000000007FFF80000007FFFFE0000003E0000000007F
FFC000000FFFFFE0000007E0000000003FFFC000000F9FFFE0000007C0000000003FFFE0
00001F9FFFF0000007C0000000003FFFE000001F0FFFF000000FC0000000001FFFE00000
1F0FFFF000000F80000000001FFFF000003F0FFFF800000F80000000000FFFF000003E07
FFF800001F00000000000FFFF000003E07FFFC00001F00000000000FFFF800007E07FFFC
00003F000000000007FFF800007C03FFFC00003E000000000007FFFC0000FC03FFFE0000
3E000000000007FFFC0000F801FFFE00007E000000000003FFFC0000F801FFFE00007C00
0000000003FFFE0001F801FFFF00007C000000000003FFFE0001F000FFFF0000FC000000
000001FFFE0001F000FFFF8000F8000000000001FFFF0003F000FFFF8001F80000000000
00FFFF0003E0007FFF8001F0000000000000FFFF0007E0007FFFC001F0000000000000FF
FF8007C0003FFFC003F00000000000007FFF8007C0003FFFC003E00000000000007FFFC0
0FC0003FFFE003E00000000000007FFFC00F80001FFFE007E00000000000003FFFC00F80
001FFFF007C00000000000003FFFE01F80001FFFF00FC00000000000001FFFE01F00000F
FFF00F800000000000001FFFE01F00000FFFF80F800000000000001FFFF03E000007FFF8
1F800000000000000FFFF03E000007FFF81F000000000000000FFFF87E000007FFFC1F00
0000000000000FFFF87C000003FFFC3F0000000000000007FFF87C000003FFFE3E000000
0000000007FFFCFC000003FFFE7E0000000000000003FFFCF8000001FFFE7C0000000000
000003FFFCF8000001FFFF7C0000000000000003FFFFF0000000FFFFFC00000000000000
01FFFFF0000000FFFFF80000000000000001FFFFF0000000FFFFF80000000000000001FF
FFE00000007FFFF80000000000000000FFFFE00000007FFFF00000000000000000FFFFE0
0000007FFFF000000000000000007FFFC00000003FFFE000000000000000007FFFC00000
003FFFE000000000000000007FFF800000001FFFE000000000000000003FFF800000001F
FFC000000000000000003FFF800000001FFFC000000000000000003FFF000000000FFFC0
00000000000000001FFF000000000FFF8000000000000000001FFF000000000FFF800000
0000000000000FFE0000000007FF0000000000000000000FFE0000000007FF0000000000
000000000FFE0000000007FF00000000000000000007FC0000000003FE00000000000000
000007FC0000000003FE00000000000000000007F80000000001FE000000000000000000
03F80000000001FC00000000000000000003F80000000001FC00000000000000000001F0
0000000000F8000000000084537DD18B>87 D<00007FFF000000000007FFFFF000000000
3FFFFFFE00000000FFFFFFFF80000001FFE00FFFC0000003FE0001FFF0000007FF0000FF
F8000007FF80003FFC00000FFF80003FFE00000FFFC0001FFE00000FFFC0001FFF00000F
FFC0000FFF80000FFFC0000FFF80000FFFC0000FFF800007FF800007FFC00007FF800007
FFC00003FF000007FFC00001FE000007FFC0000000000007FFC0000000000007FFC00000
00000007FFC0000000000007FFC0000000000007FFC0000000000007FFC0000000007FFF
FFC00000000FFFFFFFC0000000FFFFFFFFC0000007FFFF87FFC000003FFFF007FFC00000
7FFF8007FFC00001FFFC0007FFC00003FFF00007FFC00007FFE00007FFC0000FFFC00007
FFC0001FFF800007FFC0003FFF000007FFC0007FFF000007FFC0007FFE000007FFC0007F
FE000007FFC000FFFC000007FFC000FFFC000007FFC000FFFC000007FFC000FFFC000007
FFC000FFFC00000FFFC000FFFC00000FFFC000FFFE00001FFFC0007FFE00001DFFC0007F
FE00003DFFC0003FFF000079FFE0001FFF8000F1FFF8000FFFC003E1FFFFE007FFF81FC0
FFFFF003FFFFFF807FFFF000FFFFFF001FFFF0001FFFFC0007FFE00001FFE0000000003C
387CB641>97 D<003FF0000000000000FFFFF0000000000000FFFFF0000000000000FFFF
F0000000000000FFFFF0000000000000FFFFF000000000000003FFF000000000000000FF
F000000000000000FFF000000000000000FFF000000000000000FFF000000000000000FF
F000000000000000FFF000000000000000FFF000000000000000FFF000000000000000FF
F000000000000000FFF000000000000000FFF000000000000000FFF000000000000000FF
F000000000000000FFF000000000000000FFF000000000000000FFF000000000000000FF
F000000000000000FFF000000000000000FFF000000000000000FFF000000000000000FF
F000000000000000FFF000000000000000FFF001FFE000000000FFF00FFFFE00000000FF
F03FFFFFC0000000FFF0FFFFFFF0000000FFF3FF01FFF8000000FFF7F8003FFE000000FF
FFE0000FFF000000FFFF800007FF800000FFFF000003FFC00000FFFE000001FFE00000FF
FC000001FFF00000FFF8000000FFF80000FFF8000000FFF80000FFF80000007FFC0000FF
F80000007FFC0000FFF80000007FFE0000FFF80000007FFE0000FFF80000007FFF0000FF
F80000003FFF0000FFF80000003FFF0000FFF80000003FFF0000FFF80000003FFF8000FF
F80000003FFF8000FFF80000003FFF8000FFF80000003FFF8000FFF80000003FFF8000FF
F80000003FFF8000FFF80000003FFF8000FFF80000003FFF8000FFF80000003FFF8000FF
F80000003FFF8000FFF80000003FFF8000FFF80000003FFF8000FFF80000003FFF0000FF
F80000003FFF0000FFF80000003FFF0000FFF80000003FFF0000FFF80000007FFE0000FF
F80000007FFE0000FFF80000007FFE0000FFF80000007FFC0000FFF8000000FFFC0000FF
F8000000FFF80000FFFC000001FFF00000FFFC000001FFF00000FFFE000003FFE00000FF
FF000007FFC00000FFFF80000FFF800000FFCFC0001FFF000000FF87F0007FFC000000FF
03FE03FFF8000000FE00FFFFFFE0000000FC007FFFFF80000000F8001FFFFC0000000000
0003FFC000000041547BD24B>I<000001FFF8000000001FFFFF80000000FFFFFFF00000
03FFFFFFFC00000FFFC00FFE00001FFE0001FF00007FFC0003FF8000FFF00007FF8001FF
F00007FFC003FFE0000FFFC003FFC0000FFFC007FFC0000FFFC00FFF80000FFFC00FFF80
000FFFC01FFF800007FF801FFF000007FF803FFF000003FF003FFF000001FE007FFF0000
0000007FFE00000000007FFE00000000007FFE0000000000FFFE0000000000FFFE000000
0000FFFE0000000000FFFE0000000000FFFE0000000000FFFE0000000000FFFE00000000
00FFFE0000000000FFFE0000000000FFFE0000000000FFFE0000000000FFFE0000000000
FFFE00000000007FFE00000000007FFF00000000007FFF00000000003FFF00000000003F
FF00000000003FFF00000003E01FFF80000003E01FFF80000007E00FFFC0000007C007FF
C0000007C007FFE000000FC003FFE000001F8001FFF000003F0000FFF800007E00007FFE
0000FC00003FFF0003F800000FFFE01FF0000003FFFFFFE0000000FFFFFF800000003FFF
FE0000000001FFE0000033387CB63C>I<000000000001FF80000000000007FFFF800000
00000007FFFF80000000000007FFFF80000000000007FFFF80000000000007FFFF800000
000000001FFF8000000000000007FF8000000000000007FF8000000000000007FF800000
0000000007FF8000000000000007FF8000000000000007FF8000000000000007FF800000
0000000007FF8000000000000007FF8000000000000007FF8000000000000007FF800000
0000000007FF8000000000000007FF8000000000000007FF8000000000000007FF800000
0000000007FF8000000000000007FF8000000000000007FF8000000000000007FF800000
0000000007FF8000000000000007FF8000000000000007FF8000000001FFE007FF800000
001FFFFC07FF80000000FFFFFF07FF80000003FFFFFFC7FF8000000FFFE03FE7FF800000
1FFF0007F7FF8000007FFC0001FFFF800000FFF80000FFFF800001FFF000003FFF800003
FFE000001FFF800007FFC000001FFF800007FFC000000FFF80000FFF8000000FFF80001F
FF8000000FFF80001FFF0000000FFF80003FFF0000000FFF80003FFF0000000FFF80003F
FF0000000FFF80007FFE0000000FFF80007FFE0000000FFF80007FFE0000000FFF80007F
FE0000000FFF8000FFFE0000000FFF8000FFFE0000000FFF8000FFFE0000000FFF8000FF
FE0000000FFF8000FFFE0000000FFF8000FFFE0000000FFF8000FFFE0000000FFF8000FF
FE0000000FFF8000FFFE0000000FFF8000FFFE0000000FFF8000FFFE0000000FFF8000FF
FE0000000FFF80007FFE0000000FFF80007FFE0000000FFF80007FFE0000000FFF80003F
FF0000000FFF80003FFF0000000FFF80003FFF0000000FFF80001FFF0000000FFF80001F
FF0000000FFF80000FFF8000000FFF80000FFF8000001FFF800007FFC000003FFF800003
FFC000003FFF800001FFE000007FFF800000FFF00001FFFF8000007FF80003FFFFE00000
3FFE000FEFFFFF80000FFFC07FCFFFFF800007FFFFFF8FFFFF800001FFFFFE0FFFFF8000
003FFFF80FFFFF80000003FFC00FFE000041547CD24B>I<000003FFC0000000003FFFFC
00000001FFFFFF00000007FFFFFFC000000FFF81FFE000003FFC007FF800007FF8003FFC
0000FFF0001FFE0001FFE0000FFE0003FFC00007FF0007FFC00007FF800FFF800003FF80
0FFF800003FFC01FFF800001FFC01FFF000001FFC03FFF000001FFE03FFF000001FFE07F
FF000000FFE07FFE000000FFE07FFE000000FFF07FFE000000FFF0FFFE000000FFF0FFFE
000000FFF0FFFE000000FFF0FFFE000000FFF0FFFFFFFFFFFFF0FFFFFFFFFFFFF0FFFFFF
FFFFFFF0FFFFFFFFFFFFE0FFFE0000000000FFFE0000000000FFFE0000000000FFFE0000
000000FFFE0000000000FFFE00000000007FFE00000000007FFE00000000007FFF000000
00003FFF00000000003FFF00000000003FFF00000000E01FFF00000001F01FFF80000003
F00FFF80000003F007FFC0000007E007FFC0000007E003FFE000000FC001FFF000001FC0
00FFF800003F80007FFC0000FF00001FFE0003FE00000FFFC03FF8000003FFFFFFF00000
00FFFFFFC00000001FFFFE0000000001FFF0000034387CB63D>I<0000003FFC00000003
FFFF0000000FFFFFC000003FFFFFE00000FFF81FF00001FFC03FF80003FF807FF80007FF
00FFFC000FFE00FFFC001FFC00FFFC001FFC00FFFC003FF800FFFC003FF800FFFC003FF8
007FF8007FF0007FF8007FF0003FF0007FF0000FC0007FF0000000007FF0000000007FF0
000000007FF0000000007FF0000000007FF0000000007FF0000000007FF0000000007FF0
000000007FF0000000007FF0000000007FF0000000007FF0000000007FF0000000FFFFFF
FFE000FFFFFFFFE000FFFFFFFFE000FFFFFFFFE000FFFFFFFFE000007FF8000000007FF8
000000007FF8000000007FF8000000007FF8000000007FF8000000007FF8000000007FF8
000000007FF8000000007FF8000000007FF8000000007FF8000000007FF8000000007FF8
000000007FF8000000007FF8000000007FF8000000007FF8000000007FF8000000007FF8
000000007FF8000000007FF8000000007FF8000000007FF8000000007FF8000000007FF8
000000007FF8000000007FF8000000007FF8000000007FF8000000007FF8000000007FF8
000000007FF8000000007FF8000000007FF8000000007FF8000000007FF8000000007FF8
000000007FF8000000007FF8000000007FF8000000007FF8000000007FF80000007FFFFF
FE00007FFFFFFE00007FFFFFFE00007FFFFFFE00007FFFFFFE00002E547CD329>I<0000
3FFF0000FF000003FFFFF007FFC0000FFFFFFC1FFFE0003FFFFFFF7FFFE0007FFC0FFFFF
9FF000FFE001FFF83FF001FFC000FFE03FF003FF80007FF01FF007FF00003FF81FE00FFF
00003FFC0FC00FFF00003FFC07801FFE00001FFE00001FFE00001FFE00003FFE00001FFF
00003FFE00001FFF00003FFE00001FFF00003FFE00001FFF00003FFE00001FFF00003FFE
00001FFF00003FFE00001FFF00003FFE00001FFF00003FFE00001FFF00001FFE00001FFE
00001FFE00001FFE00000FFF00003FFC00000FFF00003FFC000007FF00003FF8000003FF
80007FF0000001FFC000FFE0000000FFE001FFC0000000FFFC0FFF80000001FFFFFFFF00
000003EFFFFFFC00000003C3FFFFF000000007C03FFF0000000007C000000000000007C0
0000000000000FC00000000000000FC00000000000000FC00000000000000FE000000000
00000FE00000000000000FF80000000000000FFE0000000000000FFFFFFFFF00000007FF
FFFFFFF8000007FFFFFFFFFF000007FFFFFFFFFFC00003FFFFFFFFFFE00001FFFFFFFFFF
F00000FFFFFFFFFFF800007FFFFFFFFFFC00007FFFFFFFFFFE0001FFFFFFFFFFFF0007FF
FFFFFFFFFF000FFE000003FFFF801FF80000003FFF803FF000000007FF807FE000000003
FFC07FE000000001FFC0FFC000000001FFC0FFC000000000FFC0FFC000000000FFC0FFC0
00000000FFC0FFC000000000FFC0FFC000000000FFC0FFE000000001FFC07FE000000001
FF807FF000000003FF803FF000000003FF001FF800000007FE000FFE0000001FFC0007FF
8000007FF80003FFE00001FFF00001FFFE001FFFE000007FFFFFFFFF8000000FFFFFFFFC
00000001FFFFFFE0000000000FFFFC0000003C4F7CB543>I<003FF0000000000000FFFF
F0000000000000FFFFF0000000000000FFFFF0000000000000FFFFF0000000000000FFFF
F000000000000003FFF000000000000000FFF000000000000000FFF000000000000000FF
F000000000000000FFF000000000000000FFF000000000000000FFF000000000000000FF
F000000000000000FFF000000000000000FFF000000000000000FFF000000000000000FF
F000000000000000FFF000000000000000FFF000000000000000FFF000000000000000FF
F000000000000000FFF000000000000000FFF000000000000000FFF000000000000000FF
F000000000000000FFF000000000000000FFF000000000000000FFF000000000000000FF
F0001FFC00000000FFF000FFFFC0000000FFF003FFFFF0000000FFF00FFFFFF8000000FF
F01FE07FFC000000FFF03F001FFE000000FFF07C001FFF000000FFF0F0000FFF000000FF
F1E0000FFF800000FFF3C0000FFF800000FFF7800007FF800000FFF7800007FFC00000FF
FF000007FFC00000FFFE000007FFC00000FFFE000007FFC00000FFFC000007FFC00000FF
FC000007FFC00000FFFC000007FFC00000FFFC000007FFC00000FFF8000007FFC00000FF
F8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FF
F8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FF
F8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FF
F8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FF
F8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FF
F8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FF
F8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FF
F8000007FFC000FFFFFFF807FFFFFFC0FFFFFFF807FFFFFFC0FFFFFFF807FFFFFFC0FFFF
FFF807FFFFFFC0FFFFFFF807FFFFFFC042537BD24B>I<007F000000FF800003FFE00007
FFF00007FFF0000FFFF8000FFFF8000FFFF8000FFFF8000FFFF8000FFFF8000FFFF80007
FFF00007FFF00003FFE00000FF8000007F00000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
3FF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF00001FFF00000FFF00000FFF00000
FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000
FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000
FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000
FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000
FFF00000FFF00000FFF00000FFF000FFFFFFE0FFFFFFE0FFFFFFE0FFFFFFE0FFFFFFE01B
547BD325>I<003FF00000000000FFFFF00000000000FFFFF00000000000FFFFF0000000
0000FFFFF00000000000FFFFF0000000000003FFF0000000000000FFF0000000000000FF
F0000000000000FFF0000000000000FFF0000000000000FFF0000000000000FFF0000000
000000FFF0000000000000FFF0000000000000FFF0000000000000FFF0000000000000FF
F0000000000000FFF0000000000000FFF0000000000000FFF0000000000000FFF0000000
000000FFF0000000000000FFF0000000000000FFF0000000000000FFF0000000000000FF
F0000000000000FFF0000000000000FFF0000000000000FFF0000000000000FFF00001FF
FFF800FFF00001FFFFF800FFF00001FFFFF800FFF00001FFFFF800FFF00001FFFFF800FF
F000003FFE0000FFF000001FF00000FFF000003FC00000FFF000007F800000FFF00000FF
000000FFF00003FE000000FFF00007F8000000FFF0000FF0000000FFF0001FE0000000FF
F0007FC0000000FFF000FF00000000FFF001FE00000000FFF003FC00000000FFF00FF800
000000FFF01FE000000000FFF03FF000000000FFF07FF800000000FFF1FFF800000000FF
F3FFFC00000000FFF7FFFE00000000FFFFFFFF00000000FFFFFFFF80000000FFFF9FFF80
000000FFFF0FFFC0000000FFFE0FFFE0000000FFF807FFF0000000FFF003FFF0000000FF
F001FFF8000000FFF000FFFC000000FFF000FFFE000000FFF0007FFF000000FFF0003FFF
000000FFF0001FFF800000FFF0001FFFC00000FFF0000FFFE00000FFF00007FFF00000FF
F00003FFF00000FFF00001FFF80000FFF00001FFFC0000FFF00000FFFE0000FFF000007F
FE0000FFF000003FFF0000FFF000007FFFC0FFFFFFF003FFFFFFFFFFFFF003FFFFFFFFFF
FFF003FFFFFFFFFFFFF003FFFFFFFFFFFFF003FFFFFF40537CD247>107
D<003FF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF00001FFF00000FFF00000FFF0
0000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF0
0000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF0
0000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF0
0000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF0
0000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF0
0000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF0
0000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF0
0000FFF00000FFF00000FFF00000FFF00000FFF00000FFF000FFFFFFF0FFFFFFF0FFFFFF
F0FFFFFFF0FFFFFFF01C537BD225>I<003FF0001FFC000000FFE00000FFFFF000FFFFC0
0007FFFE0000FFFFF003FFFFF0001FFFFF8000FFFFF00FFFFFF8007FFFFFC000FFFFF01F
E07FFC00FF03FFE000FFFFF03F001FFE01F800FFF00003FFF07C001FFF03E000FFF80000
FFF0F0000FFF0780007FF80000FFF1E0000FFF8F00007FFC0000FFF3C0000FFF9E00007F
FC0000FFF7800007FFBC00003FFC0000FFF7800007FFFC00003FFE0000FFFF000007FFF8
00003FFE0000FFFE000007FFF000003FFE0000FFFE000007FFF000003FFE0000FFFC0000
07FFE000003FFE0000FFFC000007FFE000003FFE0000FFFC000007FFE000003FFE0000FF
FC000007FFE000003FFE0000FFF8000007FFC000003FFE0000FFF8000007FFC000003FFE
0000FFF8000007FFC000003FFE0000FFF8000007FFC000003FFE0000FFF8000007FFC000
003FFE0000FFF8000007FFC000003FFE0000FFF8000007FFC000003FFE0000FFF8000007
FFC000003FFE0000FFF8000007FFC000003FFE0000FFF8000007FFC000003FFE0000FFF8
000007FFC000003FFE0000FFF8000007FFC000003FFE0000FFF8000007FFC000003FFE00
00FFF8000007FFC000003FFE0000FFF8000007FFC000003FFE0000FFF8000007FFC00000
3FFE0000FFF8000007FFC000003FFE0000FFF8000007FFC000003FFE0000FFF8000007FF
C000003FFE0000FFF8000007FFC000003FFE0000FFF8000007FFC000003FFE0000FFF800
0007FFC000003FFE0000FFF8000007FFC000003FFE0000FFF8000007FFC000003FFE0000
FFF8000007FFC000003FFE0000FFF8000007FFC000003FFE0000FFF8000007FFC000003F
FE0000FFF8000007FFC000003FFE0000FFF8000007FFC000003FFE0000FFF8000007FFC0
00003FFE00FFFFFFF807FFFFFFC03FFFFFFEFFFFFFF807FFFFFFC03FFFFFFEFFFFFFF807
FFFFFFC03FFFFFFEFFFFFFF807FFFFFFC03FFFFFFEFFFFFFF807FFFFFFC03FFFFFFE6736
7BB570>I<003FF0001FFC000000FFFFF000FFFFC00000FFFFF003FFFFF00000FFFFF00F
FFFFF80000FFFFF01FE07FFC0000FFFFF03F001FFE000003FFF07C001FFF000000FFF0F0
000FFF000000FFF1E0000FFF800000FFF3C0000FFF800000FFF7800007FF800000FFF780
0007FFC00000FFFF000007FFC00000FFFE000007FFC00000FFFE000007FFC00000FFFC00
0007FFC00000FFFC000007FFC00000FFFC000007FFC00000FFFC000007FFC00000FFF800
0007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF800
0007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF800
0007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF800
0007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF800
0007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF800
0007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF800
0007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF800
0007FFC00000FFF8000007FFC000FFFFFFF807FFFFFFC0FFFFFFF807FFFFFFC0FFFFFFF8
07FFFFFFC0FFFFFFF807FFFFFFC0FFFFFFF807FFFFFFC042367BB54B>I<000001FFE000
000000001FFFFE0000000000FFFFFFC000000003FFFFFFF00000000FFF807FFC0000001F
FC000FFE0000007FF80007FF800000FFF00003FFC00001FFE00001FFE00003FFC00000FF
F00003FF8000007FF00007FF8000007FF8000FFF0000003FFC000FFF0000003FFC001FFF
0000003FFE001FFF0000003FFE003FFE0000001FFF003FFE0000001FFF003FFE0000001F
FF007FFE0000001FFF807FFE0000001FFF807FFE0000001FFF807FFE0000001FFF80FFFE
0000001FFFC0FFFE0000001FFFC0FFFE0000001FFFC0FFFE0000001FFFC0FFFE0000001F
FFC0FFFE0000001FFFC0FFFE0000001FFFC0FFFE0000001FFFC0FFFE0000001FFFC0FFFE
0000001FFFC0FFFE0000001FFFC0FFFE0000001FFFC07FFE0000001FFF807FFE0000001F
FF807FFE0000001FFF803FFE0000001FFF003FFF0000003FFF003FFF0000003FFF001FFF
0000003FFE001FFF0000003FFE000FFF0000003FFC000FFF8000007FFC0007FF8000007F
F80003FFC00000FFF00001FFE00001FFE00000FFF00003FFC000007FF80007FF8000003F
FE001FFF0000000FFF807FFC00000007FFFFFFF800000000FFFFFFC0000000003FFFFF00
0000000001FFE00000003A387CB643>I<003FF001FFE0000000FFFFF00FFFFE000000FF
FFF03FFFFFC00000FFFFF0FFFFFFF00000FFFFF3FF01FFF80000FFFFF7F8007FFE000003
FFFFE0001FFF000000FFFF80000FFF800000FFFF000007FFC00000FFFE000007FFE00000
FFFC000003FFF00000FFF8000001FFF80000FFF8000001FFF80000FFF8000000FFFC0000
FFF8000000FFFC0000FFF8000000FFFE0000FFF80000007FFE0000FFF80000007FFF0000
FFF80000007FFF0000FFF80000007FFF0000FFF80000007FFF0000FFF80000003FFF8000
FFF80000003FFF8000FFF80000003FFF8000FFF80000003FFF8000FFF80000003FFF8000
FFF80000003FFF8000FFF80000003FFF8000FFF80000003FFF8000FFF80000003FFF8000
FFF80000003FFF8000FFF80000003FFF8000FFF80000003FFF8000FFF80000003FFF0000
FFF80000007FFF0000FFF80000007FFF0000FFF80000007FFF0000FFF80000007FFE0000
FFF8000000FFFE0000FFF8000000FFFE0000FFF8000000FFFC0000FFF8000001FFFC0000
FFF8000001FFF80000FFFC000003FFF00000FFFC000003FFF00000FFFE000007FFE00000
FFFF00000FFFC00000FFFF80001FFF800000FFFFC0003FFF000000FFFFF000FFFC000000
FFFBFE07FFF8000000FFF8FFFFFFE0000000FFF87FFFFF80000000FFF81FFFFC00000000
FFF803FFC000000000FFF800000000000000FFF800000000000000FFF800000000000000
FFF800000000000000FFF800000000000000FFF800000000000000FFF800000000000000
FFF800000000000000FFF800000000000000FFF800000000000000FFF800000000000000
FFF800000000000000FFF800000000000000FFF800000000000000FFF800000000000000
FFF800000000000000FFF8000000000000FFFFFFF80000000000FFFFFFF80000000000FF
FFFFF80000000000FFFFFFF80000000000FFFFFFF80000000000414D7BB54B>I<007FE0
03FE00FFFFE00FFF80FFFFE03FFFE0FFFFE07FFFF0FFFFE0FE1FF8FFFFE1F83FFC03FFE3
E03FFE00FFE3C07FFE00FFE7807FFE00FFEF807FFE00FFEF007FFE00FFEE007FFE00FFFE
003FFC00FFFC003FFC00FFFC001FF800FFFC000FF000FFF800000000FFF800000000FFF8
00000000FFF800000000FFF800000000FFF000000000FFF000000000FFF000000000FFF0
00000000FFF000000000FFF000000000FFF000000000FFF000000000FFF000000000FFF0
00000000FFF000000000FFF000000000FFF000000000FFF000000000FFF000000000FFF0
00000000FFF000000000FFF000000000FFF000000000FFF000000000FFF000000000FFF0
00000000FFF000000000FFF000000000FFF000000000FFF000000000FFF000000000FFF0
000000FFFFFFFC0000FFFFFFFC0000FFFFFFFC0000FFFFFFFC0000FFFFFFFC00002F367C
B537>114 D<0003FFF00F00003FFFFE1F0000FFFFFFFF0003FFFFFFFF0007FF003FFF00
0FF80007FF001FE00001FF003FC00000FF003F8000007F007F8000007F007F0000003F00
7F0000003F00FF0000001F00FF0000001F00FF8000001F00FF8000001F00FFC000001F00
FFF000000000FFFC00000000FFFFC00000007FFFFF0000007FFFFFF800003FFFFFFF0000
3FFFFFFFC0001FFFFFFFF0000FFFFFFFF80007FFFFFFFC0003FFFFFFFE0000FFFFFFFF00
003FFFFFFF80000FFFFFFFC00000FFFFFFC0000007FFFFE00000003FFFE000000007FFF0
00000001FFF0780000007FF0F80000003FF0F80000001FF0FC0000001FF0FC0000000FF0
FC0000000FF0FE0000000FF0FE0000000FE0FF0000000FE0FF8000001FE0FF8000001FC0
FFC000001FC0FFE000003F80FFF800007F00FFFE0001FE00FFFFC00FFC00FF7FFFFFF800
FC1FFFFFE000F807FFFF8000F000FFF800002C387CB635>I<00003E00000000003E0000
0000003E00000000003E00000000003E00000000003E00000000007E00000000007E0000
0000007E00000000007E0000000000FE0000000000FE0000000001FE0000000001FE0000
000001FE0000000003FE0000000007FE0000000007FE000000000FFE000000001FFE0000
00003FFE00000000FFFE00000001FFFE0000000FFFFFFFFF00FFFFFFFFFF00FFFFFFFFFF
00FFFFFFFFFF00FFFFFFFFFF00003FFE000000003FFE000000003FFE000000003FFE0000
00003FFE000000003FFE000000003FFE000000003FFE000000003FFE000000003FFE0000
00003FFE000000003FFE000000003FFE000000003FFE000000003FFE000000003FFE0000
00003FFE000000003FFE000000003FFE000000003FFE000000003FFE000000003FFE0000
00003FFE000000003FFE000000003FFE000000003FFE000000003FFE000000003FFE0007
C0003FFE0007C0003FFE0007C0003FFE0007C0003FFE0007C0003FFE0007C0003FFE0007
C0003FFE0007C0003FFE0007C0003FFE0007C0003FFE0007C0001FFE000F80001FFF000F
80001FFF000F80000FFF001F00000FFF801F000007FFC03E000003FFF0FC000001FFFFF8
0000007FFFF00000001FFFE000000003FF80002A4D7ECB34>I<003FF8000001FFC000FF
FFF80007FFFFC000FFFFF80007FFFFC000FFFFF80007FFFFC000FFFFF80007FFFFC000FF
FFF80007FFFFC00003FFF800001FFFC00000FFF8000007FFC00000FFF8000007FFC00000
FFF8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000
FFF8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000
FFF8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000
FFF8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000
FFF8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000
FFF8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000
FFF8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000FFF8000007FFC00000
FFF8000007FFC00000FFF8000007FFC00000FFF800000FFFC00000FFF800000FFFC00000
FFF800000FFFC00000FFF800001FFFC00000FFF800001FFFC000007FF800003FFFC00000
7FF800003BFFC000007FF800007BFFC000003FFC0000F3FFC000003FFC0001E3FFF00000
1FFE0007C3FFFFC0000FFFC03F83FFFFC00007FFFFFF03FFFFC00001FFFFFE03FFFFC000
007FFFF803FFFFC0000007FFE003FF000042377BB54B>I<FFFFFFE07FFFFFC003FFFFC0
FFFFFFE07FFFFFC003FFFFC0FFFFFFE07FFFFFC003FFFFC0FFFFFFE07FFFFFC003FFFFC0
FFFFFFE07FFFFFC003FFFFC001FFF00000FFF000001FF80001FFF800007FF0000007E000
00FFF800007FF8000007C00000FFF800007FF8000007C00000FFFC00003FF800000FC000
007FFC00003FFC00000F8000007FFC00003FFC00000F8000007FFE00003FFC00001F8000
003FFE00007FFE00001F0000003FFF00007FFE00003F0000001FFF00007FFF00003E0000
001FFF0000FFFF00003E0000001FFF8000FFFF00007E0000000FFF8001FFFF80007C0000
000FFFC001F3FF8000FC00000007FFC001F3FFC000F800000007FFC003F3FFC000F80000
0007FFE003E1FFC001F800000003FFE007E1FFE001F000000003FFF007C0FFE001F00000
0001FFF007C0FFF003E000000001FFF00FC0FFF003E000000001FFF80F807FF007E00000
0000FFF80F807FF807C000000000FFF81F003FF807C000000000FFFC1F003FF80FC00000
00007FFC3F003FFC0F80000000007FFE3E001FFC1F80000000003FFE3E001FFE1F000000
00003FFE7E001FFE1F00000000003FFF7C000FFE3F00000000001FFFFC000FFF3E000000
00001FFFF80007FF7E00000000000FFFF80007FFFC00000000000FFFF80007FFFC000000
00000FFFF00003FFFC000000000007FFF00003FFF8000000000007FFE00001FFF8000000
000003FFE00001FFF0000000000003FFE00001FFF0000000000003FFC00000FFF0000000
000001FFC00000FFE0000000000001FF8000007FE0000000000001FF8000007FE0000000
000000FF8000007FC0000000000000FF0000003FC00000000000007F0000003F80000000
0000007F0000003F800000000000003E0000001F000000005A367DB461>119
D E /Fq 17 118 df<1F003F807FC0FFE0FFE0FFE0FFE0FFE07FC03F801F000B0B7A8A17
>46 D<000003FF8001C000003FFFF803C00001FFFFFE07C00007FFFFFF8FC0001FFF801F
FFC0007FF80007FFC000FFE00001FFC001FFC00000FFC003FF0000007FC007FE0000003F
C00FFE0000003FC01FFC0000001FC01FF80000000FC03FF80000000FC03FF00000000FC0
7FF000000007C07FF000000007C07FF000000007C07FE00000000000FFE00000000000FF
E00000000000FFE00000000000FFE00000000000FFE00000000000FFE00000000000FFE0
0000000000FFE00000000000FFE00000000000FFE000000000007FE000000000007FF000
000000007FF000000003C07FF000000003C03FF000000003C03FF800000003C01FF80000
0007C01FFC00000007800FFE0000000F8007FE0000000F0003FF0000001F0001FFC00000
3E0000FFE00000FC00007FF80003F800001FFF801FF0000007FFFFFFC0000001FFFFFF00
0000003FFFFC0000000003FFC0000032307CAE3B>67 D<001FF8038000FFFF078003FFFF
CF8007FFFFFF801FF00FFF801FC001FF803F80007F807F00003F807E00001F807E00001F
80FE00000F80FE00000F80FE00000780FF00000780FF80000780FFC0000000FFF0000000
7FFF0000007FFFF000007FFFFF80003FFFFFE0001FFFFFF8000FFFFFFE0007FFFFFF0003
FFFFFF8000FFFFFFC0001FFFFFC00001FFFFE000000FFFE0000000FFF00000003FF00000
001FF00000000FF0F000000FF0F0000007F0F0000007F0F0000007F0F8000007F0F80000
07E0FC00000FE0FE00000FC0FF00001FC0FFC0003F80FFFC00FF00FFFFFFFE00F9FFFFFC
00F03FFFF000E003FF800024307CAE2D>83 D<3FFFFFFFFFFF003FFFFFFFFFFF003FFFFF
FFFFFF003FFFFFFFFFFF007FE00FFC01FF807F800FFC007F807E000FFC001F807C000FFC
000F807C000FFC000F8078000FFC00078078000FFC00078078000FFC00078078000FFC00
0780F0000FFC0003C0F0000FFC0003C0F0000FFC0003C0F0000FFC0003C000000FFC0000
0000000FFC00000000000FFC00000000000FFC00000000000FFC00000000000FFC000000
00000FFC00000000000FFC00000000000FFC00000000000FFC00000000000FFC00000000
000FFC00000000000FFC00000000000FFC00000000000FFC00000000000FFC0000000000
0FFC00000000000FFC00000000000FFC00000000000FFC00000000000FFC00000000000F
FC00000000000FFC00000000000FFC000000003FFFFFFF0000003FFFFFFF0000003FFFFF
FF0000003FFFFFFF0000322D7DAC39>I<007FF8000003FFFF00000FFFFFC0001FE01FF0
001FF007F8001FF003FC001FF003FC001FF001FE000FE001FE0007C001FE00000001FE00
000001FE000000FFFE00003FFFFE0001FFFFFE0007FFC1FE001FFC01FE003FE001FE007F
C001FE00FF8001FE00FF0001FE00FF0001FE00FF0001FE00FF0003FE00FF8003FE007FC0
07FF003FF03FFFF81FFFFEFFF807FFF87FF800FFC01FF8251E7E9D28>97
D<000FFE00007FFFC001FFFFF007FC07F80FF00FF81FE00FF83FE00FF83FC00FF87FC007
F07F8003E07F800000FF800000FF800000FF800000FF800000FF800000FF800000FF8000
00FF8000007F8000007FC000007FC000003FE0003C3FE0003C1FF0007C0FF800F807FE03
F001FFFFE0007FFF80000FFC001E1E7D9D24>99 D<000FFC00007FFF8001FFFFE007FC0F
F00FF003F81FE001FC1FE000FC3FC000FE7FC0007E7F80007E7F80007FFF80007FFF8000
7FFFFFFFFFFFFFFFFFFFFFFFFFFF800000FF800000FF8000007F8000007FC000007FC000
003FC0000F1FE0000F0FF0001F07F8007E03FE01FC01FFFFF8007FFFE00007FF00201E7E
9D25>101 D<03F0000000FFF0000000FFF0000000FFF0000000FFF00000000FF0000000
0FF00000000FF00000000FF00000000FF00000000FF00000000FF00000000FF00000000F
F00000000FF00000000FF00000000FF01FF0000FF07FFC000FF1FFFF000FF7E0FF800FFF
807F800FFE007FC00FFC003FC00FFC003FC00FF8003FC00FF8003FC00FF0003FC00FF000
3FC00FF0003FC00FF0003FC00FF0003FC00FF0003FC00FF0003FC00FF0003FC00FF0003F
C00FF0003FC00FF0003FC00FF0003FC00FF0003FC00FF0003FC00FF0003FC00FF0003FC0
FFFF03FFFCFFFF03FFFCFFFF03FFFCFFFF03FFFC262E7CAD2D>104
D<07C00FE01FF03FF83FF83FF83FF83FF81FF00FE007C000000000000000000000000003
F0FFF0FFF0FFF0FFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00F
F00FF00FF00FF00FF00FF00FF00FF0FFFFFFFFFFFFFFFF102F7CAE17>I<03F0FFF0FFF0
FFF0FFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF0
0FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF0
0FF00FF00FF0FFFFFFFFFFFFFFFF102E7CAD17>108 D<07E00FF8001FF000FFE07FFE00
FFFC00FFE1FFFF83FFFF00FFE7E07FCFC0FF80FFEF803FDF007F800FFE003FFC007F800F
FE001FFC003FC00FFC001FF8003FC00FF8001FF0003FC00FF8001FF0003FC00FF0001FE0
003FC00FF0001FE0003FC00FF0001FE0003FC00FF0001FE0003FC00FF0001FE0003FC00F
F0001FE0003FC00FF0001FE0003FC00FF0001FE0003FC00FF0001FE0003FC00FF0001FE0
003FC00FF0001FE0003FC00FF0001FE0003FC00FF0001FE0003FC00FF0001FE0003FC00F
F0001FE0003FC00FF0001FE0003FC0FFFF01FFFE03FFFCFFFF01FFFE03FFFCFFFF01FFFE
03FFFCFFFF01FFFE03FFFC3E1E7C9D45>I<07E01FF000FFE07FFC00FFE1FFFF00FFE7E0
FF80FFEF807F800FFE007FC00FFC003FC00FFC003FC00FF8003FC00FF8003FC00FF0003F
C00FF0003FC00FF0003FC00FF0003FC00FF0003FC00FF0003FC00FF0003FC00FF0003FC0
0FF0003FC00FF0003FC00FF0003FC00FF0003FC00FF0003FC00FF0003FC00FF0003FC00F
F0003FC0FFFF03FFFCFFFF03FFFCFFFF03FFFCFFFF03FFFC261E7C9D2D>I<0007FE0000
007FFFE00001FFFFF80003FC03FC0007F000FE000FE0007F001FC0003F803FC0003FC03F
80001FC07F80001FE07F80001FE0FF80001FF0FF80001FF0FF80001FF0FF80001FF0FF80
001FF0FF80001FF0FF80001FF0FF80001FF07F80001FE07F80001FE07FC0003FE03FC000
3FC01FC0003F801FE0007F800FF000FF0003FC03FC0001FFFFF800007FFFE0000007FE00
00241E7E9D29>I<03F03FE000FFF1FFFC00FFF7FFFF00FFFFC0FF80FFFE007FC00FFC00
3FE00FF8001FF00FF0001FF00FF0000FF80FF0000FF80FF0000FFC0FF00007FC0FF00007
FC0FF00007FC0FF00007FC0FF00007FC0FF00007FC0FF00007FC0FF00007FC0FF0000FF8
0FF0000FF80FF0000FF80FF0001FF00FF8001FF00FFC003FE00FFE007FC00FFF81FF800F
F7FFFE000FF1FFF8000FF07FC0000FF00000000FF00000000FF00000000FF00000000FF0
0000000FF00000000FF00000000FF00000000FF0000000FFFF000000FFFF000000FFFF00
0000FFFF000000262B7D9D2D>I<07E07E00FFE1FF80FFE3FFE0FFE78FE0FFEF1FF00FFE
1FF00FFC1FF00FFC1FF00FF80FE00FF807C00FF800000FF000000FF000000FF000000FF0
00000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF0
00000FF000000FF00000FFFF8000FFFF8000FFFF8000FFFF80001C1E7D9D22>114
D<003C0000003C0000003C0000003C0000007C0000007C0000007C000000FC000000FC00
0001FC000003FC000007FC00001FFFFF00FFFFFF00FFFFFF00FFFFFF0003FC000003FC00
0003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC00
0003FC000003FC000003FC000003FC03C003FC03C003FC03C003FC03C003FC03C003FC03
C003FC07C001FE078001FF0F8000FFFF00003FFC00000FF0001A2A7FA920>116
D<03F0000FC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC00FF0003FC00FF0003FC0
0FF0003FC00FF0003FC00FF0003FC00FF0003FC00FF0003FC00FF0003FC00FF0003FC00F
F0003FC00FF0003FC00FF0003FC00FF0003FC00FF0003FC00FF0003FC00FF0003FC00FF0
003FC00FF0007FC00FF0007FC00FF000FFC007F001FFC007F807FFFC03FFFFBFFC00FFFE
3FFC003FF03FFC261E7C9D2D>I E /Fr 51 122 df<00030007000E001C0038007000F0
01E001C003C0078007800F000F001E001E001E003C003C003C003C007800780078007800
7800F800F800F000F000F000F000F000F000F000F000F000F000F000F800F80078007800
7800780078003C003C003C003C001E001E001E000F000F000780078003C001C001E000F0
00700038001C000E0007000310437AB11B>40 D<C000E000700038001C000E000F000780
038003C001E001E000F000F0007800780078003C003C003C003C001E001E001E001E001E
001F001F000F000F000F000F000F000F000F000F000F000F000F001F001F001E001E001E
001E001E003C003C003C003C00780078007800F000F001E001E003C0038007800F000E00
1C0038007000E000C00010437CB11B>I<3C007E00FF00FF00FF80FF807F803D80018001
800180038003000300070006000E001C0038007000600009157A8714>44
D<FFFFC0FFFFC0FFFFC0FFFFC012047F9018>I<3C7EFFFFFFFF7E3C08087A8714>I<0000
00C0000001C0000003C0000003800000038000000780000007000000070000000F000000
0E0000000E0000001E0000001C0000001C0000003C000000380000007800000070000000
70000000F0000000E0000000E0000001E0000001C0000001C0000003C000000380000007
80000007000000070000000F0000000E0000000E0000001E0000001C0000001C0000003C
00000038000000380000007800000070000000F0000000E0000000E0000001E0000001C0
000001C0000003C00000038000000380000007800000070000000F0000000E0000000E00
00001E0000001C0000001C0000003C000000380000003800000078000000700000007000
0000F0000000E0000000E00000001A437CB123>I<000C00003C00007C0003FC00FFFC00
FC7C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00
007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00
007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00
00FE007FFFFE7FFFFE172C7AAB23>49 D<007F800001FFF0000780FC000E003F001C001F
8038000FC070000FC0600007E0F00007E0FC0007F0FE0007F0FE0003F0FE0003F0FE0003
F07C0007F0000007F0000007F0000007E000000FE000000FC000001FC000001F8000003F
0000007E0000007C000000F8000001F0000003E0000007C000000F8000001E0000003C00
000078000000F0003000E0003001C0003003800060070000600E0000E01FFFFFE03FFFFF
E07FFFFFC0FFFFFFC0FFFFFFC01C2C7DAB23>I<003FC00001FFF00007C0FC000E007E00
1C003F001C001F803F001FC03F001FC03F800FC03F000FC03F000FC00C001FC000001FC0
00001F8000001F8000003F0000003E0000007C000000F8000003F00000FFC00000FFF000
0000FC0000003F0000001F8000001FC000000FC000000FE000000FE0000007F0000007F0
380007F07C0007F0FE0007F0FE0007F0FE0007F0FE000FE0F8000FE060000FC070001FC0
38001F801E003F000780FC0001FFF000007FC0001C2D7DAB23>I<0C0001800FC01F800F
FFFF000FFFFE000FFFFC000FFFF0000FFFC0000C7E00000C0000000C0000000C0000000C
0000000C0000000C0000000C0000000C0000000C1FC0000C7FF8000DE07C000F801F000F
001F800E000F800C0007C0000007E0000007E0000003E0000003F0000003F0000003F000
0003F0780003F0FC0003F0FC0003F0FC0003F0FC0003F0F80007E0E00007E0600007C070
000FC038000F801C001F000E003E000780F80001FFE000007F80001C2D7DAB23>53
D<0003F800000FFE00003E078000F8018001F007C003E00FC007C00FC00F800FC00F800F
C01F0007801F0000003E0000003E0000007E0000007E0000007C0000007C0FC000FC3FF0
00FCF07C00FDC01E00FF800F00FF000F80FF0007C0FE0007E0FE0007E0FE0003E0FC0003
F0FC0003F0FC0003F0FC0003F07C0003F07C0003F07C0003F07E0003F07E0003F03E0003
E03E0007E01E0007E01F0007C00F000F8007801F0003C03E0001E07C00007FF000001FC0
001C2D7DAB23>I<001FC00000FFF00003E07C0007801E000F000F001E0007801E000780
3C0003C03C0003C03C0003C03C0003C03E0003C03E0007C03F0007801FC00F801FE00F00
1FF81E000FFC3C0007FFF80003FFE00000FFE000003FF80000FFFC0003C7FF000783FF80
1F00FFC01E003FC03C001FE07C0007E0780003F0F80003F0F00001F0F00000F0F00000F0
F00000F0F00000F0F80000E0780001E07C0001C03C0003C01E0007800F800F0007E03C00
01FFF000003FC0001C2D7DAB23>56 D<003F800000FFF00003E0780007C03E000F801F00
1F000F003E000F803E0007807E0007C07C0007C0FC0007E0FC0003E0FC0003E0FC0003E0
FC0003F0FC0003F0FC0003F0FC0003F0FC0003F07C0007F07E0007F07E0007F03E000FF0
1F000FF00F001FF007803BF003E0F3F000FFC3F0003F03E0000003E0000007E0000007E0
000007C0000007C000000FC01E000F803F000F003F001F003F003E003F003C003E007800
1C00F0000E03E00007FF800001FE00001C2D7DAB23>I<3C7EFFFFFFFF7E3C0000000000
00000000000000003C7EFFFFFFFF7E3C081D7A9C14>I<FFFFFFFFFFFCFFFFFFFFFFFCFF
FFFFFFFFFC00000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000FFFFFFFFFFFCFFFFFFFFFFFCFFFFFFFFFFFC2E137C9937>61
D<000001800000000003C00000000003C00000000003C00000000007E00000000007E000
0000000FF0000000000FF0000000000FF0000000001BF80000000019F80000000019F800
00000030FC0000000030FC0000000070FE00000000607E00000000607E00000000C03F00
000000C03F00000000C03F00000001801F80000001801F80000003801FC0000003000FC0
000003000FC00000060007E00000060007E00000060007E000000C0003F000000C0003F0
00001FFFFFF800001FFFFFF80000180001F80000300000FC0000300000FC0000300000FC
00006000007E00006000007E0000E000007F0000C000003F0000C000003F0001C000001F
8003C000001F8007C000001FC00FF000003FE0FFFC0003FFFFFFFC0003FFFF302F7EAE35
>65 D<00001FF000C00000FFFE01C00003F00F83C0000F8001E3C0003F000077C0007C00
003FC001F800001FC003F000000FC007E0000007C007E0000007C00FC0000003C01FC000
0003C01F80000001C03F80000001C03F00000001C07F00000000C07F00000000C07F0000
0000C0FE0000000000FE0000000000FE0000000000FE0000000000FE0000000000FE0000
000000FE0000000000FE0000000000FE0000000000FE0000000000FE00000000007F0000
0000007F00000000C07F00000000C03F00000000C03F80000000C01F80000001C01FC000
0001800FC00000018007E00000038007E00000070003F00000060001F800000E00007C00
001C00003F00007800000F8001E0000003F00FC0000000FFFE000000001FF000002A2F7C
AD33>67 D<FFFFFFF80000FFFFFFFF000003F8001FE00001F80003F00001F80000F80001
F800007E0001F800003F0001F800001F8001F800000F8001F800000FC001F8000007E001
F8000007E001F8000003F001F8000003F001F8000003F801F8000001F801F8000001F801
F8000001F801F8000001FC01F8000001FC01F8000001FC01F8000001FC01F8000001FC01
F8000001FC01F8000001FC01F8000001FC01F8000001FC01F8000001FC01F8000001F801
F8000001F801F8000001F801F8000003F001F8000003F001F8000003E001F8000007E001
F8000007C001F800000FC001F800001F8001F800003F0001F800007E0001F80000FC0001
F80003F00003F8001FE000FFFFFFFF8000FFFFFFF800002E2D7DAC36>I<FFFFFFFFFCFF
FFFFFFFC03F80003FC01F800007C01F800003E01F800001E01F800000E01F800000E01F8
00000601F800000601F800000601F800000701F800000301F800180301F800180301F800
180001F800180001F800180001F800380001F800780001F800F80001FFFFF80001FFFFF8
0001F800F80001F800780001F800380001F800180001F800180001F800180001F8001800
01F800180001F800000001F800000001F800000001F800000001F800000001F800000001
F800000001F800000001F800000001F800000001F800000003FC000000FFFFF80000FFFF
F80000282D7EAC2E>70 D<FFFFF03FFFFCFFFFF03FFFFC03FC0000FF0001F800007E0001
F800007E0001F800007E0001F800007E0001F800007E0001F800007E0001F800007E0001
F800007E0001F800007E0001F800007E0001F800007E0001F800007E0001F800007E0001
F800007E0001F800007E0001F800007E0001F800007E0001F800007E0001FFFFFFFE0001
FFFFFFFE0001F800007E0001F800007E0001F800007E0001F800007E0001F800007E0001
F800007E0001F800007E0001F800007E0001F800007E0001F800007E0001F800007E0001
F800007E0001F800007E0001F800007E0001F800007E0001F800007E0001F800007E0001
F800007E0001F800007E0003FC0000FF00FFFFF03FFFFCFFFFF03FFFFC2E2D7DAC35>72
D<FFFFF0FFFFF003FC0001F80001F80001F80001F80001F80001F80001F80001F80001F8
0001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F8
0001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F8
0001F80001F80001F80001F80001F80001F80003FC00FFFFF0FFFFF0142D7EAC19>I<FF
F80003FFFCFFFC0003FFFC01FC00003FC001FE00000F0001FF0000060001BF8000060001
BF80000600019FC0000600018FE00006000187E00006000187F00006000183F800060001
81F80006000181FC0006000180FE00060001807E00060001807F00060001803F80060001
801FC0060001800FC0060001800FE00600018007F00600018003F00600018003F8060001
8001FC0600018000FC0600018000FE06000180007F06000180003F86000180001F860001
80001FC6000180000FE60001800007E60001800007F60001800003FE0001800001FE0001
800001FE0001800000FE00018000007E00018000003E00018000003E0003C000001E000F
F000000E00FFFF00000E00FFFF000006002E2D7DAC35>78 D<FFFFFFFC0000FFFFFFFF80
0003F8000FE00001F80003F00001F80000F80001F80000FC0001F800007E0001F800007F
0001F800003F0001F800003F8001F800003F8001F800003F8001F800003F8001F800003F
8001F800003F8001F800003F0001F800007F0001F800007E0001F80000FC0001F80000F8
0001F80003F00001F8000FE00001FFFFFF800001FFFFFC000001F80000000001F8000000
0001F80000000001F80000000001F80000000001F80000000001F80000000001F8000000
0001F80000000001F80000000001F80000000001F80000000001F80000000001F8000000
0001F80000000001F80000000001F80000000001F80000000003FC00000000FFFFF00000
00FFFFF0000000292D7EAC30>80 D<FFFFFFC00000FFFFFFFC000003F8007F000001F800
0FC00001F80007E00001F80003F00001F80001F80001F80001FC0001F80000FC0001F800
00FE0001F80000FE0001F80000FE0001F80000FE0001F80000FE0001F80000FC0001F800
01FC0001F80001F80001F80003F00001F80007E00001F8000FC00001F8007F000001FFFF
FC000001FFFFF0000001F800FC000001F8003E000001F8001F800001F8000F800001F800
0FC00001F80007E00001F80007E00001F80007E00001F80007E00001F80007E00001F800
07F00001F80007F00001F80007F00001F80007F00001F80007F00001F80007F00301F800
07F80301F80003F80301F80003F80703FC0001FC0EFFFFF000FE1CFFFFF0003FF8000000
0007E0302E7DAC34>82 D<003F803001FFF07007C07C700F000EF01E0007F03C0003F078
0001F0780000F0700000F0F0000070F0000070F0000070F0000030F8000030F8000030FC
0000007E0000007F0000003FE000003FFE00001FFFE0000FFFFC0007FFFF0001FFFF8000
3FFFE00003FFE000003FF0000007F8000001F8000000F8000000FC0000007CC000007CC0
00003CC000003CC000003CE000003CE000003CE0000078F0000078F8000070FC0000F0FE
0001E0F78003C0E3F00F00E07FFE00C00FF0001E2F7CAD27>I<7FFFFFFFFFF87FFFFFFF
FFF87F000FC003F87C000FC000F870000FC0003870000FC0003860000FC0001860000FC0
0018E0000FC0001CE0000FC0001CC0000FC0000CC0000FC0000CC0000FC0000CC0000FC0
000CC0000FC0000C00000FC0000000000FC0000000000FC0000000000FC0000000000FC0
000000000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC0
000000000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC0
000000000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC0
000000000FC0000000000FC0000000000FC0000000000FC0000000001FE00000001FFFFF
E000001FFFFFE0002E2D7EAC33>I<FFFFC0000FFFC0FFFFC0000FFFC007FE000001FE00
03FC000000F80001FC000000E00000FE000000C00000FE000001C000007F000003800000
3F8000030000003F8000070000001FC0000E0000000FE0000C0000000FE0001800000007
F0003800000003F8003000000003F8006000000001FC00E000000000FE00C000000000FE
0180000000007F0380000000003F8300000000003F8600000000001FCE00000000000FEC
00000000000FF8000000000007F8000000000003F0000000000003F0000000000003F000
0000000003F0000000000003F0000000000003F0000000000003F0000000000003F00000
00000003F0000000000003F0000000000003F0000000000003F0000000000003F0000000
000003F0000000000003F0000000000003F0000000000007F80000000001FFFFC0000000
01FFFFC00000322D7FAC35>89 D<00C00001E00003F00007F8000F3C001E1E003C0F0070
0380E001C0C000C0120A78AD23>94 D<00FF000007FFC0000F01F0001C00F8003F007C00
3F003E003F003E003F003F001E001F0000001F0000001F0000001F0000001F000007FF00
007FFF0001FE1F0007F01F001FC01F003F801F007F001F007E001F00FE001F06FC001F06
FC001F06FC001F06FC003F06FE003F067E007F067F00EF8C1F83C7FC0FFF03F801FC01E0
1F207D9E23>97 D<07C0000000FFC0000000FFC00000000FC000000007C000000007C000
000007C000000007C000000007C000000007C000000007C000000007C000000007C00000
0007C000000007C000000007C000000007C0FE000007C7FF800007CF03E00007DC01F000
07F8007C0007F0007E0007E0003E0007C0001F0007C0001F8007C0001F8007C0000F8007
C0000FC007C0000FC007C0000FC007C0000FC007C0000FC007C0000FC007C0000FC007C0
000FC007C0000FC007C0001F8007C0001F8007C0001F0007C0003F0007E0003E0007F000
7C0007B000F80007BC01F000070E07E0000607FF80000001FC0000222F7EAD27>I<001F
E000007FFC0001F01E0003E0070007C01F800F801F801F001F803F001F803E000F007E00
00007E0000007C000000FC000000FC000000FC000000FC000000FC000000FC000000FC00
0000FC000000FC0000007E0000007E0000007E0000C03F0000C01F0001C01F8001800FC0
038007E0070001F03E00007FF800001FC0001A207E9E1F>I<000000F80000001FF80000
001FF800000001F800000000F800000000F800000000F800000000F800000000F8000000
00F800000000F800000000F800000000F800000000F800000000F800000000F800000FE0
F800007FF8F80001F81EF80003E007F80007C003F8000F8001F8001F0001F8003F0000F8
003E0000F8007E0000F8007E0000F800FC0000F800FC0000F800FC0000F800FC0000F800
FC0000F800FC0000F800FC0000F800FC0000F800FC0000F8007C0000F8007E0000F8007E
0000F8003E0001F8001F0001F8001F8003F8000F8007F80003E00EFC0001F03CFFC0007F
F0FFC0001FC0F800222F7EAD27>I<001F800000FFF00003E0780007C03E000F801E001F
001F001F000F803E000F807E0007807E0007C07C0007C0FC0007C0FC0007C0FC0007C0FF
FFFFC0FFFFFFC0FC000000FC000000FC000000FC000000FC0000007E0000007E0000003E
0000C03F0000C01F0001C00F8003800FC0030003E00F0001F03C00007FF800001FC0001A
207E9E1F>I<0003F0000FFC003E1E007C3F00F83F01F03F01F03F03E00C03E00003E000
03E00003E00003E00003E00003E00003E00003E00003E000FFFFE0FFFFE003E00003E000
03E00003E00003E00003E00003E00003E00003E00003E00003E00003E00003E00003E000
03E00003E00003E00003E00003E00003E00003E00003E00003E00003E00007F0007FFF80
7FFF80182F7FAE16>I<003F00F800FFC3FE03E1FF1E07807C1E0F807C0C1F003E001F00
3E003E001F003E001F003E001F003E001F003E001F003E001F003E001F001F003E001F00
3E000F807C00078078000FE1F0000CFFC0001C3F00001C0000001C0000001C0000001E00
00001F0000000FFFF8000FFFFF0007FFFFC00FFFFFF01E0007F83C0000F87800007CF800
007CF000003CF000003CF000003CF000003CF800007C7C0000F83E0001F01F0003E007E0
1F8001FFFE00003FF0001F2D7E9D23>I<07C0000000FFC0000000FFC00000000FC00000
0007C000000007C000000007C000000007C000000007C000000007C000000007C0000000
07C000000007C000000007C000000007C000000007C000000007C0FE000007C3FF800007
C703E00007DE01F00007F801F00007F000F80007F000F80007E000F80007E000F80007C0
00F80007C000F80007C000F80007C000F80007C000F80007C000F80007C000F80007C000
F80007C000F80007C000F80007C000F80007C000F80007C000F80007C000F80007C000F8
0007C000F80007C000F80007C000F8000FE001FC00FFFE1FFFC0FFFE1FFFC0222E7EAD27
>I<07800FC01FE01FE01FE01FE00FC007800000000000000000000000000000000007C0
FFC0FFC00FC007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C0
07C007C007C007C007C007C007C007C00FE0FFFCFFFC0E2E7EAD14>I<07C0000000FFC0
000000FFC00000000FC000000007C000000007C000000007C000000007C000000007C000
000007C000000007C000000007C000000007C000000007C000000007C000000007C00000
0007C000000007C01FFE0007C01FFE0007C00FF00007C007C00007C007800007C00E0000
07C01C000007C038000007C070000007C0E0000007C3C0000007C7C0000007CFE0000007
DFF0000007F9F0000007F0F8000007E0FC000007C07E000007C03E000007C01F000007C0
1F800007C00FC00007C007C00007C003E00007C003F00007C001F8000FE003FC00FFFE07
FF80FFFE07FF80212E7EAD25>107 D<07C0FFC0FFC00FC007C007C007C007C007C007C0
07C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C0
07C007C007C007C007C007C007C007C007C007C007C007C007C007C007C00FE0FFFEFFFE
0F2E7EAD14>I<07C07F0007F000FFC3FFC03FFC00FFC783F0783F000FCE01F8E01F8007
DC00F9C00F8007F800FF800FC007F0007F0007C007E0007E0007C007E0007E0007C007C0
007C0007C007C0007C0007C007C0007C0007C007C0007C0007C007C0007C0007C007C000
7C0007C007C0007C0007C007C0007C0007C007C0007C0007C007C0007C0007C007C0007C
0007C007C0007C0007C007C0007C0007C007C0007C0007C007C0007C0007C007C0007C00
07C007C0007C0007C007C0007C0007C00FE000FE000FE0FFFE0FFFE0FFFEFFFE0FFFE0FF
FE371E7E9D3C>I<07C0FE0000FFC3FF8000FFC703E0000FDE01F00007F801F00007F000
F80007F000F80007E000F80007E000F80007C000F80007C000F80007C000F80007C000F8
0007C000F80007C000F80007C000F80007C000F80007C000F80007C000F80007C000F800
07C000F80007C000F80007C000F80007C000F80007C000F80007C000F80007C000F8000F
E001FC00FFFE1FFFC0FFFE1FFFC0221E7E9D27>I<001FE000007FF80001F03E0003C00F
00078007800F0003C01F0003E03E0001F03E0001F07C0000F87C0000F87C0000F8FC0000
FCFC0000FCFC0000FCFC0000FCFC0000FCFC0000FCFC0000FCFC0000FCFC0000FC7C0000
F87C0000F83E0001F03E0001F01F0003E01F0003E00F8007C007C00F8001F03E00007FF8
00001FE0001E207E9E23>I<07C0FE0000FFC7FF8000FFCF03E0000FDC01F00007F800FC
0007F0007E0007E0003E0007C0003F0007C0001F8007C0001F8007C0001F8007C0000FC0
07C0000FC007C0000FC007C0000FC007C0000FC007C0000FC007C0000FC007C0000FC007
C0001FC007C0001F8007C0001F8007C0003F0007C0003F0007E0007E0007F0007C0007F0
00F80007FC01F00007CE07E00007C7FF800007C1FC000007C000000007C000000007C000
000007C000000007C000000007C000000007C000000007C000000007C00000000FE00000
00FFFE000000FFFE000000222B7E9D27>I<000FE01800007FF8380001F81C380003E00E
780007C00778000F8003F8001F8001F8003F0001F8003F0001F8007E0000F8007E0000F8
00FE0000F800FC0000F800FC0000F800FC0000F800FC0000F800FC0000F800FC0000F800
FC0000F800FC0000F8007E0000F8007E0000F8007E0000F8003F0001F8001F0001F8001F
8003F8000FC007F80003E00EF80001F03CF800007FF0F800001FC0F800000000F8000000
00F800000000F800000000F800000000F800000000F800000000F800000000F800000000
F800000001FC0000001FFFC000001FFFC0222B7E9D25>I<0781F8FF87FEFF8E3F0F9C3F
07B83F07B03F07F01E07E00007E00007E00007E00007C00007C00007C00007C00007C000
07C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C0000FE000
FFFF00FFFF00181E7E9D1C>I<01FE1807FFB81E01F83C00F8780078F00038F00038F000
18F00018F80018FC0018FF00007FF0003FFF001FFFC00FFFF001FFF8001FFC0001FCC000
7EC0003EC0003EE0001EE0001EF0001EF0001EF8003CF8003CFC0078FF01F0E3FFC0C0FF
0017207E9E1C>I<00600000600000600000600000E00000E00000E00001E00003E00003
E00007E0001FE000FFFFF0FFFFF003E00003E00003E00003E00003E00003E00003E00003
E00003E00003E00003E00003E00003E00003E00003E00003E01803E01803E01803E01803
E01803E01803E01803E03801F03001F07000F860003FE0000F80152A7FA81B>I<07C000
F800FFC01FF800FFC01FF8000FC001F80007C000F80007C000F80007C000F80007C000F8
0007C000F80007C000F80007C000F80007C000F80007C000F80007C000F80007C000F800
07C000F80007C000F80007C000F80007C000F80007C000F80007C000F80007C000F80007
C001F80007C001F80007C001F80007C003F80003E007F80003E00EFC0001F81CFFC0007F
F8FFC0001FE0F800221F7E9D27>I<FFFC01FFC0FFFC01FFC00FE0007E0007E0007C0007
E000380003E000300003E000700001F000600001F000600000F800C00000F800C00000F8
00C000007C018000007C018000003E030000003E030000003F070000001F060000001F06
0000000F8C0000000F8C0000000FDC00000007D800000007D800000003F000000003F000
000003F000000001E000000001E000000000C00000221E7F9C25>I<FFFC3FFE07FFFFFC
3FFE07FF0FE003F001F80FC003E000F007C001E000E007C001F000E003E003F000C003E0
03F000C003E007F801C001F00678018001F00678018001F80E7C038000F80C3C030000F8
0C3C0300007C181E0600007C181E0600007C181F0600003E300F0C00003E300F0C00003E
300F8C00001F60079800001F60079800001F6007D800000FC003F000000FC003F000000F
C003F00000078001E00000078001E00000078001E00000030000C000301E7F9C33>I<FF
FC01FFC0FFFC01FFC00FE0007E0007E0007C0007E000380003E000300003F000700001F0
00600001F000600000F800C00000F800C00000FC01C000007C018000007E038000003E03
0000003E030000001F060000001F060000001F8E0000000F8C0000000F8C00000007D800
000007D800000003F000000003F000000003F000000001E000000001E000000000C00000
0000C0000000018000000001800000000380000000030000007803000000FC06000000FC
06000000FC0C000000FC1C000000783800000070700000003FE00000000F80000000222B
7F9C25>121 D E /Fs 2 4 df<FFFFFFFFC0FFFFFFFFC0FFFFFFFFC022037A8D30>0
D<006000007000006000006000406020E06070F861F07E67E01FFF8007FE0000F00007FE
001FFF807E67E0F861F0E0607040602000600000600000700000600014157B9620>3
D E /Ft 76 123 df<00000FF800FC0000007FFF07FF000001F807DF83C00007E001FF0F
C0001F8007FE1FE0003F000FFC1FE0007E000FFC1FE0007E000FF81FE000FC000FF81FE0
00FC000FF0078001F80007F0000001F80003F0000001F80003F0000001F80003F0000001
F80003F0000001F80003F0000001F80003F0000001F80003F0000001F80003F0000001F8
0003F0000001F80003F0000001F80003F0000001F80003F00000FFFFFFFFFFF800FFFFFF
FFFFF800FFFFFFFFFFF80001F80003F0000001F80003F0000001F80003F0000001F80003
F0000001F80003F0000001F80003F0000001F80003F0000001F80003F0000001F80003F0
000001F80003F0000001F80003F0000001F80003F0000001F80003F0000001F80003F000
0001F80003F0000001F80003F0000001F80003F0000001F80003F0000001F80003F00000
01F80003F0000001F80003F0000001F80003F0000001F80003F0000001F80003F0000001
F80003F0000001F80003F0000001F80003F0000001F80003F0000001F80003F0000003FC
0007F800007FFFE0FFFFF0007FFFE0FFFFF0007FFFE0FFFFF000333B7FBA30>11
D<00000FF8000000007FFE00000001F80780000007E001C000001F8000E000003F0007E0
00007E000FF000007E000FF00000FC000FF00000FC000FF00001F8000FF00001F80007E0
0001F80001800001F80000000001F80000000001F80000000001F80000000001F8000000
0001F80000000001F80000000001F80000000001F80000000001F80003F000FFFFFFFFF0
00FFFFFFFFF000FFFFFFFFF00001F8000FF00001F80003F00001F80003F00001F80003F0
0001F80003F00001F80003F00001F80003F00001F80003F00001F80003F00001F80003F0
0001F80003F00001F80003F00001F80003F00001F80003F00001F80003F00001F80003F0
0001F80003F00001F80003F00001F80003F00001F80003F00001F80003F00001F80003F0
0001F80003F00001F80003F00001F80003F00001F80003F00001F80003F00001F80003F0
0001F80003F00003FC0007F8007FFFE0FFFFC07FFFE0FFFFC07FFFE0FFFFC02A3B7FBA2E
>I<00000FFC000000007FFF70000001F803F0000007E007F000001F800FF000003F000F
F000007E000FF000007E000FF00000FC000FF00000FC0007F00001F80003F00001F80003
F00001F80003F00001F80003F00001F80003F00001F80003F00001F80003F00001F80003
F00001F80003F00001F80003F00001F80003F00001F80003F00001F80003F000FFFFFFFF
F000FFFFFFFFF000FFFFFFFFF00001F80003F00001F80003F00001F80003F00001F80003
F00001F80003F00001F80003F00001F80003F00001F80003F00001F80003F00001F80003
F00001F80003F00001F80003F00001F80003F00001F80003F00001F80003F00001F80003
F00001F80003F00001F80003F00001F80003F00001F80003F00001F80003F00001F80003
F00001F80003F00001F80003F00001F80003F00001F80003F00001F80003F00001F80003
F00001F80003F00003FC0007F8007FFFE0FFFFC07FFFE0FFFFC07FFFE0FFFFC02A3B7FBA
2E>I<00000FF0001FF0000000007FFE00FFFC00000001F80F83F00F00000007E001CFC0
038000001F8000FF0001C000003F0007FE000FC000007E000FFC001FE000007E000FFC00
1FE00000FC000FF8001FE00000FC000FF8001FE00001F8000FF0001FE00001F80007F000
0FC00001F80003F00003000001F80003F00000000001F80003F00000000001F80003F000
00000001F80003F00000000001F80003F00000000001F80003F00000000001F80003F000
00000001F80003F00000000001F80003F00000000001F80003F00007E000FFFFFFFFFFFF
FFE000FFFFFFFFFFFFFFE000FFFFFFFFFFFFFFE00001F80003F0001FE00001F80003F000
07E00001F80003F00007E00001F80003F00007E00001F80003F00007E00001F80003F000
07E00001F80003F00007E00001F80003F00007E00001F80003F00007E00001F80003F000
07E00001F80003F00007E00001F80003F00007E00001F80003F00007E00001F80003F000
07E00001F80003F00007E00001F80003F00007E00001F80003F00007E00001F80003F000
07E00001F80003F00007E00001F80003F00007E00001F80003F00007E00001F80003F000
07E00001F80003F00007E00001F80003F00007E00001F80003F00007E00001F80003F000
07E00001F80003F00007E00001F80003F00007E00001F80003F00007E00003FC0007F800
0FF0007FFFE0FFFFC1FFFF807FFFE0FFFFC1FFFF807FFFE0FFFFC1FFFF80413B7FBA45>
I<1C007F00FF80FF80FFC0FFC0FFC07FC01CC000C000C000C000C001C001800180038003
00070006000E001C003800700060000A1979B917>39 D<0000600000E00001C000038000
0700000E00001E00003C0000780000780000F00001E00001E00003C00003C00007C00007
80000F80000F00000F00001F00001E00001E00003E00003E00003E00007C00007C00007C
00007C00007C00007C0000F80000F80000F80000F80000F80000F80000F80000F80000F8
0000F80000F80000F80000F80000F80000F80000F80000F80000F800007C00007C00007C
00007C00007C00007C00003E00003E00003E00001E00001E00001F00000F00000F00000F
800007800007C00003C00003C00001E00001E00000F000007800007800003C00001E0000
0E000007000003800001C00000E0000060135278BD20>I<C00000E00000700000380000
1C00000E00000F000007800003C00003C00001E00000F00000F000007800007800007C00
003C00003E00001E00001E00001F00000F00000F00000F80000F80000F800007C00007C0
0007C00007C00007C00007C00003E00003E00003E00003E00003E00003E00003E00003E0
0003E00003E00003E00003E00003E00003E00003E00003E00003E00003E00007C00007C0
0007C00007C00007C00007C0000F80000F80000F80000F00000F00001F00001E00001E00
003E00003C00007C0000780000780000F00000F00001E00003C00003C0000780000F0000
0E00001C0000380000700000E00000C0000013527CBD20>I<0000003000000000000078
000000000000780000000000007800000000000078000000000000780000000000007800
000000000078000000000000780000000000007800000000000078000000000000780000
000000007800000000000078000000000000780000000000007800000000000078000000
000000780000000000007800000000000078000000000000780000000000007800000000
00007800000000000078000000000000780000007FFFFFFFFFFFF8FFFFFFFFFFFFFCFFFF
FFFFFFFFFC7FFFFFFFFFFFF8000000780000000000007800000000000078000000000000
780000000000007800000000000078000000000000780000000000007800000000000078
000000000000780000000000007800000000000078000000000000780000000000007800
000000000078000000000000780000000000007800000000000078000000000000780000
000000007800000000000078000000000000780000000000007800000000000078000000
0000003000000036367BAF41>43 D<1C007F00FF80FF80FFC0FFC0FFC07FC01CC000C000
C000C000C001C00180018003800300070006000E001C003800700060000A19798817>I<
FFFFFCFFFFFCFFFFFCFFFFFCFFFFFC16057F941C>I<1C007F00FF80FF80FF80FF80FF80
7F001C000909798817>I<0000000C0000001E0000003E0000003E0000003C0000007C00
00007C00000078000000F8000000F8000000F0000001F0000001F0000001E0000003E000
0003E0000003C0000007C0000007C00000078000000F8000000F8000000F0000001F0000
001F0000001E0000003E0000003E0000003C0000007C0000007C00000078000000F80000
00F8000000F0000001F0000001F0000001E0000003E0000003E0000007C0000007C00000
078000000F8000000F8000000F0000001F0000001F0000001E0000003E0000003E000000
3C0000007C0000007C00000078000000F8000000F8000000F0000001F0000001F0000001
E0000003E0000003E0000003C0000007C0000007C00000078000000F8000000F8000000F
0000001F0000001F0000001E0000003E0000003E0000003C0000007C0000007C00000078
000000F8000000F8000000F0000000600000001F537BBD2A>I<0003F80000001FFF0000
007E0FC00000F803E00001E000F00003C000780007C0007C000F80003E000F80003E001F
00001F001F00001F003F00001F803F00001F803F00001F807E00000FC07E00000FC07E00
000FC07E00000FC07E00000FC07E00000FC0FE00000FE0FE00000FE0FE00000FE0FE0000
0FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000F
E0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0
FE00000FE07E00000FC07E00000FC07E00000FC07E00000FC07F00001FC03F00001F803F
00001F803F00001F801F00001F001F80003F000F80003E000F80003E0007C0007C0003E0
00F80001F001F00000F803E000007E0FC000001FFF00000003F80000233A7DB72A>I<00
01C0000003C0000007C000001FC00000FFC000FFFFC000FFFFC000FF1FC000001FC00000
1FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC00000
1FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC00000
1FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC00000
1FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC00000
1FC000001FC000001FC000001FC000001FC000001FC000001FC000003FE0007FFFFFF07F
FFFFF07FFFFFF01C3879B72A>I<000FF00000007FFE000001FFFF800003E03FE0000F00
0FF0000E0007F8001C0003FC00380001FE00300001FE00700000FF00600000FF00FC0000
FF00FF00007F80FF80007F80FF80007F80FF80007F80FF80007F80FF80007F807F00007F
801C00007F800000007F80000000FF00000000FF00000000FF00000001FE00000001FC00
000003FC00000003F800000007F000000007E00000000FE00000001FC00000003F800000
003F000000007C00000000F800000001F000000003E000000007C00000000F800000000F
000000001E000180003C000180007800018000F000038001E000030003C0000300078000
03000E000007000FFFFFFF001FFFFFFF003FFFFFFF007FFFFFFE00FFFFFFFE00FFFFFFFE
00FFFFFFFE0021387CB72A>I<0007F80000003FFF0000007FFFC00001F80FF00003C007
F800078003FC000E0001FC000F0001FE001FE000FE001FF000FF001FF000FF001FF000FF
001FF000FF001FF000FF000FE000FF0007C000FF00000000FE00000001FE00000001FE00
000001FC00000003F800000003F800000007F000000007E00000000F800000007E000000
1FFC0000001FFF800000000FE000000007F000000001FC00000001FE00000000FF000000
007F800000007F800000007FC00000007FC00000003FC00000003FE00000003FE01E0000
3FE07F80003FE0FFC0003FE0FFC0003FE0FFC0003FE0FFC0003FE0FFC0003FC0FF80007F
C07F80007F807E00007F80700000FF00380001FE001E0001FE000F8003F80007F00FF000
01FFFFC000007FFF0000000FF80000233A7DB72A>I<0000003800000000380000000078
00000000F800000000F800000001F800000003F800000007F800000007F80000000FF800
00001FF80000001BF800000033F800000073F800000063F8000000C3F8000001C3F80000
0183F800000303F800000703F800000603F800000C03F800001C03F800001803F8000030
03F800007003F800006003F80000C003F80001C003F800038003F800030003F800070003
F8000E0003F8000C0003F800180003F800380003F800300003F800600003F800E00003F8
00FFFFFFFFF8FFFFFFFFF8FFFFFFFFF8000003F800000003F800000003F800000003F800
000003F800000003F800000003F800000003F800000003F800000003F800000003F80000
0007FC000003FFFFF80003FFFFF80003FFFFF825397EB82A>I<0600000C000780003C00
07F003F80007FFFFF80007FFFFF00007FFFFE00007FFFF800007FFFF000007FFFC000006
7FE000000600000000060000000006000000000600000000060000000006000000000600
00000006000000000600000000060000000006000000000607F80000063FFE000006780F
800007E007E000078003F000070001F800060001F800060000FC00000000FE00000000FE
00000000FF000000007F000000007F000000007F800000007F800000007F800000007F80
3E00007F807F00007F80FF80007F80FF80007F80FF80007F80FF80007F80FF00007F00FE
0000FF00E00000FF00600000FE00700000FE00300001FC00380001F8001C0003F8001E00
07F0000F800FE00007E03F800001FFFF0000007FFC0000001FE00000213A7CB72A>I<00
003FC0000001FFF0000007FFFC00000FE03E00003F800700007E001F0000FC003F8001F8
007F8003F0007F8003F0007F8007E0007F800FE0003F000FC0001E001FC00000001FC000
00003F800000003F800000003F800000007F800000007F000000007F01FC00007F07FF80
00FF1E07E000FF3801F000FF7000F800FF6000FC00FFE0007E00FFC0003F00FFC0003F00
FF80003F80FF80003FC0FF80001FC0FF80001FC0FF00001FE0FF00001FE0FF00001FE0FF
00001FE0FF00001FE07F00001FE07F00001FE07F00001FE07F00001FE07F00001FE03F80
001FE03F80001FC03F80001FC01F80001FC01F80003F801FC0003F800FC0003F0007E000
7F0007E000FE0003F000FC0001F801F80000FE07F000003FFFC000001FFF00000003FC00
00233A7DB72A>I<300000000038000000003E000000003FFFFFFFE03FFFFFFFE03FFFFF
FFE03FFFFFFFC07FFFFFFFC07FFFFFFF807FFFFFFF0070000006006000000E006000001C
006000001800E000003800C000007000C00000E000C00000C000000001C0000000038000
0000030000000007000000000E000000000C000000001C00000000380000000038000000
0070000000007000000000F000000001E000000001E000000003E000000003E000000003
C000000007C000000007C00000000FC00000000FC00000000FC00000001F800000001F80
0000001F800000003F800000003F800000003F800000003F800000003F800000007F8000
00007F800000007F800000007F800000007F800000007F800000007F800000007F800000
007F800000003F000000001E000000233B7BB82A>I<0003F80000001FFF0000007FFFC0
0000FC07F00001E001F80003C000FC000780007C000700003E000F00001E000E00001F00
1E00000F001E00000F001E00000F001F00000F001F00000F001F80000F001F80001F001F
E0001E000FF0003E000FFC003C000FFE00780007FF80F00007FFC1E00003FFF3C00001FF
FF000000FFFE0000003FFF0000001FFFC000001FFFE000007FFFF80000F0FFFC0003E07F
FE0007801FFF000F000FFF801F0003FF803E0001FFC03C00007FC07C00003FC07800000F
E0F8000007E0F0000007E0F0000003E0F0000003E0F0000001E0F0000001E0F0000001E0
F8000001C078000001C078000003C07C000003803E000007001F00000F000F80001E0007
E0007C0003F803F00000FFFFE000003FFF80000007FC0000233A7DB72A>I<0003F80000
001FFF0000007FFFC00000FC07E00003F803F00007F001F8000FE000FC000FC0007E001F
C0007E003F80003F003F80003F007F80003F807F00003F807F00003F80FF00001FC0FF00
001FC0FF00001FC0FF00001FC0FF00001FC0FF00001FC0FF00001FE0FF00001FE0FF0000
1FE0FF00001FE0FF00001FE07F00003FE07F00003FE07F80003FE03F80003FE01F80007F
E01F80007FE00FC000FFE007E000DFE003E001DFE001F0039FE000FC0F1FE0003FFC1FC0
0007F01FC00000001FC00000003FC00000003F800000003F800000003F800000003F0000
00007F000F00007E001F80007E003FC000FC003FC000FC003FC001F8003FC003F0003F80
07E0001F000FC0001C001F80000F807F000007FFFC000001FFF00000003FC00000233A7D
B72A>I<1C007F00FF80FF80FF80FF80FF807F001C000000000000000000000000000000
000000000000000000000000000000000000000000001C007F00FF80FF80FF80FF80FF80
7F001C00092479A317>I<1C007F00FF80FF80FF80FF80FF807F001C0000000000000000
00000000000000000000000000000000000000000000000000000000001C007F00FF00FF
80FF80FF80FF807F801D8001800180018001800380030003000700060006000E001C0018
00380070006000093479A317>I<7FFFFFFFFFFFF8FFFFFFFFFFFFFCFFFFFFFFFFFFFC7F
FFFFFFFFFFF8000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000007FFFFFFF
FFFFF8FFFFFFFFFFFFFCFFFFFFFFFFFFFC7FFFFFFFFFFFF836167B9F41>61
D<003FE00001FFFE0007C03F800E000FC03C0007F0300003F0700003F87C0001F8FE0001
FCFF0001FCFF0001FCFF0001FCFF0001FC7E0001FC3C0003F8000003F8000007F0000007
F000000FE000001F8000003F0000007E0000007C000000F8000001F0000001E0000003C0
000003800000038000000700000007000000070000000600000006000000060000000600
000006000000060000000600000006000000060000000600000000000000000000000000
000000000000000000000000000000000000000000000E0000003F8000007FC000007FC0
00007FC000007FC000007FC000003F8000000E00001E3B7CBA27>63
D<0000003800000000000038000000000000380000000000007C0000000000007C000000
0000007C000000000000FE000000000000FE000000000000FE000000000001FF00000000
0001FF000000000001FF0000000000037F8000000000037F8000000000077FC000000000
063FC000000000063FC0000000000E3FE0000000000C1FE0000000000C1FE0000000001C
1FF000000000180FF000000000180FF000000000380FF8000000003007F8000000003007
F8000000007007FC000000006003FC000000006003FC00000000C003FE00000000C001FE
00000000C001FE000000018001FF000000018000FF000000018000FF000000030000FF80
00000300007F8000000300007F8000000600007FC0000007FFFFFFC0000007FFFFFFC000
000FFFFFFFE000000C00001FE000000C00001FE000001800000FF000001800000FF00000
1800000FF0000030000007F8000030000007F8000030000007F8000060000003FC000060
000003FC0000E0000003FC0000E0000001FE0001E0000001FE0003F0000001FF000FFC00
0007FF80FFFF8000FFFFFEFFFF8000FFFFFEFFFF8000FFFFFE373C7DBB3E>65
D<FFFFFFFFE00000FFFFFFFFFC0000FFFFFFFFFF000001FF80007FC00000FF00001FE000
00FF00000FF00000FF000007F80000FF000003FC0000FF000003FC0000FF000001FE0000
FF000001FE0000FF000001FF0000FF000001FF0000FF000001FF0000FF000001FF0000FF
000001FF0000FF000001FF0000FF000001FF0000FF000001FE0000FF000003FE0000FF00
0003FC0000FF000007F80000FF00000FF00000FF00001FE00000FF00003FC00000FF0000
FF800000FFFFFFFC000000FFFFFFFC000000FF00007F800000FF00001FE00000FF000007
F00000FF000003F80000FF000001FC0000FF000001FE0000FF000000FF0000FF000000FF
0000FF000000FF8000FF0000007F8000FF0000007FC000FF0000007FC000FF0000007FC0
00FF0000007FC000FF0000007FC000FF0000007FC000FF0000007FC000FF0000007F8000
FF000000FF8000FF000000FF8000FF000001FF0000FF000001FE0000FF000003FE0000FF
000007FC0000FF00001FF80001FF80007FF000FFFFFFFFFFC000FFFFFFFFFF0000FFFFFF
FFF8000032397DB83B>I<000001FF80018000000FFFE0038000007FFFF803800001FF80
7E07800003FC000F0F80000FF000039F80001FE00001DF80003F800000FF80007F000000
7F8000FE0000003F8001FE0000003F8003FC0000001F8007F80000000F8007F80000000F
800FF000000007800FF000000007801FE000000007801FE000000003803FE00000000380
3FC000000003807FC000000001807FC000000001807FC000000001807F800000000180FF
800000000000FF800000000000FF800000000000FF800000000000FF800000000000FF80
0000000000FF800000000000FF800000000000FF800000000000FF800000000000FF8000
00000000FF800000000000FF8000000000007F8000000000007FC000000001807FC00000
0001807FC000000001803FC000000001803FE000000001801FE000000003801FE0000000
03000FF000000003000FF0000000070007F8000000070007F8000000060003FC0000000E
0001FE0000001C0000FE0000001800007F0000003800003F8000007000001FE00000E000
000FF00003C0000003FC000F80000001FF803F000000007FFFFC000000000FFFF0000000
0001FF800000313D7BBA3C>I<FFFFFFFFC00000FFFFFFFFF80000FFFFFFFFFE000001FF
8001FF800000FF00003FE00000FF00000FF00000FF000003F80000FF000001FC0000FF00
0000FE0000FF0000007F0000FF0000007F0000FF0000003F8000FF0000003FC000FF0000
001FC000FF0000001FE000FF0000000FE000FF0000000FF000FF0000000FF000FF000000
0FF000FF00000007F800FF00000007F800FF00000007F800FF00000007F800FF00000007
FC00FF00000007FC00FF00000007FC00FF00000007FC00FF00000007FC00FF00000007FC
00FF00000007FC00FF00000007FC00FF00000007FC00FF00000007FC00FF00000007FC00
FF00000007FC00FF00000007F800FF00000007F800FF00000007F800FF00000007F800FF
0000000FF000FF0000000FF000FF0000000FE000FF0000000FE000FF0000001FE000FF00
00001FC000FF0000003F8000FF0000003F8000FF0000007F0000FF000000FE0000FF0000
01FC0000FF000003F80000FF00000FF00000FF00003FE00001FF8000FF8000FFFFFFFFFF
0000FFFFFFFFF80000FFFFFFFFC0000036397DB83F>I<FFFFFFFFFFFC00FFFFFFFFFFFC
00FFFFFFFFFFFC0001FF80000FFC0000FF000001FC0000FF0000007E0000FF0000003E00
00FF0000001E0000FF0000000E0000FF0000000E0000FF0000000E0000FF000000060000
FF000000060000FF000000060000FF000000070000FF000000030000FF0000C0030000FF
0000C0030000FF0000C0030000FF0000C0000000FF0000C0000000FF0000C0000000FF00
01C0000000FF0001C0000000FF0003C0000000FF000FC0000000FFFFFFC0000000FFFFFF
C0000000FFFFFFC0000000FF000FC0000000FF0003C0000000FF0001C0000000FF0001C0
000000FF0000C0000000FF0000C0000000FF0000C0006000FF0000C0006000FF0000C000
6000FF0000C000E000FF00000000C000FF00000000C000FF00000000C000FF00000000C0
00FF00000001C000FF00000001C000FF00000001C000FF000000038000FF000000038000
FF000000078000FF000000078000FF0000000F8000FF0000003F8000FF0000007F8001FF
800007FF00FFFFFFFFFFFF00FFFFFFFFFFFF00FFFFFFFFFFFF0033397DB839>I<FFFFFF
FFFFF8FFFFFFFFFFF8FFFFFFFFFFF801FF80001FF800FF000001F800FF000000FC00FF00
00007C00FF0000003C00FF0000001C00FF0000001C00FF0000000C00FF0000000C00FF00
00000C00FF0000000C00FF0000000E00FF0000000600FF0000000600FF0001800600FF00
01800600FF0001800000FF0001800000FF0001800000FF0001800000FF0003800000FF00
03800000FF0007800000FF001F800000FFFFFF800000FFFFFF800000FFFFFF800000FF00
1F800000FF0007800000FF0003800000FF0003800000FF0001800000FF0001800000FF00
01800000FF0001800000FF0001800000FF0001800000FF0000000000FF0000000000FF00
00000000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF00
00000000FF0000000000FF0000000000FF0000000000FF0000000001FFC0000000FFFFFF
C00000FFFFFFC00000FFFFFFC000002F397DB836>I<000000FF8000C000000FFFF001C0
00003FFFFC01C00000FF803F03C00003FC000787C0000FF00003CFC0001FE00000EFC000
3FC000007FC0007F8000003FC000FF0000001FC001FE0000001FC003FC0000000FC007F8
00000007C007F800000007C00FF000000003C00FF000000003C01FE000000003C01FE000
000001C03FE000000001C03FC000000001C07FC000000000C07FC000000000C07FC00000
0000C07FC000000000C0FF800000000000FF800000000000FF800000000000FF80000000
0000FF800000000000FF800000000000FF800000000000FF800000000000FF8000000000
00FF800000000000FF800000000000FF800000FFFFFFFF800000FFFFFF7FC00000FFFFFF
7FC00000007FE07FC00000003FC07FC00000003FC03FC00000003FC03FE00000003FC01F
E00000003FC01FE00000003FC00FF00000003FC00FF00000003FC007F80000003FC007F8
0000003FC003FC0000003FC001FE0000003FC000FF0000007FC0007F8000007FC0003FC0
0000FFC0001FE00000EFC0000FF80003C7C00003FE000783C00000FFC03F01C000003FFF
FC00C000000FFFF00000000000FF800000383D7CBA41>I<FFFFFF01FFFFFEFFFFFF01FF
FFFEFFFFFF01FFFFFE01FF800003FF0000FF000001FE0000FF000001FE0000FF000001FE
0000FF000001FE0000FF000001FE0000FF000001FE0000FF000001FE0000FF000001FE00
00FF000001FE0000FF000001FE0000FF000001FE0000FF000001FE0000FF000001FE0000
FF000001FE0000FF000001FE0000FF000001FE0000FF000001FE0000FF000001FE0000FF
000001FE0000FF000001FE0000FF000001FE0000FF000001FE0000FFFFFFFFFE0000FFFF
FFFFFE0000FFFFFFFFFE0000FF000001FE0000FF000001FE0000FF000001FE0000FF0000
01FE0000FF000001FE0000FF000001FE0000FF000001FE0000FF000001FE0000FF000001
FE0000FF000001FE0000FF000001FE0000FF000001FE0000FF000001FE0000FF000001FE
0000FF000001FE0000FF000001FE0000FF000001FE0000FF000001FE0000FF000001FE00
00FF000001FE0000FF000001FE0000FF000001FE0000FF000001FE0000FF000001FE0001
FF800003FF00FFFFFF01FFFFFEFFFFFF01FFFFFEFFFFFF01FFFFFE37397DB83E>I<FFFF
FFC0FFFFFFC0FFFFFFC000FFC000007F8000007F8000007F8000007F8000007F8000007F
8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F
8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F
8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F
8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F
8000007F8000007F8000007F8000007F8000007F8000007F8000007F800000FFC000FFFF
FFC0FFFFFFC0FFFFFFC01A397EB81E>I<003FFFFFE0003FFFFFE0003FFFFFE000001FFC
00000007F800000007F800000007F800000007F800000007F800000007F800000007F800
000007F800000007F800000007F800000007F800000007F800000007F800000007F80000
0007F800000007F800000007F800000007F800000007F800000007F800000007F8000000
07F800000007F800000007F800000007F800000007F800000007F800000007F800000007
F800000007F800000007F800000007F800000007F800000007F800000007F800000007F8
00000007F800000007F800000007F8003F0007F8007F8007F800FFC007F800FFC007F800
FFC007F800FFC007F800FFC00FF000FF800FF0007F000FE00070001FE00038001FC0001C
003F80000E007F00000781FC000001FFF00000007F800000233B7DB82B>I<FFFFFFE000
00FFFFFFE00000FFFFFFE0000001FFC000000000FF0000000000FF0000000000FF000000
0000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF000000
0000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF000000
0000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF000000
0000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF000000
0000FF0000000000FF0000000000FF0000000000FF0000000000FF0000001800FF000000
1800FF0000001800FF0000001800FF0000001800FF0000003800FF0000003000FF000000
3000FF0000003000FF0000007000FF0000007000FF0000007000FF000000F000FF000000
F000FF000001F000FF000003F000FF00000FF000FF00001FE001FF8000FFE0FFFFFFFFFF
E0FFFFFFFFFFE0FFFFFFFFFFE02D397DB834>76 D<FFFF0000000007FFF8FFFF80000000
0FFFF8FFFF800000000FFFF801FF800000000FFC0000DFC00000001BF80000DFC0000000
1BF80000CFE000000033F80000CFE000000033F80000CFE000000033F80000C7F0000000
63F80000C7F000000063F80000C7F000000063F80000C3F8000000C3F80000C3F8000000
C3F80000C1FC00000183F80000C1FC00000183F80000C1FC00000183F80000C0FE000003
03F80000C0FE00000303F80000C07F00000603F80000C07F00000603F80000C07F000006
03F80000C03F80000C03F80000C03F80000C03F80000C03F80000C03F80000C01FC00018
03F80000C01FC0001803F80000C00FE0003003F80000C00FE0003003F80000C00FE00030
03F80000C007F0006003F80000C007F0006003F80000C003F800C003F80000C003F800C0
03F80000C003F800C003F80000C001FC018003F80000C001FC018003F80000C001FC0180
03F80000C000FE030003F80000C000FE030003F80000C0007F060003F80000C0007F0600
03F80000C0007F060003F80000C0003F8C0003F80000C0003F8C0003F80000C0001FD800
03F80000C0001FD80003F80000C0001FD80003F80000C0000FF00003F80000C0000FF000
03F80000C0000FF00003F80001E00007E00003F80003F00007E00003F8000FFC0003C000
07FC00FFFFC003C003FFFFF8FFFFC003C003FFFFF8FFFFC0018003FFFFF845397DB84C>
I<FFFF000007FFFEFFFF800007FFFEFFFFC00007FFFE00FFC000007FE000FFE000001F80
00DFF000000F0000DFF00000060000CFF80000060000C7FC0000060000C7FC0000060000
C3FE0000060000C1FF0000060000C1FF0000060000C0FF8000060000C07FC000060000C0
7FC000060000C03FE000060000C01FF000060000C01FF800060000C00FF800060000C007
FC00060000C007FE00060000C003FE00060000C001FF00060000C001FF80060000C000FF
80060000C0007FC0060000C0007FE0060000C0003FE0060000C0001FF0060000C0000FF8
060000C0000FF8060000C00007FC060000C00003FE060000C00003FE060000C00001FF06
0000C00000FF860000C00000FF860000C000007FC60000C000003FE60000C000003FE600
00C000001FF60000C000000FFE0000C000000FFE0000C0000007FE0000C0000003FE0000
C0000003FE0000C0000001FE0000C0000000FE0000C0000000FE0000C00000007E0001E0
0000003E0003F00000003E000FFC0000001E00FFFFC000000E00FFFFC000000E00FFFFC0
0000060037397DB83E>I<000003FF00000000001FFFE000000000FE01FC00000001F800
7E00000007E0001F8000000FC0000FC000003F800007F000007F000003F80000FE000001
FC0001FC000000FE0001F80000007E0003F80000007F0007F00000003F8007F00000003F
800FE00000001FC00FE00000001FC01FE00000001FE01FC00000000FE03FC00000000FF0
3FC00000000FF03FC00000000FF07FC00000000FF87F8000000007F87F8000000007F87F
8000000007F8FF8000000007FCFF8000000007FCFF8000000007FCFF8000000007FCFF80
00000007FCFF8000000007FCFF8000000007FCFF8000000007FCFF8000000007FCFF8000
000007FCFF8000000007FCFF8000000007FC7F8000000007F87FC00000000FF87FC00000
000FF87FC00000000FF83FC00000000FF03FC00000000FF01FE00000001FE01FE0000000
1FE01FE00000001FE00FF00000003FC007F00000003F8007F80000007F8003F80000007F
0001FC000000FE0001FC000000FE0000FE000001FC00007F000003F800003F800007F000
001FC0000FE0000007E0001F80000003F8007F00000000FE01FC000000001FFFE0000000
0003FF000000363D7BBA41>I<FFFFFFFFC000FFFFFFFFF800FFFFFFFFFE0001FF8001FF
8000FF00003FC000FF00000FE000FF000007F000FF000003F800FF000003FC00FF000003
FE00FF000001FE00FF000001FE00FF000001FF00FF000001FF00FF000001FF00FF000001
FF00FF000001FF00FF000001FF00FF000001FF00FF000001FE00FF000001FE00FF000003
FC00FF000003FC00FF000007F800FF000007F000FF00000FE000FF00003FC000FF0001FF
0000FFFFFFFC0000FFFFFFF00000FF0000000000FF0000000000FF0000000000FF000000
0000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF000000
0000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF000000
0000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF000000
0000FF0000000001FF80000000FFFFFF000000FFFFFF000000FFFFFF00000030397DB839
>I<FFFFFFFE00000000FFFFFFFFE0000000FFFFFFFFF800000001FF8007FE00000000FF
0000FF80000000FF00003FC0000000FF00001FE0000000FF00000FF0000000FF000007F8
000000FF000007F8000000FF000003FC000000FF000003FC000000FF000003FE000000FF
000003FE000000FF000003FE000000FF000003FE000000FF000003FE000000FF000003FE
000000FF000003FC000000FF000003FC000000FF000007F8000000FF000007F8000000FF
00000FF0000000FF00001FE0000000FF00003F80000000FF0000FF00000000FF0007FC00
000000FFFFFFE000000000FFFFFFC000000000FF000FF000000000FF0003F800000000FF
0000FE00000000FF0000FF00000000FF00007F80000000FF00003FC0000000FF00003FC0
000000FF00001FC0000000FF00001FE0000000FF00001FE0000000FF00001FE0000000FF
00001FE0000000FF00001FE0000000FF00001FF0000000FF00001FF0000000FF00001FF0
000000FF00001FF0000000FF00001FF0000000FF00001FF0000000FF00001FF0018000FF
00001FF0018000FF00001FF8018000FF00000FF8018000FF00000FF8038001FF800007F8
0300FFFFFF0003FC0700FFFFFF0001FC0600FFFFFF0000FE0E0000000000003FFC000000
00000007F000393B7DB83D>82 D<000FF800C0003FFE01C000FFFF81C003F807E3C007E0
00F7C00FC0007FC01F80003FC03F00001FC03E00000FC07E000007C07E000007C07C0000
03C0FC000003C0FC000001C0FC000001C0FC000001C0FE000000C0FE000000C0FE000000
C0FF000000C0FF800000007FC00000007FE00000007FF80000003FFF8000001FFFF80000
1FFFFF80000FFFFFE00007FFFFF80003FFFFFE0000FFFFFF00003FFFFF800007FFFFC000
007FFFC0000007FFE00000007FE00000003FF00000001FF00000000FF000000007F80000
0007F8C0000003F8C0000003F8C0000001F8C0000001F8C0000001F8E0000001F8E00000
01F8E0000001F0F0000001F0F0000003F0F8000003E0FC000007E0FE000007C0FF00000F
C0FF80001F80FBF0003F00F0FE00FE00E03FFFF800E00FFFE000C001FF0000253D7CBA2E
>I<3FFFFFFFFFFFE03FFFFFFFFFFFE03FFFFFFFFFFFE03FC003FF001FE03E0001FE0003
E07C0001FE0001F0780001FE0000F0700001FE000070700001FE000070700001FE000070
600001FE000030600001FE000030600001FE000030600001FE000030E00001FE000038C0
0001FE000018C00001FE000018C00001FE000018C00001FE000018000001FE0000000000
01FE000000000001FE000000000001FE000000000001FE000000000001FE000000000001
FE000000000001FE000000000001FE000000000001FE000000000001FE000000000001FE
000000000001FE000000000001FE000000000001FE000000000001FE000000000001FE00
0000000001FE000000000001FE000000000001FE000000000001FE000000000001FE0000
00000001FE000000000001FE000000000001FE000000000001FE000000000001FE000000
000001FE000000000001FE000000000001FE000000000001FE000000000001FE00000000
0001FE000000000001FE000000000007FF800000001FFFFFFFE000001FFFFFFFE000001F
FFFFFFE00035397DB83C>I<FFFFFF0007FFFEFFFFFF0007FFFEFFFFFF0007FFFE01FF80
00007FE000FF0000001F8000FF0000000F0000FF000000060000FF000000060000FF0000
00060000FF000000060000FF000000060000FF000000060000FF000000060000FF000000
060000FF000000060000FF000000060000FF000000060000FF000000060000FF00000006
0000FF000000060000FF000000060000FF000000060000FF000000060000FF0000000600
00FF000000060000FF000000060000FF000000060000FF000000060000FF000000060000
FF000000060000FF000000060000FF000000060000FF000000060000FF000000060000FF
000000060000FF000000060000FF000000060000FF000000060000FF000000060000FF00
0000060000FF000000060000FF000000060000FF0000000E00007F0000000C00007F8000
000C00007F8000001C00003F8000001C00003F8000001800001FC000003800001FC00000
7000000FE00000F0000007F00000E0000003F80001C0000001FC000780000000FE000F00
0000007F807E000000001FFFF80000000007FFE000000000007F800000373B7DB83E>I<
FFFFFC00007FFF80FFFFFC00007FFF80FFFFFC00007FFF8003FF8000000FFC0001FF0000
0007E00001FF00000003C00000FF00000001800000FF800000038000007F800000030000
007F800000030000007FC00000030000003FC00000060000003FC00000060000003FE000
000E0000001FE000000C0000001FF000000C0000000FF00000180000000FF00000180000
000FF800001800000007F800003000000007F800003000000007FC00007000000003FC00
006000000003FC00006000000001FE0000C000000001FE0000C000000001FF0000C00000
0000FF00018000000000FF00018000000000FF800380000000007F800300000000007F80
0300000000003FC00600000000003FC00600000000003FE00600000000001FE00C000000
00001FE00C00000000001FF01C00000000000FF01800000000000FF018000000000007F8
30000000000007F830000000000007FC30000000000003FC60000000000003FC60000000
000003FEE0000000000001FEC0000000000001FEC0000000000000FF80000000000000FF
80000000000000FF800000000000007F000000000000007F000000000000007F00000000
0000003E000000000000003E000000000000001C000000000000001C000000000000001C
00000000393B7EB83E>I<FFFFFC07FFFFF001FFFFFFFFFC07FFFFF001FFFFFFFFFC07FF
FFF001FFFF07FF80001FFE00001FF803FE00000FF8000007E001FE000007F8000003C001
FE000007F80000038001FF000007F80000038000FF000003FC0000030000FF000003FC00
00030000FF800003FC00000700007F800001FE00000600007F800001FE00000600007FC0
0001FE00000600003FC00003FF00000C00003FC00003FF00000C00003FE00003FF00000C
00001FE00007FF80001800001FE000067F80001800001FE000067F80001800000FF0000E
7FC0003000000FF0000C3FC0003000000FF0000C3FC00030000007F8001C3FE000600000
07F800181FE00060000007F800181FE00060000003FC00181FF000C0000003FC00300FF0
00C0000003FC00300FF000C0000001FE00300FF80180000001FE006007F80180000001FE
006007F80180000000FF006007F80300000000FF00C003FC0300000000FF00C003FC0300
000000FF80C003FC07000000007F818001FE06000000007F818001FE06000000007FC180
01FE0E000000003FC30000FF0C000000003FC30000FF0C000000003FE30000FF1C000000
001FE600007F98000000001FE600007F98000000001FF600007F98000000000FFC00003F
F0000000000FFC00003FF0000000000FFC00003FF00000000007FC00003FE00000000007
F800001FE00000000007F800001FE00000000003F800001FC00000000003F000000FC000
00000003F000000FC00000000001F000000F800000000001E0000007800000000001E000
0007800000000000E0000007000000000000C0000003000000503B7EB855>I<FFF8FFF8
FFF8FFF8F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000
F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000
F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000
F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000
F000F000F000F000F000FFF8FFF8FFF8FFF80D5378BD17>91 D<FFF8FFF8FFF8FFF80078
007800780078007800780078007800780078007800780078007800780078007800780078
007800780078007800780078007800780078007800780078007800780078007800780078
007800780078007800780078007800780078007800780078007800780078007800780078
007800780078007800780078007800780078007800780078007800780078007800780078
00780078FFF8FFF8FFF8FFF80D537FBD17>93 D<001000003800007C0000FE0001FF0003
C7800783C00F01E01E00F03C007870001CE0000E400004170D77B92A>I<001FE0000000
FFFC000003E03F000007000F80000F8007E0001FC003F0001FE003F0001FE001F8001FE0
01F8001FE000FC000FC000FC00078000FC00000000FC00000000FC00000000FC00000000
FC0000007FFC000007FFFC00003FE0FC0000FE00FC0003F800FC000FF000FC001FC000FC
003FC000FC007F8000FC007F0000FC007F0000FC0CFE0000FC0CFE0000FC0CFE0000FC0C
FE0001FC0CFE0001FC0CFF0003FC0C7F00077C0C7F80063E183FC01E3E180FE0781FF003
FFF00FE0007F8007C026277DA52A>97 D<03F0000000FFF0000000FFF0000000FFF00000
000FF000000003F000000003F000000003F000000003F000000003F000000003F0000000
03F000000003F000000003F000000003F000000003F000000003F000000003F000000003
F000000003F000000003F000000003F01FE00003F07FF80003F1E03E0003F3801F8003F7
000FC003FE0007E003FC0003F003F80001F803F00001F803F00000FC03F00000FC03F000
00FE03F00000FE03F000007E03F000007F03F000007F03F000007F03F000007F03F00000
7F03F000007F03F000007F03F000007F03F000007F03F000007F03F000007E03F00000FE
03F00000FE03F00000FC03F00001FC03F80001F803F80003F003FC0003F003EE0007E003
C6000FC003C7801F000381E07E000300FFF80000001FC000283B7EB92E>I<0003FC0000
1FFF80007E03E001F8007003F000F807E001FC0FC003FC0FC003FC1F8003FC3F8003FC3F
0001F87F0000F07F0000007F0000007E000000FE000000FE000000FE000000FE000000FE
000000FE000000FE000000FE000000FE000000FE0000007E0000007F0000007F0000003F
0000063F8000061F80000E1FC0000C0FC0001C07E0003803F0007001F800E0007C07C000
1FFF000007F8001F277DA525>I<0000000FC0000003FFC0000003FFC0000003FFC00000
003FC00000000FC00000000FC00000000FC00000000FC00000000FC00000000FC0000000
0FC00000000FC00000000FC00000000FC00000000FC00000000FC00000000FC00000000F
C00000000FC00000000FC00003F80FC0001FFF0FC0007E078FC000F801EFC003F0007FC0
07E0003FC00FC0001FC00FC0001FC01F80000FC03F80000FC03F00000FC07F00000FC07F
00000FC07E00000FC0FE00000FC0FE00000FC0FE00000FC0FE00000FC0FE00000FC0FE00
000FC0FE00000FC0FE00000FC0FE00000FC0FE00000FC07E00000FC07F00000FC07F0000
0FC03F00000FC03F00000FC01F80001FC01F80001FC00FC0003FC007E0007FC003F000EF
F001F801CFFF007C078FFF001FFE0FFF0007F80FC0283B7DB92E>I<0007F800001FFF00
007C0FC001F803E003F001F007E001F80FC000F81F80007C1F80007C3F00007E3F00003E
7F00003E7F00003F7E00003FFE00003FFE00003FFE00003FFFFFFFFFFFFFFFFFFE000000
FE000000FE000000FE000000FE0000007E0000007E0000007F0000007F0000003F000003
3F8000031F8000070FC0000607C0000E07E0001C01F0003800F80070007E03E0001FFF80
0003FC0020277EA525>I<00007E000003FF80000FC1E0001F87E0003F0FF0007E0FF000
7E0FF000FC0FF000FC0FF001F803C001F8000001F8000001F8000001F8000001F8000001
F8000001F8000001F8000001F8000001F8000001F8000001F8000001F80000FFFFFC00FF
FFFC00FFFFFC0001F8000001F8000001F8000001F8000001F8000001F8000001F8000001
F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001
F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001
F8000001F8000001F8000001F8000003FC00007FFFF8007FFFF8007FFFF8001C3B7FBA19
>I<00000003F0000FF00FF8003FFC3C3C00F81F707C01F00FE07C03E007C07C07C003E0
100FC003F0000FC003F0001F8001F8001F8001F8001F8001F8001F8001F8001F8001F800
1F8001F8001F8001F8001F8001F8000FC003F0000FC003F00007C003E00003E007C00003
F00F800003F81F0000073FFC0000060FF000000E000000000E000000000E000000000E00
0000000F000000000F000000000FC000000007FFFFC00007FFFFF80003FFFFFE0001FFFF
FF8003FFFFFFC00F80007FE01F00000FF03E000003F07C000001F07C000001F8F8000000
F8F8000000F8F8000000F8F8000000F8F8000000F8FC000001F87C000001F03E000003E0
3F000007E00F80000F8007E0003F0001FC01FC00007FFFF0000007FF000026387EA52A>
I<03F000000000FFF000000000FFF000000000FFF0000000000FF00000000003F0000000
0003F00000000003F00000000003F00000000003F00000000003F00000000003F0000000
0003F00000000003F00000000003F00000000003F00000000003F00000000003F0000000
0003F00000000003F00000000003F00000000003F00FF0000003F03FFC000003F0F03F00
0003F1C01F800003F3800FC00003F7000FC00003FE000FC00003FC0007E00003FC0007E0
0003F80007E00003F80007E00003F80007E00003F00007E00003F00007E00003F00007E0
0003F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E0
0003F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E0
0003F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E0
0007F8000FF000FFFFC1FFFF80FFFFC1FFFF80FFFFC1FFFF80293A7EB92E>I<0380000F
E0001FF0001FF0001FF0001FF0001FF0000FE00003800000000000000000000000000000
000000000000000000000000000000000003F000FFF000FFF000FFF00007F00003F00003
F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003
F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003
F00003F00003F00007F800FFFFC0FFFFC0FFFFC012387EB717>I<0001C00007F0000FF8
000FF8000FF8000FF8000FF80007F00001C0000000000000000000000000000000000000
0000000000000000000000000001F800FFF800FFF800FFF80007F80001F80001F80001F8
0001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F8
0001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F8
0001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F83C01F8
7E01F8FF01F0FF03F0FF03F0FF03E0FE07C07C07C03C0F000FFE0003F800154984B719>
I<03F0000000FFF0000000FFF0000000FFF00000000FF000000003F000000003F0000000
03F000000003F000000003F000000003F000000003F000000003F000000003F000000003
F000000003F000000003F000000003F000000003F000000003F000000003F000000003F0
00000003F001FFFC03F001FFFC03F001FFFC03F0007FC003F0007F0003F0007C0003F000
700003F000E00003F001C00003F003800003F007000003F01E000003F038000003F07800
0003F0FC000003F1FC000003F3FE000003F73F000003FE3F800003F81F800003F00FC000
03F00FE00003F007E00003F003F00003F001F80003F001FC0003F000FC0003F0007E0003
F0007F0003F0003F0003F0003F8003F0001FC007F8003FF0FFFFC0FFFFFFFFC0FFFFFFFF
C0FFFF283A7EB92C>I<03F000FFF000FFF000FFF0000FF00003F00003F00003F00003F0
0003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F0
0003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F0
0003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F0
0003F00003F00003F00003F00003F00003F00003F00003F00003F00007F800FFFFC0FFFF
C0FFFFC0123A7EB917>I<03F00FF0001FE000FFF03FFC007FF800FFF0F03F01E07E00FF
F1C01F83803F000FF3800FC7001F8003F7000FCE001F8003FE000FDC001F8003FC0007F8
000FC003FC0007F8000FC003F80007F0000FC003F80007F0000FC003F80007F0000FC003
F00007E0000FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F00007E0
000FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003
F00007E0000FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F00007E0
000FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003
F00007E0000FC003F00007E0000FC003F00007E0000FC007F8000FF0001FE0FFFFC1FFFF
83FFFFFFFFC1FFFF83FFFFFFFFC1FFFF83FFFF40257EA445>I<03F00FF00000FFF03FFC
0000FFF0F03F0000FFF1C01F80000FF3800FC00003F7000FC00003FE000FC00003FC0007
E00003FC0007E00003F80007E00003F80007E00003F80007E00003F00007E00003F00007
E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007
E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007
E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007
E00003F00007E00007F8000FF000FFFFC1FFFF80FFFFC1FFFF80FFFFC1FFFF8029257EA4
2E>I<0003FE0000000FFF8000003E03E00000F800F80001F0007C0003E0003E0007C000
1F000F80000F801F80000FC01F000007C03F000007E03F000007E07E000003F07E000003
F07E000003F07E000003F0FE000003F8FE000003F8FE000003F8FE000003F8FE000003F8
FE000003F8FE000003F8FE000003F8FE000003F87E000003F07E000003F07F000007F03F
000007E03F000007E01F80000FC00F80000F800FC0001F8007E0003F0003F0007E0000F8
00F800007E03F000001FFFC0000003FE000025277EA52A>I<03F01FE000FFF07FF800FF
F1E07E00FFF3801F8007F7000FC003FE0007E003FC0003F003F80003F803F00001F803F0
0001FC03F00000FC03F00000FE03F00000FE03F00000FE03F000007F03F000007F03F000
007F03F000007F03F000007F03F000007F03F000007F03F000007F03F000007F03F00000
7F03F00000FE03F00000FE03F00000FE03F00001FC03F00001FC03F80003F803F80003F0
03FC0007F003FE000FE003F6000FC003F7803F0003F1E07E0003F0FFF80003F01FC00003
F000000003F000000003F000000003F000000003F000000003F000000003F000000003F0
00000003F000000003F000000003F000000007F8000000FFFFC00000FFFFC00000FFFFC0
000028357EA42E>I<0003F800C0001FFE01C0007E0781C000FC01C3C003F000E3C007F0
0077C00FE00037C00FC0003FC01FC0001FC03F80001FC03F80000FC07F00000FC07F0000
0FC07F00000FC0FE00000FC0FE00000FC0FE00000FC0FE00000FC0FE00000FC0FE00000F
C0FE00000FC0FE00000FC0FE00000FC0FE00000FC07F00000FC07F00000FC07F00000FC0
3F00000FC03F80001FC01F80001FC01FC0003FC00FC0003FC007E0007FC003F000EFC001
F801CFC0007E078FC0001FFE0FC00007F80FC00000000FC00000000FC00000000FC00000
000FC00000000FC00000000FC00000000FC00000000FC00000000FC00000000FC0000000
0FC00000001FE0000003FFFF000003FFFF000003FFFF28357DA42C>I<07E01F00FFE07F
C0FFE1E3E0FFE387F00FE707F003E607F003EE07F003EC03E003FC008003F8000003F800
0003F8000003F8000003F0000003F0000003F0000003F0000003F0000003F0000003F000
0003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F000
0003F0000003F0000003F0000003F0000007F80000FFFFF000FFFFF000FFFFF0001C257E
A421>I<00FF030003FFE7000F80FF001E003F003C001F0078000F0070000700F0000700
F0000700F0000300F8000300F8000300FC000300FF0000007FE000007FFF00003FFFE000
1FFFF8000FFFFC0003FFFE0000FFFF000007FF8000007F8000001F80C0000FC0C00007C0
C00007C0E00003C0E00003C0E00003C0F00003C0F0000380F8000780FC000780FC000F00
FF001E00F3C07C00E1FFF000C03F80001A277DA521>I<00180000001800000018000000
1800000018000000380000003800000038000000780000007800000078000000F8000001
F8000003F8000007F800001FFFFF00FFFFFF00FFFFFF0001F8000001F8000001F8000001
F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001
F8000001F8000001F8000001F8000001F8000001F8000001F800C001F800C001F800C001
F800C001F800C001F800C001F800C001F800C001F800C000FC01C000FC0180007C038000
7E0300003F0700000FFE000001F8001A347FB220>I<03F00007E000FFF001FFE000FFF0
01FFE000FFF001FFE0000FF0001FE00003F00007E00003F00007E00003F00007E00003F0
0007E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F0
0007E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F0
0007E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F0
0007E00003F0000FE00003F0000FE00003F0000FE00003F0001FE00001F0001FE00001F8
003FE00000F80077F80000FC00E7FF80003F03C7FF80001FFF87FF800003FC07E0002926
7EA42E>I<FFFF803FFEFFFF803FFEFFFF803FFE0FF8000FF007F00007E003F00003C003
F800038001F800030001F800030000FC00060000FC00060000FE000E00007E000C00007E
000C00003F001800003F001800003F803800001F803000001F803000000FC06000000FC0
6000000FE060000007E0C0000007E0C0000003F180000003F180000003F180000001FB00
000001FB00000001FF00000000FE00000000FE000000007C000000007C000000007C0000
0000380000000038000027257EA32C>I<FFFF1FFFE03FFEFFFF1FFFE03FFEFFFF1FFFE0
3FFE0FF800FF000FF807F0007E0003E007F0007E0003C003F0003E00018003F0003E0001
8001F8003F00030001F8003F00030001F8003F00030000FC003F80060000FC006F800600
00FC006F800600007E00EFC00C00007E00C7C00C00007E00C7C00C00003F01C7E0180000
3F0183E01800003F8183F03800001F8383F03000001F8301F03000001FC301F87000000F
C600F86000000FC600F860000007E600FCC0000007EC007CC0000007EC007CC0000003FC
007F80000003F8003F80000003F8003F80000001F8003F00000001F0001F00000001F000
1F00000000F0001E00000000E0000E0000000060000C000037257EA33C>I<FFFF807FFF
00FFFF807FFF00FFFF807FFF0003FE003FF00001FE001F800000FE001F0000007E001C00
00003F00180000001F80300000001FC0700000000FC0E000000007E0C000000007F18000
000003FB8000000001FF0000000000FE0000000000FE00000000007F00000000003F0000
0000007F80000000007FC000000000CFC000000001C7E00000000383F00000000703F800
00000601F80000000C00FC0000001C007E00000038007F00000078003F000000F0001F80
0001F8001FC0000FF8003FF000FFFE00FFFF80FFFE00FFFF80FFFE00FFFF8029247FA32C
>I<FFFF803FFEFFFF803FFEFFFF803FFE0FF8000FF007F00007C003F000038001F80003
8001F800030001FC00030000FC00060000FC000600007E000C00007E000C00007F000C00
003F001800003F001800001F803000001F803000001FC07000000FC06000000FC0600000
07E0C0000007E0C0000007F1C0000003F180000003F180000001FB00000001FB00000001
FF00000000FE00000000FE000000007C000000007C000000007C00000000380000000038
0000000030000000003000000000700000000060000000006000000000C000000000C000
007C01C00000FE01800000FE03800000FE03000000FE06000000FC0E000000701C000000
38380000001FF00000000FC000000027357EA32C>I<3FFFFFFC3FFFFFFC3F8003FC3E00
03F83C0007F038000FE030000FE070001FC070003F8060007F8060007F006000FE006001
FC006001FC000003F8000007F0000007F000000FE000001FC000003F8000003F8000007F
000600FE000600FE000601FC000603F8000607F8000E07F0000E0FE0000C1FC0001C1FC0
001C3F80003C7F00007CFF0003FCFFFFFFFCFFFFFFFC1F247EA325>I
E /Fu 42 122 df<000003FFC00000007FFFF0000003FFFFFC00000FFF00FE00003FF800
3F00007FE000FF8000FFC001FF8001FFC001FF8001FF8001FF8003FF8003FFC003FF0001
FF8003FF0001FF8003FF0001FF8003FF0000FF0003FF00007E0003FF0000000003FF0000
000003FF0000000003FF0000000003FF0000000003FF003FFFC0FFFFFFFFFFC0FFFFFFFF
FFC0FFFFFFFFFFC0FFFFFFFFFFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000
FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000
FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000
FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000
FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000
FFC003FF0000FFC0FFFFFC3FFFFFFFFFFC3FFFFFFFFFFC3FFFFFFFFFFC3FFFFF303A7EB9
35>12 D<0F803FE07FF07FF0FFF8FFF8FFF8FFF8FFF87FF07FF03FE00F800D0D798C1B>
46 D<00001E000000003E00000000FE00000007FE0000003FFE0000FFFFFE0000FFFFFE
0000FFFFFE0000FFCFFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE00
00000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000
000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE000000
0FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000F
FE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE
0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE00
00000FFE00007FFFFFFF807FFFFFFF807FFFFFFF807FFFFFFF80213779B630>49
D<000FFC0000007FFFC00001FFFFF00007FFFFFC000FF03FFF001F800FFF803F0003FFC0
7F0003FFC07FC001FFE0FFE000FFF0FFF000FFF0FFF000FFF0FFF0007FF8FFF0007FF8FF
F0007FF8FFF0007FF87FE0007FF83FC0007FF80F00007FF80000007FF8000000FFF00000
00FFF0000000FFE0000001FFE0000001FFC0000003FF80000003FF00000007FE00000007
FC0000000FF80000001FF00000003FE00000007F800000007F00000000FE00000001F800
000003F000780007E00078000FC00078001F800078003E0000F8007C0000F000F80000F0
01F00001F003FFFFFFF003FFFFFFF007FFFFFFF00FFFFFFFF01FFFFFFFF03FFFFFFFF07F
FFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE025377BB630>I<0003FF0000
001FFFF000007FFFFC0001FC07FF0003F003FF8007E001FFC007C000FFE00FF000FFE00F
FC00FFF01FFC00FFF01FFE00FFF01FFE00FFF01FFE00FFF01FFE00FFF01FFE00FFF00FFC
00FFE00FFC00FFE003F001FFE0000001FFC0000003FF80000003FF00000007FE0000000F
FC0000003FF000000FFFC000000FFF0000000FFFF000000007FE00000001FF80000000FF
C0000000FFE00000007FF00000007FF80000007FFC0000003FFC0000003FFC0000003FFE
1FC0003FFE3FE0003FFE7FF0003FFEFFF8003FFEFFF8003FFEFFF8003FFEFFF8003FFEFF
F8003FFCFFF8003FFCFFF0007FF87FF0007FF87FC000FFF03F8000FFE01FC001FFC00FFC
07FF8007FFFFFF0001FFFFFC00007FFFF0000007FF000027387CB630>I<00000007C000
0000000FC0000000000FC0000000001FC0000000003FC0000000007FC000000000FFC000
000000FFC000000001FFC000000003FFC000000007FFC00000000FFFC00000000FFFC000
00001EFFC00000003CFFC00000007CFFC0000000F8FFC0000000F0FFC0000001E0FFC000
0003C0FFC0000007C0FFC000000F80FFC000000F00FFC000001E00FFC000003C00FFC000
007C00FFC00000F800FFC00000F000FFC00001E000FFC00003C000FFC00007C000FFC000
0F8000FFC0000F0000FFC0001E0000FFC0003C0000FFC0007C0000FFC000F80000FFC000
FFFFFFFFFF80FFFFFFFFFF80FFFFFFFFFF80FFFFFFFFFF80000001FFC000000001FFC000
000001FFC000000001FFC000000001FFC000000001FFC000000001FFC000000001FFC000
000001FFC000000001FFC0000003FFFFFF800003FFFFFF800003FFFFFF800003FFFFFF80
29377DB630>I<1C000000C01F800007C01FF8007FC01FFFFFFF801FFFFFFF801FFFFFFF
001FFFFFFE001FFFFFFC001FFFFFF0001FFFFFE0001FFFFF80001FFFFE00001FFFF00000
1F000000001F000000001F000000001F000000001F000000001F000000001F000000001F
000000001F07FE00001F3FFFE0001FFFFFF8001FFC07FC001FE003FF001F8001FF801F00
00FFC00E0000FFC0000000FFE00000007FE00000007FF00000007FF00000007FF8000000
7FF80600007FF83F80007FF87FE0007FF8FFE0007FF8FFF0007FF8FFF0007FF8FFF0007F
F8FFF0007FF8FFE0007FF0FFE0007FF07FC000FFF07F0000FFE07C0000FFC03E0001FFC0
1F0003FF801FC007FF000FF01FFE0007FFFFF80001FFFFE000007FFF8000000FF8000025
387BB630>I<0F803FE07FF07FF0FFF8FFF8FFF8FFF8FFF87FF07FF03FE00F8000000000
0000000000000000000000000000000000000F803FE07FF07FF0FFF8FFF8FFF8FFF8FFF8
7FF07FF03FE00F800D2579A41B>58 D<00000003E00000000000000007F0000000000000
0007F0000000000000000FF8000000000000000FF8000000000000000FF8000000000000
001FFC000000000000001FFC000000000000003FFE000000000000003FFE000000000000
003FFE000000000000007FFF000000000000007FFF00000000000000FFFF800000000000
00FFFF80000000000000FFFF80000000000001FFFFC0000000000001F3FFC00000000000
03F3FFE0000000000003E1FFE0000000000003E1FFE0000000000007E1FFF00000000000
07C0FFF000000000000FC0FFF800000000000F807FF800000000000F807FF80000000000
1F807FFC00000000001F003FFC00000000003F003FFE00000000003E001FFE0000000000
3E001FFE00000000007E001FFF00000000007C000FFF0000000000FC000FFF8000000000
F80007FF8000000000F80007FF8000000001F80007FFC000000001F00003FFC000000003
FFFFFFFFE000000003FFFFFFFFE000000003FFFFFFFFE000000007FFFFFFFFF000000007
C00000FFF00000000FC00000FFF80000000F8000007FF80000000F8000007FF80000001F
8000007FFC0000001F0000003FFC0000003F0000003FFE0000003E0000001FFE0000003E
0000001FFE0000007E0000001FFF0000007C0000000FFF000000FE0000000FFF8000FFFF
F80007FFFFFF80FFFFF80007FFFFFF80FFFFF80007FFFFFF80FFFFF80007FFFFFF80413A
7DB948>65 D<FFFFFFFFFFC00000FFFFFFFFFFFC0000FFFFFFFFFFFF0000FFFFFFFFFFFF
C000007FF00003FFE000007FF00000FFF000007FF000007FF800007FF000003FFC00007F
F000001FFC00007FF000001FFE00007FF000001FFE00007FF000000FFF00007FF000000F
FF00007FF000000FFF00007FF000000FFF00007FF000000FFF00007FF000000FFF00007F
F000000FFF00007FF000001FFE00007FF000001FFE00007FF000001FFC00007FF000003F
FC00007FF000007FF800007FF00000FFF000007FF00001FFC000007FF0000FFF8000007F
FFFFFFFC0000007FFFFFFFFC0000007FFFFFFFFF8000007FF00000FFF000007FF000003F
F800007FF000001FFC00007FF000000FFE00007FF0000007FF00007FF0000007FF80007F
F0000003FFC0007FF0000003FFC0007FF0000003FFC0007FF0000003FFE0007FF0000003
FFE0007FF0000003FFE0007FF0000003FFE0007FF0000003FFE0007FF0000003FFE0007F
F0000003FFE0007FF0000003FFC0007FF0000003FFC0007FF0000007FFC0007FF000000F
FF80007FF000000FFF00007FF000001FFF00007FF000007FFE00007FF00001FFFC00FFFF
FFFFFFFFF000FFFFFFFFFFFFC000FFFFFFFFFFFF0000FFFFFFFFFFF000003B397DB844>
I<0000003FFC0001C0000003FFFFC003C000001FFFFFF007C00000FFFFFFFC0FC00003FF
FC00FF3FC00007FFC0001FFFC0001FFE00000FFFC0003FFC000003FFC0007FF0000001FF
C000FFE0000000FFC001FFC0000000FFC003FFC00000007FC007FF800000003FC00FFF00
0000003FC00FFF000000001FC01FFE000000001FC01FFE000000000FC03FFE000000000F
C03FFC000000000FC03FFC0000000007C07FFC0000000007C07FFC0000000007C07FF800
0000000000FFF8000000000000FFF8000000000000FFF8000000000000FFF80000000000
00FFF8000000000000FFF8000000000000FFF8000000000000FFF8000000000000FFF800
0000000000FFF8000000000000FFF8000000000000FFF8000000000000FFF80000000000
007FF80000000000007FFC0000000000007FFC0000000003C03FFC0000000003C03FFC00
00000003C03FFE0000000003C01FFE0000000007C01FFE0000000007C00FFF0000000007
800FFF000000000F8007FF800000000F0003FFC00000001F0001FFC00000003E0000FFE0
0000007E00007FF8000000FC00003FFC000001F800001FFF000003F0000007FFC0000FE0
000003FFFC00FF80000000FFFFFFFE000000001FFFFFF80000000003FFFFE00000000000
3FFE0000003A3B7BB945>I<FFFFFFFFFF800000FFFFFFFFFFF80000FFFFFFFFFFFF0000
FFFFFFFFFFFFC000007FF80007FFF000007FF800007FF800007FF800001FFE00007FF800
000FFF00007FF8000003FF80007FF8000001FFC0007FF8000001FFC0007FF8000000FFE0
007FF80000007FF0007FF80000007FF0007FF80000003FF8007FF80000003FF8007FF800
00003FFC007FF80000001FFC007FF80000001FFC007FF80000001FFE007FF80000001FFE
007FF80000001FFE007FF80000001FFE007FF80000001FFF007FF80000001FFF007FF800
00001FFF007FF80000001FFF007FF80000001FFF007FF80000001FFF007FF80000001FFF
007FF80000001FFF007FF80000001FFF007FF80000001FFF007FF80000001FFF007FF800
00001FFF007FF80000001FFE007FF80000001FFE007FF80000001FFE007FF80000001FFE
007FF80000001FFC007FF80000003FFC007FF80000003FFC007FF80000003FF8007FF800
00007FF8007FF80000007FF0007FF8000000FFE0007FF8000000FFE0007FF8000001FFC0
007FF8000003FF80007FF8000007FF00007FF800001FFE00007FF800007FFC00007FF800
07FFF000FFFFFFFFFFFFC000FFFFFFFFFFFF0000FFFFFFFFFFFC0000FFFFFFFFFF800000
40397DB849>I<FFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFC007FF800007FF800007FF80000
7FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF80000
7FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF80000
7FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF80000
7FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF80000
7FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF80000
7FF800FFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFC1E397DB824>73 D<FFFFFFFC0003FFFFC0
FFFFFFFC0003FFFFC0FFFFFFFC0003FFFFC0FFFFFFFC0003FFFFC0007FF80000001FE000
007FF80000001F8000007FF80000003F0000007FF8000000FE0000007FF8000001F80000
007FF8000003F00000007FF8000007E00000007FF800000FC00000007FF800003F800000
007FF800007E000000007FF80000FC000000007FF80001F8000000007FF80003F0000000
007FF8000FE0000000007FF8001F80000000007FF8003F00000000007FF8007E00000000
007FF800FC00000000007FF803F800000000007FF807FC00000000007FF80FFE00000000
007FF81FFF00000000007FF83FFF80000000007FF87FFF80000000007FF9FFFFC0000000
007FFBF7FFE0000000007FFFE3FFF0000000007FFFC1FFF0000000007FFF80FFF8000000
007FFE00FFFC000000007FFC007FFE000000007FF8003FFE000000007FF8001FFF000000
007FF8000FFF800000007FF8000FFFC00000007FF80007FFC00000007FF80003FFE00000
007FF80001FFF00000007FF80001FFF80000007FF80000FFF80000007FF800007FFC0000
007FF800003FFE0000007FF800003FFF0000007FF800001FFF0000007FF800000FFF8000
007FF8000007FFC000007FF8000007FFE000007FF8000003FFE000007FF8000003FFF000
FFFFFFFC007FFFFFE0FFFFFFFC007FFFFFE0FFFFFFFC007FFFFFE0FFFFFFFC007FFFFFE0
43397DB84B>75 D<FFFFFFFF000000FFFFFFFF000000FFFFFFFF000000FFFFFFFF000000
007FF800000000007FF800000000007FF800000000007FF800000000007FF80000000000
7FF800000000007FF800000000007FF800000000007FF800000000007FF800000000007F
F800000000007FF800000000007FF800000000007FF800000000007FF800000000007FF8
00000000007FF800000000007FF800000000007FF800000000007FF800000000007FF800
000000007FF800000000007FF800000000007FF800000000007FF800000000007FF80000
0000007FF800000000007FF800000000007FF800000000007FF800000000007FF8000007
80007FF800000780007FF800000780007FF800000780007FF800000780007FF800000F80
007FF800000F00007FF800000F00007FF800000F00007FF800001F00007FF800001F0000
7FF800003F00007FF800003F00007FF800007F00007FF80000FF00007FF80001FF00007F
F80003FF00007FF8000FFE00007FF8007FFE00FFFFFFFFFFFE00FFFFFFFFFFFE00FFFFFF
FFFFFE00FFFFFFFFFFFE0031397DB839>I<FFFFF80000000003FFFFF0FFFFFC00000000
07FFFFF0FFFFFC0000000007FFFFF0FFFFFE000000000FFFFFF0007FFE000000000FFFE0
00007FFE000000000FFFE000007BFF000000001EFFE000007BFF000000001EFFE0000079
FF800000003CFFE0000079FF800000003CFFE0000078FFC000000078FFE0000078FFC000
000078FFE00000787FE0000000F0FFE00000787FE0000000F0FFE00000787FE0000000F0
FFE00000783FF0000001E0FFE00000783FF0000001E0FFE00000781FF8000003C0FFE000
00781FF8000003C0FFE00000780FFC00000780FFE00000780FFC00000780FFE000007807
FE00000F00FFE000007807FE00000F00FFE000007803FF00001E00FFE000007803FF0000
1E00FFE000007803FF00001E00FFE000007801FF80003C00FFE000007801FF80003C00FF
E000007800FFC0007800FFE000007800FFC0007800FFE0000078007FE000F000FFE00000
78007FE000F000FFE0000078003FF001E000FFE0000078003FF001E000FFE0000078003F
F001E000FFE0000078001FF803C000FFE0000078001FF803C000FFE0000078000FFC0780
00FFE0000078000FFC078000FFE00000780007FE0F0000FFE00000780007FE0F0000FFE0
0000780003FF1E0000FFE00000780003FF1E0000FFE00000780003FF1E0000FFE0000078
0001FFBC0000FFE00000780001FFBC0000FFE00000780000FFF80000FFE00000780000FF
F80000FFE000007800007FF00000FFE000007800007FF00000FFE000007800003FE00000
FFE000007800003FE00000FFE00000FC00003FE00000FFE000FFFFFC001FC001FFFFFFF0
FFFFFC001FC001FFFFFFF0FFFFFC000F8001FFFFFFF0FFFFFC00070001FFFFFFF054397D
B85B>I<000000FFF800000000000FFFFF80000000007FFFFFF000000001FFC01FFC0000
0007FF0007FF0000001FFC0001FFC000003FF000007FE000007FE000003FF00000FFC000
001FF80001FF8000000FFC0003FF8000000FFE0007FF00000007FF0007FF00000007FF00
0FFE00000003FF800FFE00000003FF801FFC00000001FFC01FFC00000001FFC03FFC0000
0001FFE03FFC00000001FFE03FFC00000001FFE07FF800000000FFF07FF800000000FFF0
7FF800000000FFF07FF800000000FFF0FFF800000000FFF8FFF800000000FFF8FFF80000
0000FFF8FFF800000000FFF8FFF800000000FFF8FFF800000000FFF8FFF800000000FFF8
FFF800000000FFF8FFF800000000FFF8FFF800000000FFF8FFF800000000FFF8FFF80000
0000FFF87FF800000000FFF07FFC00000001FFF07FFC00000001FFF07FFC00000001FFF0
3FFC00000001FFE03FFC00000001FFE03FFE00000003FFE01FFE00000003FFC01FFE0000
0003FFC00FFF00000007FF8007FF00000007FF0007FF8000000FFF0003FFC000001FFE00
01FFC000001FFC0000FFE000003FF800007FF000007FF000003FFC0001FFE000001FFF00
07FFC0000007FFC01FFF00000001FFFFFFFC000000007FFFFFF0000000000FFFFF800000
000000FFF80000003D3B7BB948>79 D<FFFFFFFFFF0000FFFFFFFFFFF000FFFFFFFFFFFE
00FFFFFFFFFFFF80007FF8000FFFC0007FF80001FFE0007FF80000FFF0007FF800007FF8
007FF800003FFC007FF800003FFC007FF800001FFE007FF800001FFE007FF800001FFF00
7FF800001FFF007FF800001FFF007FF800001FFF007FF800001FFF007FF800001FFF007F
F800001FFF007FF800001FFF007FF800001FFE007FF800001FFE007FF800003FFC007FF8
00003FFC007FF800007FF8007FF80000FFF0007FF80001FFE0007FF8000FFFC0007FFFFF
FFFF00007FFFFFFFFC00007FFFFFFFE000007FF800000000007FF800000000007FF80000
0000007FF800000000007FF800000000007FF800000000007FF800000000007FF8000000
00007FF800000000007FF800000000007FF800000000007FF800000000007FF800000000
007FF800000000007FF800000000007FF800000000007FF800000000007FF80000000000
7FF800000000007FF800000000007FF800000000007FF800000000FFFFFFFC000000FFFF
FFFC000000FFFFFFFC000000FFFFFFFC00000038397DB841>I<FFFFFFFFFC00000000FF
FFFFFFFFE0000000FFFFFFFFFFFC000000FFFFFFFFFFFF000000007FF8000FFFC0000000
7FF80001FFE00000007FF80000FFF00000007FF800007FF80000007FF800003FFC000000
7FF800003FFC0000007FF800001FFE0000007FF800001FFE0000007FF800001FFF000000
7FF800001FFF0000007FF800001FFF0000007FF800001FFF0000007FF800001FFF000000
7FF800001FFF0000007FF800001FFF0000007FF800001FFE0000007FF800001FFE000000
7FF800003FFC0000007FF800003FF80000007FF800007FF00000007FF80000FFE0000000
7FF80003FFC00000007FF8001FFF000000007FFFFFFFFC000000007FFFFFFFE000000000
7FFFFFFFF0000000007FF8003FFC000000007FF8000FFF000000007FF80007FF80000000
7FF80003FFC00000007FF80001FFC00000007FF80001FFE00000007FF80001FFE0000000
7FF80000FFF00000007FF80000FFF00000007FF80000FFF00000007FF80000FFF0000000
7FF80000FFF00000007FF80000FFF80000007FF80000FFF80000007FF80000FFF8000000
7FF80000FFF80000007FF80000FFF80000007FF80000FFF80060007FF80000FFF800F000
7FF80000FFFC00F0007FF800007FFC00F0007FF800007FFC01F0007FF800003FFE01E0FF
FFFFFC001FFE03E0FFFFFFFC000FFF87C0FFFFFFFC0007FFFF80FFFFFFFC0001FFFF0000
00000000001FFC00443A7DB848>82 D<0007FF000E00003FFFE01E0000FFFFF83E0003FF
FFFE7E0007FC01FFFE000FF0001FFE001FE0000FFE003FC00003FE003F800001FE007F80
0000FE007F000000FE007F0000007E00FF0000007E00FF0000003E00FF0000003E00FF80
00003E00FF8000001E00FFC000001E00FFE000001E00FFF000000000FFFC000000007FFF
E00000007FFFFE0000007FFFFFF000003FFFFFFE00003FFFFFFF80001FFFFFFFC0000FFF
FFFFF00007FFFFFFF80003FFFFFFFC0000FFFFFFFE00003FFFFFFE00000FFFFFFF000001
FFFFFF0000000FFFFF800000007FFF800000000FFFC000000003FFC000000001FFC00000
0000FFC0F00000007FC0F00000007FC0F00000007FC0F00000003FC0F00000003FC0F800
00003FC0F80000003F80FC0000003F80FC0000007F80FE0000007F00FF0000007F00FF80
0000FE00FFE00001FC00FFF80003FC00FFFF801FF800FCFFFFFFE000F83FFFFFC000F007
FFFE0000E0007FF000002A3B7BB935>I<3FFFFFFFFFFFFF803FFFFFFFFFFFFF803FFFFF
FFFFFFFF803FFFFFFFFFFFFF803FF800FFF003FF807FC000FFF0007FC07F8000FFF0001F
C07E0000FFF0000FC07E0000FFF0000FC07C0000FFF00007C07C0000FFF00007C0780000
FFF00003C0780000FFF00003C0780000FFF00003C0780000FFF00003C0F80000FFF00003
E0F00000FFF00001E0F00000FFF00001E0F00000FFF00001E0F00000FFF00001E0000000
FFF0000000000000FFF0000000000000FFF0000000000000FFF0000000000000FFF00000
00000000FFF0000000000000FFF0000000000000FFF0000000000000FFF0000000000000
FFF0000000000000FFF0000000000000FFF0000000000000FFF0000000000000FFF00000
00000000FFF0000000000000FFF0000000000000FFF0000000000000FFF0000000000000
FFF0000000000000FFF0000000000000FFF0000000000000FFF0000000000000FFF00000
00000000FFF0000000000000FFF0000000000000FFF0000000000000FFF0000000000000
FFF0000000000000FFF0000000000000FFF0000000000000FFF0000000000000FFF00000
00000FFFFFFFFF0000000FFFFFFFFF0000000FFFFFFFFF0000000FFFFFFFFF00003B387D
B742>I<003FFE00000003FFFFE000000FFFFFF800001FF00FFE00003FF003FF00003FF8
01FF80003FF800FFC0003FF800FFC0003FF8007FE0003FF8007FE0001FF0007FE0000FE0
007FE0000380007FE0000000007FE0000000007FE00000003FFFE000000FFFFFE000007F
FFFFE00001FFF87FE00007FF807FE0000FFE007FE0003FF8007FE0003FF0007FE0007FE0
007FE000FFE0007FE000FFC0007FE000FFC0007FE000FFC0007FE000FFC0007FE000FFC0
00FFE000FFE001FFE0007FE001FFE0003FF007FFF8001FFC1FBFFFC00FFFFE1FFFC003FF
F80FFFC0003FE003FFC02A257DA42E>97 D<00FF00000000FFFF00000000FFFF00000000
FFFF00000000FFFF0000000007FF0000000003FF0000000003FF0000000003FF00000000
03FF0000000003FF0000000003FF0000000003FF0000000003FF0000000003FF00000000
03FF0000000003FF0000000003FF0000000003FF0000000003FF0000000003FF00000000
03FF01FF800003FF0FFFF00003FF3FFFFC0003FFFE03FF0003FFF000FF8003FFE0007FC0
03FF80003FE003FF00003FF003FF00001FF803FF00001FF803FF00001FFC03FF00000FFC
03FF00000FFC03FF00000FFE03FF00000FFE03FF00000FFE03FF00000FFE03FF00000FFE
03FF00000FFE03FF00000FFE03FF00000FFE03FF00000FFE03FF00000FFE03FF00000FFC
03FF00000FFC03FF00000FFC03FF00001FF803FF00001FF803FF00001FF003FF80003FF0
03FFC0007FE003FFE0007FC003FDF001FF8003F8FC07FE0003F03FFFF80003E00FFFE000
03C003FF00002F3A7EB935>I<0001FFC000000FFFFC00007FFFFF0000FF80FF8003FE00
FFC007FC01FFC00FF801FFC01FF801FFC01FF001FFC03FF001FFC03FF000FF807FE0007F
007FE0001C007FE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000
FFE0000000FFE0000000FFE0000000FFE00000007FE00000007FE00000007FF00000003F
F00000003FF00001E01FF80001E01FF80003E00FFC0007C007FE00078003FF001F8000FF
C07E00007FFFFC00000FFFF0000001FF800023257DA42A>I<000000007F800000007FFF
800000007FFF800000007FFF800000007FFF8000000003FF8000000001FF8000000001FF
8000000001FF8000000001FF8000000001FF8000000001FF8000000001FF8000000001FF
8000000001FF8000000001FF8000000001FF8000000001FF8000000001FF8000000001FF
8000000001FF800001FF81FF80000FFFF1FF80003FFFFDFF8000FFC07FFF8003FF001FFF
8007FC0007FF800FFC0003FF801FF80001FF801FF00001FF803FF00001FF803FF00001FF
807FE00001FF807FE00001FF807FE00001FF80FFE00001FF80FFE00001FF80FFE00001FF
80FFE00001FF80FFE00001FF80FFE00001FF80FFE00001FF80FFE00001FF80FFE00001FF
80FFE00001FF807FE00001FF807FE00001FF807FF00001FF803FF00001FF803FF00001FF
801FF80003FF800FF80007FF8007FC000FFF8003FE001FFFC001FF80FDFFFE007FFFF9FF
FE001FFFE1FFFE0003FF01FFFE2F3A7DB935>I<0003FF8000001FFFF000007FFFFC0001
FF83FE0003FE007F8007FC003F800FF8003FC01FF8001FE01FF0001FE03FF0000FF03FF0
000FF07FE0000FF07FE0000FF87FE00007F8FFE00007F8FFE00007F8FFFFFFFFF8FFFFFF
FFF8FFFFFFFFF8FFE0000000FFE0000000FFE0000000FFE00000007FE00000007FE00000
007FE00000003FF00000003FF00000781FF00000780FF80000F80FFC0000F007FC0003F0
01FF000FE000FFC07FC0007FFFFF00000FFFFC000001FFE00025257DA42C>I<00001FF0
000001FFFC000007FFFF00001FF87F80003FE0FF8000FFC1FFC000FFC1FFC001FF81FFC0
01FF81FFC003FF01FFC003FF00FF8003FF00FF8003FF003E0003FF00000003FF00000003
FF00000003FF00000003FF00000003FF00000003FF00000003FF000000FFFFFF0000FFFF
FF0000FFFFFF0000FFFFFF000003FF00000003FF00000003FF00000003FF00000003FF00
000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF0000
0003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF000000
03FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003
FF00000003FF00000003FF000000FFFFFE0000FFFFFE0000FFFFFE0000FFFFFE0000223A
7DB91D>I<000000001F000007FE00FFC0007FFFE3FFC001FFFFFFEFE007FE07FF8FE00F
F801FF1FE01FF000FF8FE03FF000FFCFE03FE0007FC7C03FE0007FC0007FE0007FE0007F
E0007FE0007FE0007FE0007FE0007FE0007FE0007FE0007FE0007FE0003FE0007FC0003F
E0007FC0003FF000FFC0001FF000FF80000FF801FF000007FE07FE00000FFFFFF800000F
7FFFE000001E07FE0000001E00000000001E00000000003E00000000003F00000000003F
80000000001FC0000000001FFFFFF800001FFFFFFF80001FFFFFFFE0000FFFFFFFF80007
FFFFFFFC0003FFFFFFFE0007FFFFFFFE001FFFFFFFFF003FC0000FFF007F000000FF80FF
0000007F80FE0000007F80FE0000003F80FE0000003F80FE0000003F80FF0000007F807F
0000007F007F800000FF003FC00001FE001FF00007FC0007FE003FF00001FFFFFFC00000
7FFFFF00000007FFF000002B377DA530>I<00FF00000000FFFF00000000FFFF00000000
FFFF00000000FFFF0000000007FF0000000003FF0000000003FF0000000003FF00000000
03FF0000000003FF0000000003FF0000000003FF0000000003FF0000000003FF00000000
03FF0000000003FF0000000003FF0000000003FF0000000003FF0000000003FF00000000
03FF007FC00003FF03FFF80003FF0FFFFE0003FF1F03FF0003FF3C01FF8003FF7801FF80
03FFF000FF8003FFE000FFC003FFC000FFC003FFC000FFC003FF8000FFC003FF8000FFC0
03FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC0
03FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC0
03FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC0
03FF0000FFC003FF0000FFC003FF0000FFC0FFFFFC3FFFFFFFFFFC3FFFFFFFFFFC3FFFFF
FFFFFC3FFFFF303A7DB935>I<01F00007FC000FFE000FFE001FFF001FFF001FFF001FFF
001FFF000FFE000FFE0007FC0001F0000000000000000000000000000000000000000000
0000000000000000FF007FFF007FFF007FFF007FFF0007FF0003FF0003FF0003FF0003FF
0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF
0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF00FFFF
F8FFFFF8FFFFF8FFFFF8153B7DBA1B>I<00FF00FFFF00FFFF00FFFF00FFFF0007FF0003
FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003
FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003
FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003
FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF00FF
FFFCFFFFFCFFFFFCFFFFFC163A7DB91B>108 D<00FE007FE0000FFC0000FFFE01FFFC00
3FFF8000FFFE07FFFF00FFFFE000FFFE1F81FF83F03FF000FFFE3C00FF87801FF00007FE
7800FFCF001FF80003FEF000FFDE001FF80003FFE0007FFC000FFC0003FFC0007FF8000F
FC0003FFC0007FF8000FFC0003FF80007FF0000FFC0003FF80007FF0000FFC0003FF0000
7FE0000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC00
03FF00007FE0000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC0003FF00007FE0
000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC0003FF
00007FE0000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC0003FF00007FE0000F
FC0003FF00007FE0000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC0003FF0000
7FE0000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC00FFFFFC1FFFFF83FFFFF0
FFFFFC1FFFFF83FFFFF0FFFFFC1FFFFF83FFFFF0FFFFFC1FFFFF83FFFFF04C257DA451>
I<00FE007FC000FFFE03FFF800FFFE0FFFFE00FFFE1F03FF00FFFE3C01FF8007FE7801FF
8003FEF000FF8003FFE000FFC003FFC000FFC003FFC000FFC003FF8000FFC003FF8000FF
C003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FF
C003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FF
C003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FF
C003FF0000FFC003FF0000FFC003FF0000FFC0FFFFFC3FFFFFFFFFFC3FFFFFFFFFFC3FFF
FFFFFFFC3FFFFF30257DA435>I<0001FFC00000000FFFF80000007FFFFF000000FF80FF
800003FE003FE00007FC001FF0000FF8000FF8001FF00007FC001FF00007FC003FF00007
FE003FE00003FE007FE00003FF007FE00003FF007FE00003FF00FFE00003FF80FFE00003
FF80FFE00003FF80FFE00003FF80FFE00003FF80FFE00003FF80FFE00003FF80FFE00003
FF80FFE00003FF807FE00003FF007FE00003FF007FE00003FF003FE00003FE003FF00007
FE001FF00007FC001FF00007FC000FF8000FF80007FC001FF00003FE003FE00001FF80FF
C000007FFFFF0000001FFFFC00000001FFC0000029257DA430>I<00FF01FF8000FFFF0F
FFF000FFFF3FFFFC00FFFFFE07FF00FFFFF001FF8003FFE000FFC003FF80007FE003FF00
007FF003FF00003FF803FF00003FF803FF00001FFC03FF00001FFC03FF00001FFC03FF00
000FFE03FF00000FFE03FF00000FFE03FF00000FFE03FF00000FFE03FF00000FFE03FF00
000FFE03FF00000FFE03FF00000FFE03FF00000FFE03FF00000FFC03FF00001FFC03FF00
001FFC03FF00001FF803FF00003FF803FF00003FF003FF80007FF003FFC0007FE003FFE0
00FFC003FFF003FF8003FFFC07FE0003FF3FFFF80003FF0FFFE00003FF03FF000003FF00
00000003FF0000000003FF0000000003FF0000000003FF0000000003FF0000000003FF00
00000003FF0000000003FF0000000003FF0000000003FF0000000003FF00000000FFFFFC
000000FFFFFC000000FFFFFC000000FFFFFC0000002F357EA435>I<00FE03F000FFFE0F
FE00FFFE3FFF00FFFE7C7F80FFFEF8FFC007FEF0FFC003FFE0FFC003FFC0FFC003FFC0FF
C003FF807F8003FF803F0003FF800C0003FF80000003FF00000003FF00000003FF000000
03FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003
FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF
00000003FF00000003FF000000FFFFFE0000FFFFFE0000FFFFFE0000FFFFFE000022257E
A427>114 D<003FF03803FFFEF80FFFFFF81FC00FF83F0003F87E0001F87C0000F8FC00
00F8FC000078FE000078FF000078FF800000FFFC0000FFFFE0007FFFFC007FFFFF803FFF
FFC01FFFFFF00FFFFFF803FFFFF800FFFFFC001FFFFC00007FFE000007FEF00001FEF000
00FEF80000FEF800007EFC00007EFC00007CFE0000FCFF0000F8FF8001F8FFF007F0FFFF
FFC0F8FFFF00E01FF8001F257DA426>I<000F0000000F0000000F0000000F0000000F00
00001F0000001F0000001F0000001F0000003F0000003F0000007F000000FF000000FF00
0001FF000007FF00001FFFFFE0FFFFFFE0FFFFFFE0FFFFFFE003FF000003FF000003FF00
0003FF000003FF000003FF000003FF000003FF000003FF000003FF000003FF000003FF00
0003FF000003FF000003FF000003FF000003FF000003FF000003FF007803FF007803FF00
7803FF007803FF007803FF007803FF007803FF007803FF00F801FF80F001FF81F000FFC3
E0003FFFC0001FFF800003FE001D357EB425>I<00FF00003FC0FFFF003FFFC0FFFF003F
FFC0FFFF003FFFC0FFFF003FFFC007FF0001FFC003FF0000FFC003FF0000FFC003FF0000
FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000
FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000
FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000
FFC003FF0001FFC003FF0001FFC003FF0003FFC003FF0003FFC001FF0007FFC001FF800F
FFE000FFC03EFFFF007FFFFCFFFF001FFFF0FFFF0003FF80FFFF30257DA435>I<FFFFF0
01FFF8FFFFF001FFF8FFFFF001FFF8FFFFF001FFF803FF00003F0003FF00001E0003FF80
003E0001FF80003C0001FFC0007C0000FFC000780000FFE000F800007FE000F000007FF0
01F000003FF001E000003FF801E000001FF803C000001FF803C000001FFC07C000000FFC
078000000FFE0F80000007FE0F00000007FF1F00000003FF1E00000003FFBE00000001FF
BC00000001FFFC00000000FFF800000000FFF800000000FFF8000000007FF0000000007F
F0000000003FE0000000003FE0000000001FC0000000001FC0000000000F80000000000F
8000002D257EA432>I<FFFFF1FFFF803FFFFFFFF1FFFF803FFFFFFFF1FFFF803FFFFFFF
F1FFFF803FFF07FE000FF80003E003FF0007F80003C003FF0007FC0003C003FF8007FC00
07C001FF8003FE00078001FF8007FE00078000FFC007FE000F0000FFC007FF000F0000FF
E00FFF001F00007FE00FFF801E00007FE01FFF801E00003FF01E7F803C00003FF01E7FC0
3C00003FF83E7FC07C00001FF83C3FE07800001FF87C3FE0F800000FFC781FF0F000000F
FC781FF0F000000FFEF00FF1F0000007FEF00FF9E0000007FFF00FFBE0000003FFE007FF
C0000003FFE007FFC0000003FFC003FFC0000001FFC003FF80000001FFC003FF80000000
FF8001FF00000000FF8001FF00000000FF0000FF000000007F0000FE000000007F0000FE
000000003E00007C000000003C00003C000040257EA445>I<FFFFF001FFF8FFFFF001FF
F8FFFFF001FFF8FFFFF001FFF803FF00003F0003FF00001E0003FF80003E0001FF80003C
0001FFC0007C0000FFC000780000FFE000F800007FE000F000007FF001F000003FF001E0
00003FF801E000001FF803C000001FF803C000001FFC07C000000FFC078000000FFE0F80
000007FE0F00000007FF1F00000003FF1E00000003FFBE00000001FFBC00000001FFFC00
000000FFF800000000FFF800000000FFF8000000007FF0000000007FF0000000003FE000
0000003FE0000000001FC0000000001FC0000000000F80000000000F80000000000F0000
0000000F00000000001F00000000001E0000003F003E0000007F803C000000FFC07C0000
00FFC078000000FFC0F8000000FFC1F0000000FFC3E00000007F87C00000007D1F800000
003FFF000000001FFC0000000007F0000000002D357EA432>121
D E /Fv 23 117 df<3C007E00FF00FF00FF80FF807F803D800180018001800180038003
000300070006000E000C001C0038007000600009177A8715>59 D<000000000300000000
0000070000000000000F0000000000000F0000000000001F8000000000001F8000000000
003F8000000000007F8000000000007F800000000000FF800000000000FF800000000001
BF8000000000033F8000000000033FC000000000063FC000000000061FC0000000000C1F
C000000000181FC000000000181FC000000000301FC000000000701FC000000000601FC0
00000000C01FC000000000C01FE000000001801FE000000003800FE000000003000FE000
000006000FE000000006000FE00000000C000FE00000001C000FE000000018000FE00000
0030000FF000000030000FF00000007FFFFFF0000000FFFFFFF0000000FFFFFFF0000001
800007F0000001800007F0000003000007F0000006000007F0000006000007F800000C00
0007F800000C000003F8000018000003F8000030000003F8000070000003F80000600000
03F80000E0000003F80001E0000003F80007F0000007FC00FFFF0001FFFFF0FFFF0001FF
FFF0FFFE0001FFFFF034367DB53A>65 D<000FFFFFFFF000000FFFFFFFFE00000FFFFFFF
FF8000003FC0003FE000003FC0000FF000003FC00007F000003F800007F800003F800003
F800007F800003FC00007F800003FC00007F000003FC00007F000003FC0000FF000003FC
0000FF000003F80000FE000007F80000FE000007F00001FE00000FF00001FE00000FE000
01FC00001FC00001FC00003F800003FC00007F000003FC0001FE000003F80007F8000003
FFFFFFE0000007FFFFFF80000007F8001FF0000007F00003FC000007F00000FE00000FF0
00007F00000FF000007F00000FE000003F80000FE000003F80001FE000003FC0001FE000
003FC0001FC000003FC0001FC000003FC0003FC000003FC0003FC000003F80003F800000
7F80003F8000007F80007F800000FF00007F800000FE00007F000001FE00007F000003FC
0000FF000007F80000FF00000FF00000FE00003FE00001FE0001FF8000FFFFFFFFFE0000
FFFFFFFFF80000FFFFFFFFC0000036337DB23A>I<0000000FF800180000007FFF003800
0003FFFFC07800000FFC03E0F000003FC000F1F00000FF00003BF00001FC00001FF00007
F800001FE0000FF000000FE0001FE0000007E0003F80000007E0007F80000007C000FF00
000003C001FE00000003C001FC00000003C003FC000000038007F800000003800FF00000
0003800FF000000003801FE000000003001FE000000003003FC000000003003FC0000000
00007FC000000000007F8000000000007F8000000000007F800000000000FF8000000000
00FF000000000000FF000000000000FF000000000000FF000000000000FE000000000000
FE000000000000FE000000003800FE000000003800FE000000003000FE000000003000FE
000000007000FE000000006000FE00000000E0007F00000001C0007F0000000180007F00
00000380003F8000000700003F8000000E00001FC000001C00000FE0000038000007F000
0070000003F80001E0000001FC0007C0000000FF803F000000003FFFFC000000000FFFF0
0000000001FF8000000035377CB437>I<000FFFFFFFF80000000FFFFFFFFF0000000FFF
FFFFFFC00000003FC0003FE00000003FC0000FF00000003FC00003F80000003F800001FC
0000003F800000FE0000007F8000007F0000007F8000003F0000007F0000003F8000007F
0000003F800000FF0000001F800000FF0000001FC00000FE0000001FC00000FE0000001F
C00001FE0000001FC00001FE0000001FC00001FC0000001FC00001FC0000001FC00003FC
0000001FC00003FC0000003FC00003F80000003FC00003F80000003FC00007F80000003F
C00007F80000003F800007F00000007F800007F00000007F80000FF00000007F80000FF0
0000007F00000FE0000000FF00000FE0000000FE00001FE0000001FE00001FE0000001FC
00001FC0000001FC00001FC0000003F800003FC0000003F000003FC0000007F000003F80
00000FE000003F8000000FC000007F8000001F8000007F8000003F0000007F0000007E00
00007F000001FC000000FF000003F8000000FF00000FF0000000FE00003FC0000001FE00
01FF000000FFFFFFFFFC000000FFFFFFFFF0000000FFFFFFFF000000003A337DB23F>I<
000FFFFFFFFFFC000FFFFFFFFFFC000FFFFFFFFFF800003FC00007F800003FC00000F800
003FC000007800003F8000007800003F8000003800007F8000003800007F800000300000
7F0000003000007F000000300000FF000000300000FF000000300000FE000000300000FE
000600300001FE000E00700001FE000C00600001FC000C00000001FC000C00000003FC00
1C00000003FC003800000003F8003800000003F800F800000007FFFFF800000007FFFFF8
00000007FFFFF000000007F001F00000000FF000F00000000FF000600000000FE0006000
00000FE000600000001FE000E00000001FE000C00000001FC000C00000001FC000C00000
003FC000000000003FC000000000003F8000000000003F8000000000007F800000000000
7F8000000000007F0000000000007F000000000000FF000000000000FF000000000000FE
000000000001FF0000000000FFFFFF00000000FFFFFF00000000FFFFFF0000000036337D
B231>70 D<000FFFFFC000FFFF000FFFFFC000FFFF000FFFFFC000FFFF00003FE000001F
E000003FC000001F0000003FC000003E0000003F800000380000003F800000F00000007F
800001C00000007F800003800000007F00000E000000007F00001C00000000FF00003800
000000FF0000E000000000FE0001C000000000FE00038000000001FE000E0000000001FE
001C0000000001FC00380000000001FC00F00000000003FC01F00000000003FC03F00000
000003F80FF00000000003F81FF80000000007F83FF80000000007F8F3FC0000000007F1
C3FC0000000007F381FE000000000FF701FE000000000FFC00FF000000000FF800FF0000
00000FF000FF000000001FE0007F800000001FE0007F800000001FC0003FC00000001FC0
003FC00000003FC0001FE00000003FC0001FE00000003F80000FF00000003F80000FF000
00007F80000FF00000007F800007F80000007F000007F80000007F000003FC000000FF00
0003FC000000FF000001FE000000FE000001FE000001FE000003FF0000FFFFFC003FFFF8
00FFFFFC007FFFF800FFFFFC007FFFF80040337DB241>75 D<000FFFE00000000FFFC000
0FFFE00000001FFFC0000FFFE00000003FFFC000003FE00000003FE00000003FE0000000
7FC00000003FE0000000DFC000000033F0000000DF8000000033F00000019F8000000073
F00000033F8000000073F00000033F0000000063F00000063F0000000063F000000C3F00
000000E3F000000C7F00000000E1F80000187E00000000C1F80000187E00000000C1F800
00307E00000001C1F8000060FE00000001C1F8000060FC0000000181F80000C0FC000000
0181F8000180FC0000000381F8000181FC0000000380FC000301F80000000300FC000301
F80000000300FC000601F80000000700FC000C03F80000000700FC000C03F00000000600
FC001803F00000000600FC003003F00000000E007E003007F00000000E007E006007E000
00000C007E00C007E00000000C007E00C007E00000001C007E01800FE00000001C007E01
800FC000000018007E03000FC000000018007E06000FC000000038003F06001FC0000000
38003F0C001F8000000030003F18001F8000000030003F18001F8000000070003F30003F
8000000070003F30003F0000000060003F60003F0000000060001FC0003F00000000E000
1FC0007F00000000E0001F80007E00000001E0001F00007E00000007F0001F0000FE0000
00FFFF801E007FFFFC0000FFFF801C007FFFFC0000FFFF800C007FFFFC00004A337CB24A
>77 D<000FFFE00001FFFF000FFFE00001FFFF000FFFF00001FFFF00001FF000000FE000
003FF80000078000003FF800000700000033FC00000600000033FC00000600000071FE00
000E00000071FE00000C00000060FE00000C00000060FF00000C000000E07F00001C0000
00E07F800018000000C03F800018000000C03FC00018000001C03FC00038000001C01FE0
0030000001801FE00030000001800FF00030000003800FF000700000038007F800600000
030007F800600000030003F800600000070003FC00E00000070001FC00C00000060001FE
00C00000060000FE00C000000E0000FF01C000000E0000FF018000000C00007F81800000
0C00007F818000001C00003FC38000001C00003FC30000001800001FE30000001800001F
E30000003800000FF70000003800000FF600000030000007F600000030000007FE000000
70000003FE00000070000003FC00000060000001FC00000060000001FC000000E0000001
FC000000E0000000F8000001E0000000F8000007F0000000780000FFFF800000780000FF
FF800000300000FFFF80000030000040337DB23D>I<000FFFFFFFF000000FFFFFFFFE00
000FFFFFFFFF0000003FC0007FC000003FC0001FE000003FC00007F000003F800007F000
003F800003F800007F800003F800007F800003F800007F000003FC00007F000003FC0000
FF000003FC0000FF000007F80000FE000007F80000FE000007F80001FE000007F00001FE
00000FF00001FC00000FE00001FC00001FC00003FC00003F800003FC00007F000003F800
00FE000003F80003FC000007F8001FF0000007FFFFFFC0000007FFFFFE00000007F00000
0000000FF000000000000FF000000000000FE000000000000FE000000000001FE0000000
00001FE000000000001FC000000000001FC000000000003FC000000000003FC000000000
003F8000000000003F8000000000007F8000000000007F8000000000007F000000000000
7F000000000000FF000000000000FF000000000000FE000000000001FE0000000000FFFF
FC00000000FFFFFC00000000FFFFFC0000000036337DB231>80 D<000FFFFFFF8000000F
FFFFFFF800000FFFFFFFFE0000003FC001FF0000003FC0003FC000003FC0001FE000003F
80000FE000003F800007F000007F800007F000007F800007F000007F000007F800007F00
0007F80000FF000007F80000FF00000FF00000FE00000FF00000FE00000FF00001FE0000
1FE00001FE00001FC00001FC00003F800001FC00003F000003FC00007E000003FC0001FC
000003F80007F0000003F8003FC0000007FFFFFE00000007FFFFF800000007F0007E0000
0007F0003F0000000FF0001F8000000FF0000FC000000FE0000FC000000FE0000FE00000
1FE0000FE000001FE0000FE000001FC0000FE000001FC0000FE000003FC0001FE000003F
C0001FE000003F80001FE000003F80001FE000007F80003FE000007F80003FC000007F00
003FC000007F00003FC00600FF00003FC00E00FF00003FC00C00FE00003FC01C01FE0000
3FC018FFFFFC001FC038FFFFFC000FE070FFFFFC0007E0E00000000003FFC00000000000
7F0037357DB23A>82 D<000000FF0018000007FFE03800001FFFF87800007F00FCF80000
FC001FF00001F0000FF00003E00007F00007C00003F0000F800003E0000F800003E0001F
000001E0001F000001E0003E000001C0003E000001C0003E000001C0007E000001C0007E
00000180007E00000180007F00000000007F80000000007FC0000000003FF0000000003F
FF000000003FFFF00000001FFFFE0000000FFFFF80000007FFFFC0000003FFFFE0000000
FFFFF00000000FFFF800000000FFF8000000000FF80000000007FC0000000003FC000000
0001FC0000000000FC0000000000FC000C000000FC000C000000FC001C000000F8001800
0000F80018000000F80018000001F80038000001F0003C000003F0003C000003E0003C00
0007C0007E00000F80007F00001F80007F80003F00007BE0007C0000F9FC03F80000F07F
FFE00000E01FFF800000C003FE0000002D377CB42F>I<7FFFFE000FFFF87FFFFE000FFF
F87FFFFE000FFFF801FF0000007F0001FE0000003C0001FE000000380001FC0000003000
01FC000000300001FC000000700003FC000000700003F8000000600003F8000000600003
F8000000E00007F8000000E00007F0000000C00007F0000000C00007F0000001C0000FF0
000001C0000FE000000180000FE000000180000FE000000380001FE000000380001FC000
000300001FC000000300001FC000000700003FC000000700003F8000000600003F800000
0600003F8000000E00007F8000000E00007F0000000C00007F0000000C00007F0000001C
0000FF0000001C0000FE000000180000FE000000180000FE000000380000FE0000003000
00FC000000700000FC000000600000FC000000E00000FC000001C00000FE000001C00000
7E0000038000007E0000070000007F00000E0000003F00003C0000001F8000780000000F
C001F000000007F00FC000000003FFFF0000000000FFFC00000000001FE0000000003535
7BB234>85 D<FFFFF00FFFFF000FFFE0FFFFF00FFFFF001FFFE0FFFFF00FFFFF001FFFE0
07FC00007FC00001FE0007F800003F800000F80003F800003F800000700003F800003F80
0000E00003F800003F800000C00003F800003F800001800003F800003F800001800003F8
00003F800003000003F800007F800003000003F800007F800006000003F80000FFC0000E
000003F80000FFC0000C000003F800019FC00018000003FC00019FC00018000003FC0003
1FC00030000001FC00061FC00030000001FC00061FC00060000001FC000C1FC000E00000
01FC000C1FC000C0000001FC00181FC00180000001FC00381FC00180000001FC00301FC0
0300000001FC00601FC00300000001FC00601FE00600000001FC00C00FE00C00000001FC
00C00FE00C00000001FE01800FE01800000000FE03000FE01800000000FE03000FE03000
000000FE06000FE07000000000FE06000FE06000000000FE0C000FE0C000000000FE1C00
0FE0C000000000FE18000FE18000000000FE30000FE18000000000FE30000FF300000000
00FE60000FF70000000000FE600007F60000000000FFC00007FC0000000000FFC00007FC
00000000007F800007F800000000007F000007F800000000007F000007F000000000007E
000007E000000000007E000007E000000000007C000007C0000000000078000007C00000
00000078000007800000000000700000078000000000007000000300000000004B357CB2
49>87 D<0001F800000007FE0000001F071C00007C03FE0000F801FE0001F001FE0003F0
00FE0007E000FC0007C000FC000FC000FC001F8001FC001F8001F8003F0001F8003F0001
F8003F0003F8007F0003F0007E0003F0007E0003F0007E0007F000FE0007E000FC0007E0
00FC0007E040FC000FE060FC000FC0E0FC000FC0C07C000FC0C07C001FC1C07C003FC180
3C007F81803E00EF83801E01C7C3000F0787C70007FE03FE0000F800F80023227EA029>
97 D<00000001F8000000FFF8000000FFF8000000FFF000000007F000000007F0000000
07F000000007E000000007E00000000FE00000000FE00000000FC00000000FC00000001F
C00000001FC00000001F800000001F800000003F800000003F800001F83F000007FE3F00
001F077F00007C03FF0000F801FE0001F001FE0003F000FE0007E000FE0007C000FC000F
C000FC001F8001FC001F8001FC003F0001F8003F0001F8003F0003F8007F0003F8007E00
03F0007E0003F0007E0007F000FE0007F000FC0007E000FC0007E040FC000FE060FC000F
E0E0FC000FC0C07C000FC0C07C001FC1C07C003FC1803C007F81803E00EF83801E01C7C3
000F0787C70007FE03FE0000F800F80025357EB328>100 D<0001C00007E00007F0000F
F0000FE00007E00003800000000000000000000000000000000000000000000000000000
0000000000F00003FC00071E000E1F001C1F00381F00301F80303F00703F00603F00607F
00E07E0040FE0000FE0000FC0001FC0001F80001F80003F80003F00007F00007F02007E0
700FE0600FC0600FC0E00FC0C01F80C00F81C00F83800F8700078E0003FC0000F0001433
7EB11A>105 D<0000001C0000007E000000FE000000FE000000FE000000FC0000007800
000000000000000000000000000000000000000000000000000000000000000000000000
00000000003F000000FFC00001C3E0000383E0000701F0000E01F0000C03F0001C03F000
3803F0003003F0003007F0007007F0002007E0000007E000000FE000000FE000000FC000
000FC000001FC000001FC000001F8000001F8000003F8000003F8000003F0000003F0000
007F0000007F0000007E0000007E000000FE000000FE000000FC000000FC000001FC0000
01FC000001F8000001F8000003F8001C03F0007F03F0007F07E0007F07E000FE0FC000FE
1F8000783F0000707C00003FF000000FC000001F4281B11F>I<0007E0000003FFE00000
03FFE0000003FFC00000001FC00000001FC00000001FC00000001F800000001F80000000
1F800000003F800000003F000000003F000000003F000000007F000000007E000000007E
000000007E00000000FE00000000FC001F0000FC007FC000FC01E0C001FC0383E001F807
0FE001F80E0FE001F81C0FE003F8380FC003F0700FC003F0E0070003F1C0000007F78000
0007EE00000007FC00000007FE0000000FFFE000000FC7F800000FC1FE00000FC07E0000
1FC03F00001F803F00001F803F80801F803F81C03F803F01803F003F01803F003F01803F
003F03807F003F03007E003E07007E003E06007E001F0E00FE001F1C00FC0007F8003800
03E00023357DB328>I<01E000FE0007F00007F803FF801FFC000E3E0F07E0783F001C3E
3C03F1E01F80181F7001F3800F80381FE001F7000F80303FC001FE000FC0703FC001FE00
0FC0603F8001FC000FC0603F0001F8000FC0603F0003F8001FC0E07F0003F0001F80407E
0003F0001F80007E0003F0001F80007E0007F0003F8000FE0007F0003F0000FC0007E000
3F0000FC0007E0007F0000FC000FE0007E0001FC000FE0007E0001F8000FC000FE0001F8
000FC000FC0401F8001FC000FC0E03F8001FC001FC0C03F0001F8001F80C03F0001F8001
F81C03F0003F8003F81807F0003F8003F01807E0003F0003F03807E0003F0001F07007E0
007F0001F0E00FE0007F0000F1C00FC0007E00007F800380001C00001E003F227EA044>
109 D<01E000FE000007F803FF80000E3E0F07E0001C3E3C03F000181F7001F000381FE0
01F000303FC001F800703FC001F800603F8001F800603F0001F800603F0003F800E07F00
03F000407E0003F000007E0003F000007E0007F00000FE0007E00000FC0007E00000FC00
0FE00000FC000FC00001FC000FC00001F8001FC00001F8001F808001F8001F81C003F800
3F818003F0003F018003F0003F038003F0007F030007F0007E030007E0007E070007E000
3E0E0007E0003E1C000FE0001E38000FC0000FF00003800003C0002A227EA02E>I<001F
001F00007FC07FE000E3E1E0F000C3E3807801C1F7007C0181FE003C0183FC003E0383F8
003E0303F0003E0303F0003F0707F0003F0607F0003F0207E0003F0007E0003F000FE000
7F000FE0007E000FC0007E000FC0007E001FC000FE001FC000FC001F8000FC001F8000FC
003F8001F8003F8001F8003F0003F0003F0003E0007F0007E0007F000FC0007F800F8000
7F801F0000FFC03E0000FEE0F80000FC7FE00000FC1F800001FC00000001FC00000001F8
00000001F800000003F800000003F800000003F000000003F000000007F000000007F000
000007E0000000FFFF800000FFFF800000FFFF800000283083A027>112
D<000380000FC0000FC0000FC0001FC0001FC0001F80001F80003F80003F80003F00003F
00007F00007F00007E007FFFFE7FFFFEFFFFFE00FC0000FC0001FC0001FC0001F80001F8
0003F80003F80003F00003F00007F00007F00007E00007E0000FE0000FE0000FC0000FC0
081FC01C1FC0181F80181F80381F80701F80601F00E01F01C00F83800F870007FE0001F8
0017307FAE1C>116 D E /Fw 1 80 df<000001C003FC00000007801FFF0000000F007F
FFC000003C01FFFFE000007803C1FFF00000E00F007FF00003C01E001FF80007803C000F
F8000F00780007FC001E00F80007FC003C01F00003FC007C03E00003FE00F803E00001FE
01F007C00001FE01F00FC00001FE03E00F800000FE07E01F800000FE07C01F000000FE0F
C03C000000FE0F8038000000FE1F8000000000FE1F8000000000FE3F0000000000FC3F00
00000000FC3F0000000000FC7F0000000001FC7E0000000001FC7E0000000001F87E0000
000001F8FE0000000001F8FE0000000003F0FE0000000003F0FE0000000003E0FE000000
0007E0FE0000000007C0FE000000000FC0FF000000000F80FF000000001F00FF00000000
1F00FF000000003E007F800000007C007F8000000078007FC0000000F0007FC0000001E0
003FE0000003C0003FF000000780001FF800000F00001FFC00003C00000FFF0000780000
07FF8001E0000003FFF01FC0000001FFFFFF000000007FFFF8000000003FFFE000000000
07FE0000000037377CB43D>79 D E /Fx 34 120 df<FFFF80FFFF80FFFF80FFFF807FFF
00110579911B>45 D<000000001C00000000003C00000000003C00000000007C00000000
00FC0000000000FC0000000001FC0000000001FE0000000003FE0000000003FE00000000
077E000000000F7E000000000E7E000000001C7E000000001C7E00000000387E00000000
387E00000000707E00000000F07E00000000E07E00000001C07E00000001C07E00000003
807F00000003803F00000007003F00000007003F0000000E003F0000001E003F0000001C
003F00000038003F00000038003F00000070003F00000070003F000000E0003F000001FF
FFFF000001FFFFFF000003FFFFFF00000380003F00000700001F80000700001F80000E00
001F80001E00001F80001C00001F80003C00001F80003800001F80007000001F8000F000
001F8000E000001F8001E000001F8003E000001F800FF000003FC0FFFE0007FFFEFFFE00
07FFFEFFFE0007FFFE2F367BB539>65 D<0000001FF000C0000000FFFC01C0000003FFFF
03C000000FF00F878000003F8003CF800000FE0001EF800001FC0000FF800003F00000FF
00000FE000007F00001FC000007F00003F8000003F00003F0000003E00007E0000003E00
00FE0000003E0001FC0000003E0003F80000003C0003F80000003C0007F00000003C0007
F00000003C000FE000000038000FE000000038001FC000000038001FC000000000003FC0
00000000003F8000000000003F8000000000003F8000000000007F8000000000007F0000
000000007F0000000000007F0000000000007F000000000000FE000000000000FE000000
000000FE00000003C000FE00000003C000FE0000000380007E0000000380007E00000007
80007E0000000700007E0000000F00007E0000000E00007F0000001E00003F0000003C00
003F0000007800001F8000007000001F800000F000000FC00001E0000007E00007C00000
03F0000F00000001F8003E00000000FF00FC000000007FFFF0000000001FFFC000000000
03FE00000000323775B437>67 D<0007FFFFFFC000000FFFFFFFF000000FFFFFFFFC0000
003F8001FE0000003F80007F0000003F80001F8000003F00000FC000003F000007E00000
7F000007E000007F000003F000007E000003F000007E000001F00000FE000001F80000FE
000001F80000FC000001F80000FC000001F80001FC000001F80001FC000001F80001F800
0001F80001F8000001F80003F8000001F80003F8000003F80003F0000003F80003F00000
03F80007F0000003F80007F0000003F00007E0000007F00007E0000007F0000FE0000007
F0000FE0000007E0000FC000000FE0000FC000000FC0001FC000001FC0001FC000001F80
001F8000001F80001F8000003F00003F8000003F00003F8000007E00003F000000FC0000
3F000000FC00007F000001F800007F000003F000007E000007E000007E00000FC00000FE
00001F800000FE00007E000000FC0001FC000001FC000FF800007FFFFFFFE00000FFFFFF
FF000000FFFFFFF800000035337BB23A>I<0007FFFFFFFFF0000FFFFFFFFFF0000FFFFF
FFFFE000003F80001FE000003F800007E000003F800003E000003F000003E000003F0000
01E000007F000001E000007F000001C000007E000001C000007E000001C00000FE000001
C00000FE000001C00000FC000E01C00000FC000E01C00001FC001E03C00001FC001C0380
0001F8001C00000001F8003C00000003F8003C00000003F8007800000003F001F8000000
03FFFFF800000007FFFFF800000007FFFFF000000007E001F000000007E000F00000000F
E000F00000000FE000E00000000FC000E00000000FC000E00700001FC001E00F00001FC0
01C00E00001F8001C01E00001F8000001C00003F8000001C00003F8000003C00003F0000
003800003F0000007800007F000000F000007F000000F000007E000001F000007E000003
E00000FE000007E00000FE00000FC00000FC00001FC00001FC0001FF80007FFFFFFFFF80
00FFFFFFFFFF8000FFFFFFFFFF000034337CB234>I<000FFFFF80000FFFFF80000FFFFF
0000003FC00000003F800000003F800000003F000000003F000000007F000000007F0000
00007E000000007E00000000FE00000000FE00000000FC00000000FC00000001FC000000
01FC00000001F800000001F800000003F800000003F800000003F000000003F000000007
F000000007F000000007E000000007E00000000FE00000000FE00000000FC00000000FC0
0000001FC00000001FC00000001F800000001F800000003F800000003F800000003F0000
00003F000000007F000000007F000000007E000000007E00000000FE00000000FE000000
00FC00000001FC000000FFFFF80000FFFFF80000FFFFF0000021337BB21E>73
D<00001FFFFE00003FFFFE00003FFFFC0000003F800000003F800000003F800000003F00
0000003F000000007F000000007E000000007E000000007E00000000FE00000000FC0000
0000FC00000000FC00000001FC00000001F800000001F800000001F800000003F8000000
03F000000003F000000003F000000007F000000007E000000007E000000007E00000000F
E00000000FC00000000FC00000000FC00000001FC00000001F800000001F800000001F80
0000003F800000003F000000003F00001C003F00007E007F0000FE007E0000FE007E0000
FE00FE0000FC00FC0000F801FC0000E001F80000E003F000007007E00000780FC000003C
1F0000001FFC00000007F0000000273579B228>I<0007FFFF000FFFF0000FFFFF000FFF
F0000FFFFF000FFFE000003FC00003FE0000003F800003F80000003F800003E00000003F
000007C00000003F00000F000000007F00001E000000007F00007C000000007E0000F800
0000007E0001E000000000FE0003C000000000FE00078000000000FC001F0000000000FC
003E0000000001FC00780000000001FC00F00000000001F801E00000000001F807C00000
000003F80F800000000003F81FC00000000003F03FC00000000003F07FC00000000007F1
FFE00000000007F3E7E00000000007E787F00000000007EF07F0000000000FFE03F00000
00000FFC03F8000000000FF801F8000000000FE001F8000000001FC001FC000000001FC0
00FC000000001F8000FE000000001F8000FE000000003F80007E000000003F80007F0000
00003F00003F000000003F00003F800000007F00003F800000007F00001F800000007E00
001FC00000007E00000FC0000000FE00000FC0000000FE00000FE0000000FC00000FE000
0001FC00000FF000007FFFF000FFFF8000FFFFF001FFFF8000FFFFF001FFFF00003C337B
B23B>I<0007FFFFC000000FFFFFC000000FFFFFC00000003FC0000000003F8000000000
3F80000000003F00000000003F00000000007F00000000007F00000000007E0000000000
7E0000000000FE0000000000FE0000000000FC0000000000FC0000000001FC0000000001
FC0000000001F80000000001F80000000003F80000000003F80000000003F00000000003
F00000000007F00000000007F00000000007E00000000007E0000000000FE0000000000F
E0000000000FC0000000000FC00000E0001FC00001E0001FC00001C0001F800001C0001F
800003C0003F80000380003F80000780003F00000780003F00000F00007F00000F00007F
00001F00007E00003E00007E00003E0000FE00007C0000FE0001FC0000FC0003FC0001FC
001FF8007FFFFFFFF800FFFFFFFFF800FFFFFFFFF0002B337CB230>I<0007FFC0000000
7FFC000FFFC0000000FFFC000FFFE0000000FFFC00003FE0000001FF0000003FE0000001
FE0000003FE0000003FE0000003BE00000077C0000003BE00000077C0000007BE000000E
FC0000007BE000000EF800000073E000001CF800000073E0000038F8000000F1F0000039
F8000000F1F0000071F0000000E1F0000071F0000000E1F00000E1F0000001E1F00001C3
F0000001E1F00001C3E0000001C1F0000383E0000001C1F0000703E0000003C1F0000707
E0000003C1F0000E07C000000380F8000E07C000000380F8001C07C000000780F800380F
C000000780F800380F8000000700F800700F8000000700F800700F8000000F00F800E01F
8000000F00F801C01F0000000E00F801C01F0000000E00F803801F0000001E007C03803F
0000001E007C07003E0000001C007C0E003E0000001C007C0E003E0000003C007C1C007E
0000003C007C1C007C00000038007C38007C00000038007C70007C00000078007C7000FC
00000078003EE000F800000070003EE000F800000070003FC000F8000000F0003F8001F8
000000F0003F8001F0000001F0003F0001F0000007F8003F0003F000007FFF803E00FFFF
C000FFFF803C01FFFFC000FFFF801C01FFFFC00046337BB245>I<0007FF80003FFFC000
0FFFC0007FFFC0000FFFC0007FFFC000001FC00003F80000003FE00001F00000003FE000
01E00000003FE00001C00000003BF00001C00000007BF00003C00000007BF00003800000
0071F800038000000071F8000380000000F1F8000780000000F0FC000700000000E0FC00
0700000000E0FC000700000001E07E000F00000001E07E000E00000001C07E000E000000
01C03F000E00000003C03F001E00000003C03F801C00000003801F801C00000003801F80
1C00000007801FC03C00000007800FC03800000007000FC03800000007000FE038000000
0F0007E0780000000F0007E0700000000E0007F0700000000E0003F0700000001E0003F0
F00000001E0003F8E00000001C0001F8E00000001C0001F8E00000003C0001FDE0000000
3C0000FDC0000000380000FDC0000000380000FFC00000007800007FC00000007800007F
800000007000003F800000007000003F80000000F000003F80000000F000001F00000001
F000001F00000007F800001F0000007FFF80000F000000FFFF80000E000000FFFF80000E
0000003A337BB239>I<0000001FE000000001FFFC00000007E03F0000001F800FC00000
3E0003E00000F80001F00001F00001F00003E00000F80007C00000FC000F8000007C001F
0000007E003E0000007E007E0000003E00FC0000003F01F80000003F01F80000003F03F0
0000003F07F00000003F07E00000003F0FE00000003F0FC00000003F1FC00000003F1FC0
0000007F1F800000007F3F800000007F3F800000007F3F800000007F7F00000000FE7F00
000000FE7F00000000FE7F00000000FE7F00000001FCFE00000001FCFE00000003F8FE00
000003F8FE00000003F0FE00000007F0FE00000007E0FE0000000FE07E0000000FC07E00
00001F807E0000001F807E0000003F003F0000007E003F000000FC003F000000F8001F80
0001F0000F800003E0000FC00007C00007C0001F800003E0003E000001F800FC0000007E
07F00000003FFF8000000007FC000000303775B43B>I<0007FFFFFE0000000FFFFFFFC0
00000FFFFFFFF00000003F8007F80000003F8001FC0000003F80007E0000003F00007F00
00003F00003F0000007F00003F0000007F00003F8000007E00003F8000007E00003F8000
00FE00003F800000FE00007F000000FC00007F000000FC00007F000001FC0000FE000001
FC0000FC000001F80001FC000001F80001F8000003F80003F0000003F8000FC0000003F0
001F80000003F000FE00000007FFFFF000000007FFFFC000000007E003E000000007E001
F80000000FE000FC0000000FE0007C0000000FC0007E0000000FC0007E0000001FC0007E
0000001FC0007E0000001F80007E0000001F80007E0000003F8000FE0000003F8000FE00
00003F0000FE0000003F0000FE0000007F0001FE0000007F0001FC0000007E0001FC0000
007E0001FC01C000FE0001FC03C000FE0001FC038000FC0001FC038001FC0001FC07807F
FFF000FC0700FFFFF000FE0E00FFFFF0007E1C00000000001FF8000000000007E0003235
7BB238>82 D<000001FC018000000FFF038000003FFFC78000007E07EF800001F801FF00
0003F000FF000003E0007F000007C0007F00000F80003E00001F80003E00001F00003E00
003F00003E00003E00003C00003E00003C00003E00003C00007E00003C00007E00003800
007E00003800007E00000000007F00000000007F00000000003F80000000003FE0000000
003FFE000000001FFFC00000000FFFF800000007FFFC00000001FFFE000000007FFF0000
00000FFF8000000000FF80000000003F80000000001FC0000000000FC0000000000FC000
0000000FC0000000000FC0000E00000FC0000E00000FC0001E00000F80001C00000F8000
1C00000F80001C00001F80003C00001F00003C00001F00003E00003E00003E00007C0000
7E00007C00007F0000F800007F8001F000007FC007E00000F3F80FC00000F0FFFF000000
E03FFC000000C00FF000000029377AB42B>I<03FFFFFFFFFFC007FFFFFFFFFFC007FFFF
FFFFFF8007F800FC003F800FC001FC001F800F8001FC000F800F0001F8000F801E0001F8
0007001E0003F80007001C0003F80007003C0003F0000F003C0003F0000F00380007F000
0E00780007F0000E00700007E0000E00700007E0000E0070000FE0001E00F0000FE0001C
0000000FC000000000000FC000000000001FC000000000001FC000000000001F80000000
00001F8000000000003F8000000000003F8000000000003F0000000000003F0000000000
007F0000000000007F0000000000007E0000000000007E000000000000FE000000000000
FE000000000000FC000000000000FC000000000001FC000000000001FC000000000001F8
000000000001F8000000000003F8000000000003F8000000000003F0000000000003F000
0000000007F0000000000007F0000000000007E000000000000FF0000000001FFFFFF000
00003FFFFFF00000003FFFFFF0000000323374B237>I<0003F000000FF800003E1C6000
7C0FF000F807F001F007F003E007F007E003E00FC003E00FC003E01F8007E01F8007C03F
0007C03F0007C03F000FC07F000F807E000F807E000F807E001F80FE001F00FC001F00FC
001F06FC003F07FC003E0FFC003E0EFC007E0E7C007E1E7C00FE1C7C01FC1C3C03FC3C3E
07BE381F0E1E7807FC0FF001F003C0202278A027>97 D<0000FC000007FF00001F078000
3E03C000FC01C001F803C003F007C007E00FC007C00FC00FC00FC01F8007001F8000003F
0000003F0000003F0000007F0000007E0000007E0000007E000000FE000000FC000000FC
000000FC000000FC0000007C0000C07C0001E07C0001E07C0003C03E000F803E001F001F
007C000F81F00003FFC00000FE00001B2278A023>99 D<0000000FC0000003FFC0000003
FFC0000003FF800000001F800000001F800000001F800000001F000000001F000000003F
000000003F000000003E000000003E000000007E000000007E000000007C000000007C00
000000FC00000000FC000003F0F800000FF8F800003E1DF800007C0FF80000F807F00001
F007F00003E007F00007E003F0000FC003E0000FC003E0001F8007E0001F8007E0003F00
07C0003F0007C0003F000FC0007F000FC0007E000F80007E000F80007E001F8000FE001F
8000FC001F0000FC001F0600FC003F0700FC003F0F00FC003E0E00FC007E0E007C007E1E
007C00FE1C007C01FC1C003C03FC3C003E07BE38001F0E1E780007FC0FF00001F003C000
223578B327>I<0003F800000FFE00003E0F0000F8078001F0038003E0038007C003800F
C003801F8003801F8007803F0007003F000F007E003E007E03F8007FFFE000FFFE0000FC
000000FC000000FC000000FC000000F8000000F8000000F8000000F8000000F8000180F8
0003C0F80003C07C0007807C001F003C003E001E00F8000F03E00007FF800001FC00001A
2277A023>I<0000001F000000007FC0000000F0E0000001F0F0000003E3F0000003E3F0
000007C3F0000007C3E0000007C1C000000FC00000000F800000000F800000000F800000
000F800000001F800000001F000000001F000000001F000000001F000000003F00000000
3E0000001FFFFE00001FFFFE00001FFFFE0000007E000000007C000000007C000000007C
000000007C00000000FC00000000F800000000F800000000F800000000F800000000F800
000001F800000001F000000001F000000001F000000001F000000003F000000003E00000
0003E000000003E000000003E000000007E000000007C000000007C000000007C0000000
0FC00000000FC00000000F800000000F800000000F800000001F800000001F000000001F
000000001F000000003F000000003E000000383E0000007E3C0000007E3C000000FE7800
0000FC78000000F8F000000078E00000003FC00000000F00000000244582B418>I<0000
3F000000FF800003E1E60007C0FF000F807F001F007F003E007F007E003F00FC003E00FC
003E01F8007E01F8007E03F0007C03F0007C03F000FC07F000FC07E000F807E000F807E0
01F807E001F80FC001F00FC001F00FC003F007C003F007C003E007C007E007C00FE007C0
1FE003E03FC001E07FC001F0FFC0007FCFC0001F0F8000000F8000001F8000001F800000
1F0000001F0000003F0000003E0038003E007E007E007E00FC00FE00F800FC01F0007803
E0007C0F80001FFF000007F8000020317CA023>I<000FC0000003FFC0000003FFC00000
03FF800000001F800000001F800000001F800000001F000000001F000000003F00000000
3F000000003E000000003E000000007E000000007E000000007C000000007C00000000FC
00000000FC00000000F83F800000F8FFE00001FBE0F00001FF80F80001FF00780001FE00
7C0003FC007C0003F8007C0003F0007C0003F0007C0007E000FC0007E000F80007C000F8
0007C000F8000FC001F8000FC001F0000F8001F0000F8001F0001F8003F0001F8003E000
1F0007E0001F0007C0C03F0007C1E03F000FC1C03E000F81C03E000F81C07E000F83C07E
000F03807C000F07807C000F0700FC000F0E00FC000F1E00F80007F800700001F0002335
7BB327>I<0001800007E00007E0000FE00007C000038000000000000000000000000000
000000000000000000000000000000000000000001F00003FC000F1E000E1E001C1E003C
1E00381E00783E00703E00703E00707E00F07C0060FC0000F80000F80001F80001F00001
F00003F00003E00003E00007E0C007C1E00FC1C00F81C00F81C00F83C00F03800F07800F
07000F0E000F1E0007F80001F00013337AB118>I<000FC00001FFC00003FFC00003FF80
00001F8000001F8000001F8000001F0000001F0000003F0000003F0000003E0000003E00
00007E0000007E0000007C0000007C000000FC000000FC000000F8007800F801FE01F807
8F01F80E0F01F01C3F01F0383F03F0703F03F0E03E03E1C01C03E3800007E7000007EE00
0007DC000007F800000FF800000FFF00000F9FC0000F83F0001F81F0001F80F8001F00F8
001F00F80C3F00F81E3F00F81C3E00F81C3E00F81C7E00F83C7E00F8387C00F8387C00F8
78FC007870FC0078E0F8003FC070000F8020357BB323>107 D<003F07FF0FFF0FFE007E
007E007E007C007C00FC00FC00F800F801F801F801F001F003F003F003E003E007E007E0
07C007C00FC00FC00F800F801F801F801F001F003F003F003E003E007E007E007C007C18
FC1CFC3CF838F838F878F870F070F0F0F8E079E03FC00F00103579B314>I<03C003F800
7F00000FF00FFE01FFC0001E783C1F07C1E0001C7CF00F8F01F0003C3DE0079E00F00038
3FC007FC00F800387F8007F800F800707F0007F000F800707F0007E000F800707E0007E0
00F800F0FC000FC001F800E0FC000FC001F00060F8000F8001F00000F8000F8001F00001
F8001F8003F00001F8001F8003E00001F0001F0003E00001F0001F0003E00003F0003F00
07E00003F0003F0007C00003E0003E000FC00003E0003E000F818007E0007E000F83C007
E0007E001F838007C0007C001F038007C0007C001F03800FC000FC001F07800FC000FC00
3E07000F8000F8003E0F000F8000F8001E0E001F8001F8001E1C001F8001F8001E3C001F
0001F0000FF0000E0000E00003E0003A227AA03F>I<03C007F0000FF01FFC001E787C1E
001C7CF01F003C3DE00F00383FC00F80387F800F80787F000F80707E000F80707E000F80
F0FC001F80E0FC001F0060F8001F0000F8001F0001F8003F0001F8003E0001F0003E0001
F0003E0003F0007E0003F0007C0003E000FC0003E000F81807E000F83C07E001F83807C0
01F03807C001F0380FC001F0780FC001E0700F8001E0F00F8001E0E01F8001E1C01F8001
E3C01F0000FF000E00003E0026227AA02B>I<0000FC000007FF00001F07C0003E03E000
FC01F001F801F003F000F807E000F807C000F80FC000F81F8000FC1F8000FC3F0000FC3F
0000FC3F0001FC7F0001F87E0001F87E0001F87E0003F8FE0003F0FC0003F0FC0003F0FC
0007E0FC0007E07C000FC07C000F807C001F807C003F003E007E003E00FC001F01F0000F
83E00003FF800000FC00001E2278A027>I<001E007C00007F81FF0000F3C387C000E3EF
03E001E1FE01E001C1FC01F001C3F801F003C3F001F00383F001F80383E001F80787E001
F80707E001F80307C001F80007C001F8000FC003F8000FC003F0000F8003F0000F8003F0
001F8007F0001F8007E0001F0007E0001F0007E0003F000FC0003F000FC0003E001F8000
3E001F80007E003F00007F003E00007F007C00007F00F80000FF81F00000FDC3E00000F8
FF800000F87E000001F800000001F800000001F000000001F000000003F000000003F000
000003E000000003E000000007E000000007E000000007C0000000FFFF000000FFFF0000
00FFFF00000025307FA027>I<03C00FC00FF03FF01E78F0781C7DE03C3C3FC0FC383F80
FC387F00FC787F00F8707E0070707E0000F0FC0000E0FC000060F8000000F8000001F800
0001F8000001F0000001F0000003F0000003F0000003E0000003E0000007E0000007E000
0007C0000007C000000FC000000FC000000F8000000F8000001F8000001F8000001F0000
000E0000001E227AA020>114 D<0003F0001FFC003C1E00780F00F00701E00701E00F03
E01F03C01F03C01F03E00403E00003F00003FF8003FFE001FFF000FFF8007FFC0007FC00
00FE00007E00003E38003EFC003CFC003CFC003CFC007CF00078E000F0F001F07803E03C
0F801FFE0003F80018227AA01F>I<000300000F80000F80000F80001F80001F80001F00
001F00003F00003F00003E00003E00007E00007E00007C007FFFF87FFFF8FFFFF800F800
00F80001F80001F80001F00001F00003F00003F00003E00003E00007E00007E00007C000
07C0000FC0000FC0000F80000F80601F80F01F80E01F00E01F01E01F01C01F03C01E0380
1E07001E0F000F1E0007F80001E00015307AAE19>I<01F000000003FC0007000F1E000F
000E1E001F001C1E001F003C1E001F00381E003F00783E003E00703E003E00703E003E00
707E007E00F07C007C0060FC007C0000F8007C0000F800FC0001F800F80001F000F80001
F000F80001F001F80003F001F00003E001F00003E001F06003E003F07003E003E0F007C0
03E0E007C003E0E003C007E1E003C007E1C003E00FC1C003E01FC3C001E03FE38001F071
E780007FE0FF00001F803C0024227AA029>I<01F00000003803FC000E00FC0F1E001E00
FC0E1E003E00FC1C1E003E00FC3C1E003E00FC381E007E007C783E007C007C703E007C00
3C703E007C003C707E00FC003CF07C00F8003860FC00F8003800F800F8003800F801F800
7801F801F0007001F001F0007001F001F0007001F003F000F003F003F000E003E003E000
E003E003E000E003E003E001E003E003E001C003C003C001C003C007C0038003C007C003
8003E00FE0078003E00FE0070003E01FE00E0001F03DF01E0000F878F83C00003FF03FF0
00000FC00FC0002E227AA033>119 D E /Fy 72 124 df<00003FE00FE00001FFF83FF8
0007E01EF83C001F800FF07E003F001FE0FE007E003FE0FE00FC003FC0FE01F8003FC0FE
01F8003FC03803F0001F800003F0001F800003F0001F800003F0001F800003F0001F8000
03F0001F800003F0001F800003F0001F800003F0001F800003F0001F800003F0001F8000
03F0001F8000FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC003F0001F800003F0001F8000
03F0001F800003F0001F800003F0001F800003F0001F800003F0001F800003F0001F8000
03F0001F800003F0001F800003F0001F800003F0001F800003F0001F800003F0001F8000
03F0001F800003F0001F800003F0001F800003F0001F800003F0001F800003F0001F8000
03F0001F800003F0001F800003F0001F800003F0001F800003F0001F800007F8003FC000
FFFF83FFFF00FFFF83FFFF00FFFF83FFFF002F357FB42D>11 D<00001FE0000000FFFC00
0003F01E00000FC00780001F800780003F000FC0007E001FC000FC001FC000FC001FC001
F8001FC001F8000F8001F800000001F800000001F800000001F800000001F800000001F8
00000001F800000001F800000001F800000001F8000FC0FFFFFFFFC0FFFFFFFFC0FFFFFF
FFC001F8001FC001F8000FC001F8000FC001F8000FC001F8000FC001F8000FC001F8000F
C001F8000FC001F8000FC001F8000FC001F8000FC001F8000FC001F8000FC001F8000FC0
01F8000FC001F8000FC001F8000FC001F8000FC001F8000FC001F8000FC001F8000FC001
F8000FC001F8000FC001F8000FC001F8000FC003FC001FE07FFFC1FFFF7FFFC1FFFF7FFF
C1FFFF28357FB42B>I<00001FF8000000FFFFC00003F00FC0000FC01FC0001F801FC000
3F001FC0007E001FC000FC001FC000FC000FC001F8000FC001F8000FC001F8000FC001F8
000FC001F8000FC001F8000FC001F8000FC001F8000FC001F8000FC001F8000FC001F800
0FC001F8000FC0FFFFFFFFC0FFFFFFFFC0FFFFFFFFC001F8000FC001F8000FC001F8000F
C001F8000FC001F8000FC001F8000FC001F8000FC001F8000FC001F8000FC001F8000FC0
01F8000FC001F8000FC001F8000FC001F8000FC001F8000FC001F8000FC001F8000FC001
F8000FC001F8000FC001F8000FC001F8000FC001F8000FC001F8000FC001F8000FC001F8
000FC003FC001FE07FFFE3FFFF7FFFE3FFFF7FFFE3FFFF28357FB42B>I<00001FE000FF
00000000FFFC07FFE0000003F01E1F80F000000FC0077E003C00001F8007FC003C00003F
001FF8007E00007E001FF000FE0000FC001FE000FE0000FC001FE000FE0001F8001FC000
FE0001F8000FC0007C0001F8000FC000000001F8000FC000000001F8000FC000000001F8
000FC000000001F8000FC000000001F8000FC000000001F8000FC000000001F8000FC000
000001F8000FC000000001F8000FC0007E00FFFFFFFFFFFFFE00FFFFFFFFFFFFFE00FFFF
FFFFFFFFFE0001F8000FC000FE0001F8000FC0007E0001F8000FC0007E0001F8000FC000
7E0001F8000FC0007E0001F8000FC0007E0001F8000FC0007E0001F8000FC0007E0001F8
000FC0007E0001F8000FC0007E0001F8000FC0007E0001F8000FC0007E0001F8000FC000
7E0001F8000FC0007E0001F8000FC0007E0001F8000FC0007E0001F8000FC0007E0001F8
000FC0007E0001F8000FC0007E0001F8000FC0007E0001F8000FC0007E0001F8000FC000
7E0001F8000FC0007E0001F8000FC0007E0001F8000FC0007E0003FC001FE000FF007FFF
C1FFFE0FFFF87FFFC1FFFE0FFFF87FFFC1FFFE0FFFF83D357FB440>I<0000C00001C000
0380000F00000E00001C00003C0000780000F00000F00001E00003C00003C00007C00007
80000F80000F00001F00001F00001E00003E00003E00003E00003C00007C00007C00007C
00007C00007C0000F80000F80000F80000F80000F80000F80000F80000F80000F80000F8
0000F80000F80000F80000F80000F80000F800007C00007C00007C00007C00007C00003C
00003E00003E00003E00001E00001F00001F00000F00000F800007800007C00003C00003
C00001E00000F00000F000007800003C00001C00000E00000F000003800001C00000C012
4A79B71E>40 D<C00000E000007000003C00001C00000E00000F000007800003C00003C0
0001E00000F00000F00000F800007800007C00003C00003E00003E00001E00001F00001F
00001F00000F00000F80000F80000F80000F80000F800007C00007C00007C00007C00007
C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C0000F
80000F80000F80000F80000F80000F00001F00001F00001F00001E00003E00003E00003C
00007C0000780000F80000F00000F00001E00003C00003C0000780000F00000E00001C00
003C0000700000E00000C00000124A7CB71E>I<00000060000000000000F00000000000
00F0000000000000F0000000000000F0000000000000F0000000000000F0000000000000
F0000000000000F0000000000000F0000000000000F0000000000000F0000000000000F0
000000000000F0000000000000F0000000000000F0000000000000F0000000000000F000
0000000000F0000000000000F0000000000000F0000000000000F0000000000000F00000
007FFFFFFFFFFFC0FFFFFFFFFFFFE0FFFFFFFFFFFFE07FFFFFFFFFFFC0000000F0000000
000000F0000000000000F0000000000000F0000000000000F0000000000000F000000000
0000F0000000000000F0000000000000F0000000000000F0000000000000F00000000000
00F0000000000000F0000000000000F0000000000000F0000000000000F0000000000000
F0000000000000F0000000000000F0000000000000F0000000000000F0000000000000F0
0000000000006000000033327CAB3C>43 D<3C007E00FF00FF00FF80FF807F803D800180
018001800180038003000300070006000E000C001C0038007000600009177A8715>I<FF
FFF0FFFFF0FFFFF0FFFFF0FFFFF014057F921A>I<3C7EFFFFFFFF7E3C08087A8715>I<00
00003000000078000000F8000000F8000000F0000001F0000001F0000001E0000003E000
0003E0000003C0000007C0000007C00000078000000F8000000F8000000F0000001F0000
001F0000003E0000003E0000003C0000007C0000007C00000078000000F8000000F80000
00F0000001F0000001F0000001E0000003E0000003E0000003C0000007C0000007C00000
0F8000000F8000000F0000001F0000001F0000001E0000003E0000003E0000003C000000
7C0000007C00000078000000F8000000F8000000F0000001F0000001F0000001E0000003
E0000003E0000007C0000007C00000078000000F8000000F8000000F0000001F0000001F
0000001E0000003E0000003E0000003C0000007C0000007C00000078000000F8000000F8
000000F0000000600000001D4B7CB726>I<000FE000007FFC0000F83E0003E00F8007C0
07C0078003C00F8003E01F0001F01F0001F03F0001F83F0001F83E0000F87E0000FC7E00
00FC7E0000FC7E0000FC7E0000FCFE0000FEFE0000FEFE0000FEFE0000FEFE0000FEFE00
00FEFE0000FEFE0000FEFE0000FEFE0000FEFE0000FEFE0000FEFE0000FEFE0000FEFE00
00FEFE0000FEFE0000FEFE0000FE7E0000FC7E0000FC7E0000FC7E0000FC7E0000FC3F00
01F83F0001F83F0001F81F0001F01F0001F00F8003E007C007C007C007C003E00F8000F8
3E00007FFC00000FE0001F347DB126>I<00070000000F0000001F0000007F000007FF00
00FFFF0000FFBF0000F83F0000003F0000003F0000003F0000003F0000003F0000003F00
00003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F00
00003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F00
00003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F00
00003F0000003F0000003F0000003F0000003F0000007F80007FFFFF807FFFFF807FFFFF
8019327AB126>I<003FC00000FFF00003FFFC000F80FF001E007F801C003FC038001FE0
70000FE070000FF0600007F0FC0007F0FE0007F8FF0007F8FF0003F8FF0003F8FF0003F8
7E0007F83C0007F8000007F8000007F0000007F000000FF000000FE000001FC000001FC0
00003F8000003F0000007E000000FC000001F8000001F0000003E0000007C000000F8000
001F0000003E0000003C00000078001800F0001801E0001803C00030078000300F000030
1C0000701FFFFFF03FFFFFF07FFFFFF0FFFFFFE0FFFFFFE0FFFFFFE01D327CB126>I<00
1FE00000FFFC0001FFFF0007E03F800F001FC01E000FE01C0007F03F0007F03F8007F83F
8003F83FC003F83F8003F83F8003F81F0007F8000007F8000007F0000007F000000FE000
000FC000001FC000003F8000007E000001F800007FE000007FFC0000003F0000001FC000
000FE0000007F0000007F8000003F8000003FC000001FC000001FE000001FE000001FE7E
0001FEFF0001FEFF0001FEFF0001FEFF0001FEFF0001FCFE0003FC780003FC700007F838
0007F03C000FF01F001FE00FE03F8003FFFF0000FFFC00001FE0001F347DB126>I<0000
01C000000001C000000003C000000007C000000007C00000000FC00000001FC00000001F
C00000003FC00000007FC00000006FC0000000CFC0000001CFC00000038FC00000030FC0
0000070FC000000E0FC000000C0FC000001C0FC00000380FC00000300FC00000700FC000
00E00FC00000C00FC00001800FC00003800FC00003000FC00006000FC0000E000FC0000C
000FC00018000FC00038000FC00030000FC00060000FC000E0000FC000FFFFFFFF80FFFF
FFFF80FFFFFFFF8000000FC00000000FC00000000FC00000000FC00000000FC00000000F
C00000000FC00000000FC00000000FC00000001FE0000007FFFF800007FFFF800007FFFF
8021337EB226>I<0C0000C00FC00FC00FFFFF800FFFFF000FFFFE000FFFFC000FFFF000
0FFFC0000C1800000C0000000C0000000C0000000C0000000C0000000C0000000C000000
0C0000000C0000000C0FC0000C7FF8000CF07C000FC03F000F001F800F000FC00E000FC0
0C0007E00C0007E0000007F0000003F0000003F0000003F8000003F8000003F8000003F8
180003F87E0003F8FE0003F8FE0003F8FE0003F8FE0003F0FE0007F0F80007F0600007E0
700007E070000FC038001FC03C001F801E007F000F80FE0007FFF80001FFE000003F8000
1D347CB126>I<0000FE000007FF80001FFFE0003F00F0007C007001F801F801F003F803
E003F807E003F80FC003F80FC001F01F8000001F8000003F0000003F0000003F0000007F
0000007E0000007E07F0007E1FFC00FE381F00FE700F80FEE007C0FFC003E0FF8003F0FF
8001F8FF0001F8FF0001FCFF0000FCFF0000FCFE0000FEFE0000FEFE0000FEFE0000FEFE
0000FE7E0000FE7E0000FE7E0000FE7E0000FE7F0000FE3F0000FC3F0000FC1F0001FC1F
8001F80F8001F00FC003F007C007E003E00FC001F81F8000FFFF00003FFC00000FE0001F
347DB126>I<300000003C0000003FFFFFFF3FFFFFFF3FFFFFFF7FFFFFFE7FFFFFFE7FFF
FFFC700000386000003060000070600000E0C00000C0C00001C0C0000380000007000000
060000000E0000001C00000018000000380000007000000070000000E0000000E0000001
C0000003C0000003C0000003C0000007800000078000000F8000000F8000000F8000001F
8000001F0000001F0000003F0000003F0000003F0000003F0000003F0000007F0000007F
0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000001C00002034
7CB126>I<000FE000007FFC0000FFFF0003F01F8007C007C00F0003E00E0001F01E0000
F01C0000F83C0000783C0000783C0000783E0000783E0000783F0000F83F8000F03FC001
F01FF001E01FF803C00FFE078007FF0F0003FFDE0001FFF80000FFF800003FFE00003FFF
0000F7FFC003E3FFE00780FFF00F007FF81E001FF83E0007FC3C0003FC780001FC780000
7EF800007EF000003EF000003EF000001EF000001EF000001EF800001EF800003C780000
3C7C0000783E0000781F0000F00F8003E007F01FC001FFFF00007FFC00001FE0001F347D
B126>I<000FE000007FF80000FFFE0003F83F0007E00F800FC007C01F8007E01F8003F0
3F0003F07F0001F87E0001F87E0001F8FE0001FCFE0000FCFE0000FCFE0000FCFE0000FC
FE0000FEFE0000FEFE0000FEFE0000FEFE0000FE7E0001FE7E0001FE7F0001FE3F0001FE
3F0003FE1F8003FE0F8007FE07C00EFE03E01CFE01F038FE007FF0FE001FC0FC000000FC
000001FC000001FC000001F8000001F8000001F0000003F01F0003E03F8007E03F8007C0
3F800FC03F801F803F003F001C007E001F01FC000FFFF00003FFC00000FF00001F347DB1
26>I<3C7EFFFFFFFF7E3C000000000000000000000000000000003C7EFFFFFFFF7E3C08
207A9F15>I<7FFFFFFFFFFFC0FFFFFFFFFFFFE0FFFFFFFFFFFFE07FFFFFFFFFFFC00000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000007FFFFFFFFFFFC0FFFFFFFFFFFFE0FFFFFFFFFFFFE07FFFFFFFFF
FFC033147C9C3C>61 D<000000E0000000000000E0000000000000E0000000000001F000
0000000001F0000000000003F8000000000003F8000000000003F8000000000007FC0000
00000007FC000000000007FC00000000000DFE00000000000CFE00000000000CFE000000
0000187F0000000000187F0000000000187F0000000000303F8000000000303F80000000
00703FC000000000601FC000000000601FC000000000E01FE000000000C00FE000000000
C00FE000000001800FF0000000018007F0000000018007F0000000030003F80000000300
03F8000000030003F8000000060001FC000000060001FC0000000E0001FE0000000FFFFF
FE0000000FFFFFFE0000001FFFFFFF0000001800007F0000001800007F0000003000007F
8000003000003F8000003000003F8000006000001FC000006000001FC000006000001FC0
0000C000000FE00000C000000FE00001C000000FF00001C0000007F00003E0000007F000
1FF000000FF800FFFE0001FFFFE0FFFE0001FFFFE0FFFE0001FFFFE033367DB53A>65
D<FFFFFFFF0000FFFFFFFFE000FFFFFFFFF80003FC0003FE0001FC0000FF0001FC00007F
8001FC00003FC001FC00001FC001FC00001FE001FC00000FE001FC00000FF001FC00000F
F001FC00000FF001FC00000FF001FC00000FF001FC00000FF001FC00000FE001FC00001F
E001FC00001FC001FC00003F8001FC00007F0001FC0000FE0001FC0003FC0001FFFFFFF0
0001FFFFFFE00001FC0007FC0001FC0000FE0001FC00003F8001FC00001FC001FC00000F
E001FC00000FF001FC000007F001FC000007F801FC000003F801FC000003FC01FC000003
FC01FC000003FC01FC000003FC01FC000003FC01FC000003FC01FC000003F801FC000007
F801FC000007F801FC00000FF001FC00001FE001FC00003FE001FC00007FC003FC0003FF
00FFFFFFFFFE00FFFFFFFFF800FFFFFFFFC0002E337DB236>I<000003FE000C00003FFF
801C0000FFFFE01C0003FE01F83C000FF0003C7C001FC0000EFC007F800007FC00FE0000
03FC01FC000001FC03FC000000FC03F8000000FC07F00000007C0FE00000007C0FE00000
003C1FC00000003C1FC00000001C3FC00000001C3F800000001C7F800000000C7F800000
000C7F800000000C7F000000000CFF0000000000FF0000000000FF0000000000FF000000
0000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF000000
0000FF00000000007F00000000007F800000000C7F800000000C7F800000000C3F800000
000C3FC00000000C1FC00000001C1FC0000000180FE0000000180FE00000003807F00000
003003F80000007003FC000000E001FC000000E000FE000001C0007F80000380001FC000
0F00000FF0001E000003FE00FC000000FFFFF00000003FFFC000000003FE00002E377CB4
37>I<FFFFFFFF800000FFFFFFFFF00000FFFFFFFFFE000001FE0001FF000000FE00003F
C00000FE00000FE00000FE000007F00000FE000003F80000FE000001FC0000FE000000FE
0000FE0000007E0000FE0000007F0000FE0000003F8000FE0000003F8000FE0000001FC0
00FE0000001FC000FE0000001FC000FE0000000FE000FE0000000FE000FE0000000FE000
FE0000000FE000FE0000000FF000FE0000000FF000FE0000000FF000FE0000000FF000FE
0000000FF000FE0000000FF000FE0000000FF000FE0000000FF000FE0000000FF000FE00
00000FF000FE0000000FE000FE0000000FE000FE0000000FE000FE0000001FE000FE0000
001FC000FE0000001FC000FE0000001F8000FE0000003F8000FE0000003F0000FE000000
7F0000FE000000FE0000FE000000FC0000FE000001F80000FE000007F00000FE00000FE0
0000FE00003FC00001FE0001FF8000FFFFFFFFFE0000FFFFFFFFF80000FFFFFFFF800000
34337EB23B>I<FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC003FC00007FC001FC00000F
C001FC000003E001FC000001E001FC000001E001FC000000E001FC000000E001FC000000
6001FC0000006001FC0000006001FC0000006001FC0006003001FC0006003001FC000600
3001FC0006003001FC0006000001FC000E000001FC000E000001FC001E000001FC007E00
0001FFFFFE000001FFFFFE000001FFFFFE000001FC007E000001FC001E000001FC000E00
0001FC000E000001FC0006000001FC0006000C01FC0006000C01FC0006000C01FC000600
1801FC0000001801FC0000001801FC0000001801FC0000001801FC0000003801FC000000
3801FC0000007001FC0000007001FC000000F001FC000001F001FC000003F001FC000007
F003FC00007FF0FFFFFFFFFFE0FFFFFFFFFFE0FFFFFFFFFFE02E337DB234>I<FFFFFFFF
FF80FFFFFFFFFF80FFFFFFFFFF8003FC0000FF8001FC00001F8001FC000007C001FC0000
03C001FC000003C001FC000001C001FC000001C001FC000000C001FC000000C001FC0000
00C001FC000000C001FC0000006001FC000C006001FC000C006001FC000C006001FC000C
000001FC000C000001FC001C000001FC001C000001FC003C000001FC00FC000001FFFFFC
000001FFFFFC000001FFFFFC000001FC00FC000001FC003C000001FC001C000001FC001C
000001FC000C000001FC000C000001FC000C000001FC000C000001FC000C000001FC0000
000001FC0000000001FC0000000001FC0000000001FC0000000001FC0000000001FC0000
000001FC0000000001FC0000000001FC0000000001FC0000000003FE00000000FFFFFE00
0000FFFFFE000000FFFFFE0000002B337DB232>I<000003FE000C0000003FFF801C0000
00FFFFE01C000003FE01F83C00000FF0003C7C00001FC0000EFC00007F800007FC0000FE
000003FC0001FC000001FC0003FC000000FC0003F8000000FC0007F00000007C000FE000
00007C000FE00000003C001FC00000003C001FC00000001C003FC00000001C003F800000
001C007F800000000C007F800000000C007F800000000C007F000000000C00FF00000000
0000FF000000000000FF000000000000FF000000000000FF000000000000FF0000000000
00FF000000000000FF000000000000FF000000000000FF000000000000FF000003FFFFE0
7F000003FFFFE07F800003FFFFE07F80000003FE007F80000001FC003F80000001FC003F
C0000001FC001FC0000001FC001FC0000001FC000FE0000001FC000FF0000001FC0007F0
000001FC0003F8000001FC0003FC000001FC0001FE000003FC0000FF000003FC00007F80
0007FC00001FC0000E7C00000FF0001C3C000003FE00F81C000000FFFFF00C0000003FFF
C00000000003FE00000033377CB43C>I<FFFFFE03FFFFF8FFFFFE03FFFFF8FFFFFE03FF
FFF801FF000007FC0000FE000003F80000FE000003F80000FE000003F80000FE000003F8
0000FE000003F80000FE000003F80000FE000003F80000FE000003F80000FE000003F800
00FE000003F80000FE000003F80000FE000003F80000FE000003F80000FE000003F80000
FE000003F80000FE000003F80000FE000003F80000FE000003F80000FE000003F80000FF
FFFFFFF80000FFFFFFFFF80000FFFFFFFFF80000FE000003F80000FE000003F80000FE00
0003F80000FE000003F80000FE000003F80000FE000003F80000FE000003F80000FE0000
03F80000FE000003F80000FE000003F80000FE000003F80000FE000003F80000FE000003
F80000FE000003F80000FE000003F80000FE000003F80000FE000003F80000FE000003F8
0000FE000003F80000FE000003F80000FE000003F80001FF000007FC00FFFFFE03FFFFF8
FFFFFE03FFFFF8FFFFFE03FFFFF835337EB23A>I<FFFFFEFFFFFEFFFFFE01FF0000FE00
00FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE00
00FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE00
00FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE00
00FE0000FE0000FE0000FE0000FE0000FE0001FF00FFFFFEFFFFFEFFFFFE17337EB21C>
I<007FFFFF007FFFFF007FFFFF00003FE000001FC000001FC000001FC000001FC000001F
C000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001F
C000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001F
C000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001F
C000001FC000001FC000001FC07E001FC0FF001FC0FF001FC0FF001FC0FF001FC0FF003F
80FE003F8060003F0070007F003800FE001C01FC000F03F00003FFC00000FF000020357D
B227>I<FFFFFE000000FFFFFE000000FFFFFE00000003FE0000000001FC0000000001FC
0000000001FC0000000001FC0000000001FC0000000001FC0000000001FC0000000001FC
0000000001FC0000000001FC0000000001FC0000000001FC0000000001FC0000000001FC
0000000001FC0000000001FC0000000001FC0000000001FC0000000001FC0000000001FC
0000000001FC0000000001FC0000000001FC0000000001FC0000000001FC0000000001FC
0000000001FC0000000001FC0000018001FC0000018001FC0000018001FC0000018001FC
0000038001FC0000030001FC0000030001FC0000030001FC0000030001FC0000070001FC
0000070001FC00000F0001FC00001F0001FC00003F0001FC00007F0001FC0000FE0003FC
0007FE00FFFFFFFFFE00FFFFFFFFFE00FFFFFFFFFE0029337DB230>76
D<FFFC00000001FFF8FFFE00000003FFF8FFFE00000003FFF803FE00000003FE0001BF00
000006FC0001BF00000006FC0001BF00000006FC00019F8000000CFC00019F8000000CFC
00018FC0000018FC00018FC0000018FC00018FC0000018FC000187E0000030FC000187E0
000030FC000183F0000060FC000183F0000060FC000183F0000060FC000181F80000C0FC
000181F80000C0FC000181F80000C0FC000180FC000180FC000180FC000180FC0001807E
000300FC0001807E000300FC0001807E000300FC0001803F000600FC0001803F000600FC
0001801F800C00FC0001801F800C00FC0001801F800C00FC0001800FC01800FC0001800F
C01800FC0001800FC01800FC00018007E03000FC00018007E03000FC00018003F06000FC
00018003F06000FC00018003F06000FC00018001F8C000FC00018001F8C000FC00018001
F8C000FC00018000FD8000FC00018000FD8000FC000180007F0000FC000180007F0000FC
000180007F0000FC0003C0003E0000FC000FF0003E0001FE00FFFF001C007FFFF8FFFF00
1C007FFFF8FFFF001C007FFFF83D337CB246>I<FFFE00001FFFF8FFFF00001FFFF8FFFF
80001FFFF800FF800000FF0000FFC000003C0000DFE00000180000CFF00000180000CFF0
0000180000C7F80000180000C3FC0000180000C3FC0000180000C1FE0000180000C0FF00
00180000C07F8000180000C07F8000180000C03FC000180000C01FE000180000C01FE000
180000C00FF000180000C007F800180000C003FC00180000C003FC00180000C001FE0018
0000C000FF00180000C000FF00180000C0007F80180000C0003FC0180000C0001FE01800
00C0001FE0180000C0000FF0180000C00007F8180000C00007F8180000C00003FC180000
C00001FE180000C00000FF180000C00000FF180000C000007F980000C000003FD80000C0
00003FD80000C000001FF80000C000000FF80000C0000007F80000C0000007F80000C000
0003F80000C0000001F80000C0000001F80001E0000000F80007F80000007800FFFFC000
003800FFFFC000003800FFFFC00000180035337EB23A>I<000007FC00000000007FFFC0
00000001FC07F000000007E000FC0000000F80003E0000003F00001F8000007E00000FC0
0000FC000007E00001F8000003F00003F0000001F80003F0000001F80007E0000000FC00
0FE0000000FE000FC00000007E001FC00000007F001FC00000007F003F800000003F803F
800000003F807F800000003FC07F800000003FC07F000000001FC07F000000001FC0FF00
0000001FE0FF000000001FE0FF000000001FE0FF000000001FE0FF000000001FE0FF0000
00001FE0FF000000001FE0FF000000001FE0FF000000001FE0FF000000001FE0FF000000
001FE07F000000001FC07F800000003FC07F800000003FC07F800000003FC03F80000000
3F803FC00000007F803FC00000007F801FC00000007F001FE0000000FF000FE0000000FE
0007F0000001FC0007F0000001FC0003F8000003F80001F8000003F00000FC000007E000
007E00000FC000003F00001F8000001FC0007F00000007E000FC00000001FC07F0000000
007FFFC00000000007FC00000033377CB43C>I<FFFFFFFE0000FFFFFFFFC000FFFFFFFF
F00003FC0007FC0001FC0000FE0001FC00007F0001FC00003F8001FC00001FC001FC0000
1FE001FC00000FE001FC00000FE001FC00000FF001FC00000FF001FC00000FF001FC0000
0FF001FC00000FF001FC00000FF001FC00000FE001FC00000FE001FC00001FC001FC0000
1FC001FC00003F8001FC00007F0001FC0000FE0001FC0007F80001FFFFFFF00001FFFFFF
800001FC0000000001FC0000000001FC0000000001FC0000000001FC0000000001FC0000
000001FC0000000001FC0000000001FC0000000001FC0000000001FC0000000001FC0000
000001FC0000000001FC0000000001FC0000000001FC0000000001FC0000000001FC0000
000001FC0000000001FC0000000003FE00000000FFFFF8000000FFFFF8000000FFFFF800
00002C337DB234>I<FFFFFFFC000000FFFFFFFF800000FFFFFFFFF0000001FE0007FC00
0000FE0001FE000000FE00007F000000FE00003F800000FE00001FC00000FE00001FE000
00FE00000FE00000FE00000FF00000FE00000FF00000FE00000FF00000FE00000FF00000
FE00000FF00000FE00000FF00000FE00000FE00000FE00000FE00000FE00001FC00000FE
00001FC00000FE00003F800000FE00007E000000FE0001FC000000FE000FF0000000FFFF
FFC0000000FFFFFF00000000FE001FC0000000FE0007F0000000FE0003F8000000FE0001
FC000000FE0000FC000000FE0000FE000000FE00007E000000FE00007F000000FE00007F
000000FE00007F000000FE00007F000000FE00007F000000FE00007F800000FE00007F80
0000FE00007F800000FE00007F800000FE00007F800000FE00007F800C00FE00007FC00C
00FE00007FC00C00FE00003FC01C01FF00003FC018FFFFFE001FE018FFFFFE000FE038FF
FFFE0007F0700000000001FFE000000000003F8036357EB239>82
D<001FE00300007FFC070001FFFF070007F01FCF000F8003FF001F0000FF003E00007F00
3E00003F007C00001F007C00001F007800000F00F800000700F800000700F800000700F8
00000700FC00000300FC00000300FE00000300FE000000007F000000007FC00000003FF0
0000003FFF0000001FFFF000000FFFFF000007FFFFC00003FFFFF00000FFFFF800003FFF
FC000003FFFE0000003FFF00000003FF00000000FF800000007F800000003F800000001F
C00000000FC0C000000FC0C000000FC0C0000007C0C0000007C0C0000007C0E0000007C0
E0000007C0F000000F80F000000F80F800000F00FC00001F00FE00003E00FF00007E00FF
C000FC00F1FC03F800E0FFFFE000E01FFF8000C003FE000022377CB42B>I<7FFFFFFFFF
FE7FFFFFFFFFFE7FFFFFFFFFFE7F8007F001FE7C0007F0003E780007F0001E700007F000
0E700007F0000E600007F00006E00007F00007E00007F00007E00007F00007C00007F000
03C00007F00003C00007F00003C00007F00003C00007F00003C00007F00003000007F000
00000007F00000000007F00000000007F00000000007F00000000007F00000000007F000
00000007F00000000007F00000000007F00000000007F00000000007F00000000007F000
00000007F00000000007F00000000007F00000000007F00000000007F00000000007F000
00000007F00000000007F00000000007F00000000007F00000000007F00000000007F000
00000007F00000000007F00000000007F00000000007F0000000000FF80000001FFFFFFC
00001FFFFFFC00001FFFFFFC0030337DB237>I<FFFFF00003FFF8FFFFF00003FFF8FFFF
F00003FFF807FE0000007FC003FC0000001F0001FC0000001E0001FE0000001C0000FE00
0000180000FE000000180000FF0000003800007F0000003000007F0000003000003F8000
006000003F8000006000003FC00000E000001FC00000C000001FC00000C000000FE00001
8000000FE000018000000FF0000180000007F0000300000007F0000300000003F8000600
000003F8000600000003FC000600000001FC000C00000001FC000C00000001FE001C0000
0000FE001800000000FF0018000000007F0030000000007F0030000000007F8070000000
003F8060000000003F8060000000001FC0C0000000001FC0C0000000001FE1C000000000
0FE180000000000FE1800000000007F3000000000007F3000000000007FB000000000003
FE000000000003FE000000000003FE000000000001FC000000000001FC000000000000F8
000000000000F8000000000000F8000000000000700000000000007000000035357EB23A
>86 D<FFFFF007FFFF800FFFF0FFFFF007FFFF800FFFF0FFFFF007FFFF800FFFF003FF00
003FF00001FF0001FC00001FE000007C0001FC00001FE00000380001FE00000FE0000038
0000FE00000FE00000300000FE00000FF00000300000FF000007F000007000007F000007
F000006000007F000007F000006000007F80000FF80000E000003F80000FF80000C00000
3F80000FF80000C000003FC00019FC0001C000001FC00019FC00018000001FC00019FC00
018000001FE00030FE00038000000FE00030FE00030000000FE00030FE00030000000FF0
00607F000700000007F000607F000600000007F000607F000600000007F800C03F800E00
000003F800C03F800C00000003F800C03F800C00000003FC01801FC01C00000001FC0180
1FC01800000001FC01801FC01800000001FE03000FE03800000000FE03000FE030000000
00FE03000FE03000000000FF060007F030000000007F060007F060000000007F060007F0
60000000007F8C0003F860000000003F8C0003F8C0000000003F8C0003F8C0000000003F
D80001FCC0000000001FD80001FD80000000001FD80001FD80000000001FF00000FF8000
0000000FF00000FF00000000000FF00000FF00000000000FE000007F000000000007E000
007E000000000007E000007E000000000007C000003E000000000003C000003C00000000
0003C000003C0000000000038000001C000000000001800000180000004C357FB24F>I<
FFF0FFF0FFF0FFF0F000F000F000F000F000F000F000F000F000F000F000F000F000F000
F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000
F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000
F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000FFF0
FFF0FFF0FFF00C4B79B715>91 D<FFF0FFF0FFF0FFF000F000F000F000F000F000F000F0
00F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F0
00F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F0
00F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F0
00F000F000F000F000F000F0FFF0FFF0FFF0FFF00C4B7FB715>93
D<007F80000003FFF000000F80FC00001C003E00003F003F00003F801F80003F800FC000
3F800FC0003F8007E0001F0007E000000007E000000007E000000007E000000007E00000
01FFE000001FFFE00000FF87E00003FC07E0000FF007E0001FC007E0003F8007E0007F80
07E0007F0007E000FF0007E0C0FE0007E0C0FE0007E0C0FE0007E0C0FE000FE0C0FE000F
E0C0FF001FE0C07F003BE0C03F8071F1801FC1E1FF8007FFC0FF0000FE003C0022237DA1
26>97 D<03F0000000FFF0000000FFF0000000FFF000000007F000000003F000000003F0
00000003F000000003F000000003F000000003F000000003F000000003F000000003F000
000003F000000003F000000003F000000003F000000003F000000003F03F800003F0FFE0
0003F3C0F80003F7007E0003FE003F0003FC001F8003F8000FC003F0000FC003F00007E0
03F00007F003F00007F003F00003F003F00003F803F00003F803F00003F803F00003F803
F00003F803F00003F803F00003F803F00003F803F00003F803F00003F803F00003F003F0
0007F003F00007E003F00007E003F0000FC003F8000FC003FC001F8003EC003F0003CF00
7C00038381F8000301FFE00000007F000025357EB32B>I<0007F800003FFF0000FC07C0
01F000E003E003F007C007F00FC007F01F8007F03F8007F03F0003E07F0000007F000000
7E000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000
FE000000FE0000007F0000007F0000003F0000183F8000181F8000381FC000300FC00070
07E000E003F001C000FC0F80003FFE000007F0001D237EA122>I<0000003F0000000FFF
0000000FFF0000000FFF000000007F000000003F000000003F000000003F000000003F00
0000003F000000003F000000003F000000003F000000003F000000003F000000003F0000
00003F000000003F000000003F000007F03F00003FFC3F0000FC0F3F0001F003BF0007E0
01FF000FC000FF001F80007F001F80003F003F00003F003F00003F007F00003F007E0000
3F00FE00003F00FE00003F00FE00003F00FE00003F00FE00003F00FE00003F00FE00003F
00FE00003F00FE00003F00FE00003F007E00003F007F00003F007F00003F003F00003F00
1F80007F001F80007F000FC000FF0007E001FF8003F007BFFC00F81E3FFC003FFC3FFC00
0FE03F0026357DB32B>I<000FE000007FFC0000F83F0003F00F8007E00FC00FC007E01F
8003E01F8003F03F0003F03F0001F07F0001F87E0001F87E0001F8FE0001F8FE0001F8FF
FFFFF8FFFFFFF8FE000000FE000000FE000000FE000000FE0000007E0000007F0000007F
0000003F0000183F0000181F8000380F8000300FC0007007E000E001F003C000FC0F0000
3FFE000007F0001D237EA122>I<0001FC000007FF00001F0780003E0FC0007C1FC000FC
1FC001F81FC001F81FC003F8070003F0000003F0000003F0000003F0000003F0000003F0
000003F0000003F0000003F0000003F0000003F0000003F00000FFFFF000FFFFF000FFFF
F00003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F0
000003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F0
000003F0000003F0000003F0000003F0000003F0000003F0000003F0000007F800007FFF
E0007FFFE0007FFFE0001A357FB417>I<0000001F00001FC07F8000FFF8E3C001F07FC7
C007E03F03C00FC01F83800F800F80001F800FC0001F0007C0003F0007E0003F0007E000
3F0007E0003F0007E0003F0007E0003F0007E0001F0007C0001F800FC0000F800F80000F
C01F800007E03F000007F07C00000EFFF800000C1FC000001C000000001C000000001C00
0000001E000000001E000000001F000000000FFFFE00000FFFFFC00007FFFFF00003FFFF
FC0007FFFFFE001F0001FE003E00007F007C00003F007C00001F80F800000F80F800000F
80F800000F80F800000F80F800000F80FC00001F807C00001F003E00003E001F00007C00
0FC001F80003F007E00000FFFF8000001FFC000022337EA126>I<03F0000000FFF00000
00FFF0000000FFF000000007F000000003F000000003F000000003F000000003F0000000
03F000000003F000000003F000000003F000000003F000000003F000000003F000000003
F000000003F000000003F000000003F01FC00003F07FF00003F1E0FC0003F3807C0003F7
007E0003FE007E0003FC003F0003FC003F0003F8003F0003F8003F0003F0003F0003F000
3F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F
0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F00
03F0003F0003F0003F0003F0003F0007F8007F80FFFFC7FFFCFFFFC7FFFCFFFFC7FFFC26
347EB32B>I<07800FC01FE01FE01FE01FE00FC007800000000000000000000000000000
00000000000007E0FFE0FFE0FFE00FE007E007E007E007E007E007E007E007E007E007E0
07E007E007E007E007E007E007E007E007E007E007E007E007E007E00FF0FFFFFFFFFFFF
10337EB215>I<0003C00007E0000FF0000FF0000FF0000FF00007E00003C00000000000
000000000000000000000000000000000000000000000000000003F000FFF000FFF000FF
F00007F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003
F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003
F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F03803
F07C03F0FE03E0FE07E0FE07C0FE0FC07C0F80381F001FFC0007F000144384B217>I<03
F0000000FFF0000000FFF0000000FFF000000007F000000003F000000003F000000003F0
00000003F000000003F000000003F000000003F000000003F000000003F000000003F000
000003F000000003F000000003F000000003F000000003F000000003F003FFE003F003FF
E003F003FFE003F001FF0003F000F80003F001E00003F001C00003F003800003F00F0000
03F01C000003F038000003F070000003F0F0000003F3F8000003F7FC000003FEFC000003
FC7E000003F87F000003F03F800003F01F800003F00FC00003F00FE00003F007E00003F0
03F00003F003F80003F001F80003F000FC0003F000FE0007F800FF80FFFFC3FFF0FFFFC3
FFF0FFFFC3FFF024347EB329>I<07E0FFE0FFE0FFE00FE007E007E007E007E007E007E0
07E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E0
07E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E0
07E00FF0FFFFFFFFFFFF10347EB315>I<03F01FE000FF0000FFF07FF803FFC000FFF1E0
7C0F03E000FFF3803E1C01F00007F7003F3801F80003FE003F7001F80003FC001FE000FC
0003FC001FE000FC0003F8001FC000FC0003F8001FC000FC0003F0001F8000FC0003F000
1F8000FC0003F0001F8000FC0003F0001F8000FC0003F0001F8000FC0003F0001F8000FC
0003F0001F8000FC0003F0001F8000FC0003F0001F8000FC0003F0001F8000FC0003F000
1F8000FC0003F0001F8000FC0003F0001F8000FC0003F0001F8000FC0003F0001F8000FC
0003F0001F8000FC0003F0001F8000FC0003F0001F8000FC0003F0001F8000FC0007F800
3FC001FE00FFFFC7FFFE3FFFF0FFFFC7FFFE3FFFF0FFFFC7FFFE3FFFF03C217EA041>I<
03F01FC000FFF07FF000FFF1E0FC00FFF3807C0007F7007E0003FE007E0003FC003F0003
FC003F0003F8003F0003F8003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0
003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F000
3F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F
0007F8007F80FFFFC7FFFCFFFFC7FFFCFFFFC7FFFC26217EA02B>I<0007F00000003FFE
000000FC1F800001F007C00003C001E00007C001F0000F8000F8001F00007C001F00007C
003F00007E003E00003E007E00003F007E00003F007E00003F00FE00003F80FE00003F80
FE00003F80FE00003F80FE00003F80FE00003F80FE00003F80FE00003F807E00003F007E
00003F007E00003F003F00007E003F00007E001F00007C001F8000FC000FC001F80007C0
01F00003F007E00000FC1F8000003FFE00000007F0000021237EA126>I<03F03F8000FF
F0FFE000FFF3C0F800FFF7007E0007FE003F0003FC001F8003F8001FC003F0000FC003F0
000FE003F00007F003F00007F003F00007F003F00003F803F00003F803F00003F803F000
03F803F00003F803F00003F803F00003F803F00003F803F00003F803F00007F803F00007
F003F00007F003F00007E003F0000FE003F0000FC003F8001FC003FC003F8003FC003F00
03FF00FC0003F381F80003F1FFE00003F07F000003F000000003F000000003F000000003
F000000003F000000003F000000003F000000003F000000003F000000003F000000007F8
000000FFFFC00000FFFFC00000FFFFC0000025307EA02B>I<0007F00300003FFC070000
FC0F070001F8038F0007E0018F000FE001DF001FC000FF001F80007F003F80007F003F00
003F007F00003F007F00003F00FF00003F00FE00003F00FE00003F00FE00003F00FE0000
3F00FE00003F00FE00003F00FE00003F00FE00003F00FE00003F007F00003F007F00003F
007F00003F003F80007F001F80007F001FC000FF000FC001FF0007E003BF0003F0073F00
00F81E3F00003FF83F00000FE03F000000003F000000003F000000003F000000003F0000
00003F000000003F000000003F000000003F000000003F000000003F000000007F800000
0FFFFC00000FFFFC00000FFFFC26307DA029>I<03E07C00FFE1FF00FFE38F80FFE71FC0
07EE1FC003EC1FC003EC1FC003FC0F8003F8000003F8000003F8000003F0000003F00000
03F0000003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F00000
03F0000003F0000003F0000003F0000003F0000003F0000003F0000007F80000FFFFE000
FFFFE000FFFFE0001A217FA01E>I<00FF060007FFCE001F00FE003C003E0078001E0078
000E00F0000E00F0000600F0000600F8000600F8000600FE000000FF8000007FFC00003F
FFC0003FFFF0000FFFF80007FFFC0000FFFE00000FFF000000FF0000003F80C0001F80C0
000F80E0000780E0000780E0000780F0000780F0000700F8000F00FC000E00FE001C00F7
807800E1FFE000C07F800019237EA11E>I<003000003000003000003000003000007000
00700000700000F00000F00001F00001F00003F00007F0001FFFFEFFFFFEFFFFFE03F000
03F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F000
03F00003F00003F00303F00303F00303F00303F00303F00303F00303F00303F00701F806
01F80600FC0E007E1C001FF80007E0182F7FAD1E>I<03F0003F00FFF00FFF00FFF00FFF
00FFF00FFF0007F0007F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F00
03F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003
F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0
007F0003F0007F0003F0007F0003F000FF0001F000FF0001F801FF8000F803BFFC007E07
3FFC001FFE3FFC0007F83F0026227EA02B>I<FFFF00FFF0FFFF00FFF0FFFF00FFF00FF0
003F8007F0001F0003F0000E0003F0000C0003F8001C0001F800180001F800180000FC00
300000FC00300000FE007000007E006000007F006000003F00C000003F00C000001F8180
00001F818000001FC38000000FC30000000FC300000007E600000007E600000007FE0000
0003FC00000003FC00000001F800000001F800000001F800000000F000000000F0000000
0060000024217E9F29>I<FFFF1FFF81FFF0FFFF1FFF81FFF0FFFF1FFF81FFF007F801FC
003F8007F001F8001E0003F000F8001C0003F000FC001C0001F8007C00180001F8007C00
180001FC007E00380000FC00FE00300000FC00FE003000007E01FF006000007E019F0060
00007E019F806000003F030F80C000003F030F80C000003F030FC0C000001F8607C18000
001F8607C18000001FC607E38000000FCC03E30000000FCC03E300000007FC03F6000000
07F801F600000007F801FE00000003F000FC00000003F000FC00000003F000FC00000001
E0007800000001E0007800000001E0007800000000C00030000034217F9F37>I<FFFF01
FFF8FFFF01FFF8FFFF01FFF803FE00FF8001FC007C0000FC007800007E007000007F00E0
00003F81C000001F838000000FC300000007E600000007FE00000003FC00000001F80000
0000FC00000000FE00000000FF00000001FF000000039F800000071FC00000060FE00000
0C07E000001C03F000003801F800007001FC0000F000FC0001F000FE000FF000FF80FFFC
03FFFCFFFC03FFFCFFFC03FFFC26207F9F29>I<7FFF807FF87FFF807FF87FFF807FF807
F8001FC003F8000F8001F800070001F800060000FC000C0000FC000C0000FE001C00007E
001800007E001800003F003000003F003000003F807000001F806000001FC0E000000FC0
C000000FC0C0000007E180000007E180000007F380000003F300000003FB00000001FE00
000001FE00000000FC00000000FC00000000FC0000000078000000007800000000300000
0000300000000060000000006000000000E000000000C000000000C00000000180000078
01800000FC03000000FC03000000FC06000000FC0E000000701C00000078380000001FF0
0000000FC000000025307F9F29>I<3FFFFFF03FFFFFF03F000FF03C000FE038001FC030
003F8070007F8070007F006000FE006001FC006003FC006003F8000007F000000FE00000
0FE000001FC000003F8000007F0000007F003000FE003001FC003003FC003003F8003007
F000700FE000701FE000601FC000E03F8000E07F0003E0FF000FE0FFFFFFE0FFFFFFE01C
207E9F22>I<FFFFFFFFF8FFFFFFFFF82502809426>I E /Fz 15
117 df<000007FF00000000FFFFE0000007FFFFF000001FFC01FC00003FE000FC0000FF
C001FE0001FF8003FE0001FF0003FE0003FF0007FF0003FE0003FE0003FE0003FE0003FE
0003FE0003FE0001FC0003FE0000700003FE0000000003FE0000000003FE0000000003FE
0000000003FE003FFF00FFFFFFFFFF00FFFFFFFFFF00FFFFFFFFFF00FFFFFFFFFF0003FE
0001FF0003FE0001FF0003FE0001FF0003FE0001FF0003FE0001FF0003FE0001FF0003FE
0001FF0003FE0001FF0003FE0001FF0003FE0001FF0003FE0001FF0003FE0001FF0003FE
0001FF0003FE0001FF0003FE0001FF0003FE0001FF0003FE0001FF0003FE0001FF0003FE
0001FF0003FE0001FF0003FE0001FF0003FE0001FF0003FE0001FF0003FE0001FF0003FE
0001FF007FFFF03FFFF87FFFF03FFFF87FFFF03FFFF87FFFF03FFFF82D347FB331>12
D<0000001F800000000000001F800000000000003FC00000000000003FC0000000000000
7FE00000000000007FE00000000000007FE0000000000000FFF0000000000000FFF00000
00000001FFF8000000000001FFF8000000000001FFF8000000000003FFFC000000000003
FFFC000000000007FFFE000000000007CFFE000000000007CFFE00000000000FCFFF0000
0000000F87FF00000000001F87FF80000000001F03FF80000000003F03FFC0000000003E
01FFC0000000003E01FFC0000000007E01FFE0000000007C00FFE000000000FC00FFF000
000000F8007FF000000000F8007FF000000001F8007FF800000001F0003FF800000003F0
003FFC00000003E0001FFC00000003E0001FFC00000007FFFFFFFE00000007FFFFFFFE00
00000FFFFFFFFF0000000FFFFFFFFF0000001F800007FF8000001F000003FF8000001F00
0003FF8000003F000003FFC000003E000001FFC000007E000001FFE000007C000000FFE0
00007C000000FFE00000FC000000FFF00000F80000007FF000FFFFF0003FFFFFF0FFFFF0
003FFFFFF0FFFFF0003FFFFFF0FFFFF0003FFFFFF03C347DB343>65
D<FFFFFFFFFC000000FFFFFFFFFFC00000FFFFFFFFFFF80000FFFFFFFFFFFE000000FFE0
003FFF000000FFE00003FFC00000FFE00000FFE00000FFE000007FF00000FFE000001FF8
0000FFE000000FFC0000FFE000000FFE0000FFE0000007FE0000FFE0000007FF0000FFE0
000003FF0000FFE0000003FF8000FFE0000001FF8000FFE0000001FFC000FFE0000001FF
C000FFE0000001FFC000FFE0000001FFC000FFE0000001FFE000FFE0000001FFE000FFE0
000001FFE000FFE0000001FFE000FFE0000001FFE000FFE0000001FFE000FFE0000001FF
E000FFE0000001FFE000FFE0000001FFE000FFE0000001FFE000FFE0000001FFE000FFE0
000001FFC000FFE0000001FFC000FFE0000001FFC000FFE0000001FFC000FFE0000001FF
8000FFE0000003FF8000FFE0000003FF8000FFE0000003FF0000FFE0000007FE0000FFE0
00000FFE0000FFE000000FFC0000FFE000001FF80000FFE000003FF00000FFE00000FFE0
0000FFE00003FFC00000FFE0001FFF8000FFFFFFFFFFFE0000FFFFFFFFFFF80000FFFFFF
FFFFC00000FFFFFFFFFC0000003B337DB244>68 D<3FFFFFFFFFFFF83FFFFFFFFFFFF83F
FFFFFFFFFFF83FFFFFFFFFFFF83FF003FF801FF87F8003FF8003FC7F0003FF8001FC7E00
03FF8000FC7C0003FF80007C7C0003FF80007C780003FF80003C780003FF80003C780003
FF80003C780003FF80003CF80003FF80003EF00003FF80001EF00003FF80001EF00003FF
80001EF00003FF80001E000003FF800000000003FF800000000003FF800000000003FF80
0000000003FF800000000003FF800000000003FF800000000003FF800000000003FF8000
00000003FF800000000003FF800000000003FF800000000003FF800000000003FF800000
000003FF800000000003FF800000000003FF800000000003FF800000000003FF80000000
0003FF800000000003FF800000000003FF800000000003FF800000000003FF8000000000
03FF800000000003FF800000000003FF800000001FFFFFFFF000001FFFFFFFF000001FFF
FFFFF000001FFFFFFFF00037327DB13E>84 D<007FFE000003FFFFE00007FFFFF8000FF0
0FFC001FF803FF001FF801FF001FF800FF801FF800FFC01FF8007FC00FF0007FC007E000
7FC00180007FC00000007FC000007FFFC0000FFFFFC000FFFFFFC003FFF07FC00FFF007F
C01FF8007FC03FF0007FC07FE0007FC0FFC0007FC0FF80007FC0FF80007FC0FF80007FC0
FF8000FFC0FFC000FFC07FC001FFC07FE003FFE03FF80FBFFF0FFFFF1FFF03FFFC0FFF00
7FE007FF28217EA02B>97 D<01FC00000000FFFC00000000FFFC00000000FFFC00000000
FFFC000000000FFC0000000007FC0000000007FC0000000007FC0000000007FC00000000
07FC0000000007FC0000000007FC0000000007FC0000000007FC0000000007FC00000000
07FC0000000007FC0000000007FC0000000007FC07FC000007FC7FFF800007FDFFFFE000
07FFF00FF80007FFC007FC0007FF0003FE0007FE0001FF0007FC0000FF8007FC0000FF80
07FC0000FFC007FC00007FC007FC00007FC007FC00007FE007FC00007FE007FC00007FE0
07FC00007FE007FC00007FE007FC00007FE007FC00007FE007FC00007FE007FC00007FE0
07FC00007FC007FC00007FC007FC0000FFC007FC0000FF8007FC0000FF8007FE0001FF00
07FF0003FE0007FFC007FC0007F3F01FF80007E1FFFFE00007C07FFF800007800FF80000
2B347EB331>I<0007FF8000003FFFF00000FFFFFC0003FE01FE0007FC03FF000FF803FF
001FF003FF003FE003FF003FE003FF007FE001FE007FC000FC007FC0003000FFC0000000
FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000FF
C00000007FC00000007FE00000007FE00000003FE00007803FF00007801FF8000F800FF8
001F0007FE003E0003FF80FC0000FFFFF800003FFFE0000007FF000021217DA027>I<00
03FF8000003FFFF00000FFFFFC0001FF03FE0007FC007F000FF8003F801FF0001FC01FE0
001FC03FE0000FE07FE0000FE07FC0000FE07FC0000FF0FFC0000FF0FFC00007F0FFFFFF
FFF0FFFFFFFFF0FFFFFFFFF0FFC0000000FFC0000000FFC0000000FFC00000007FC00000
007FE00000003FE00000003FE00000F01FF00000F00FF00001F007F80003E003FE000FC0
01FF807F80007FFFFF00001FFFFC000003FFE00024217EA029>101
D<03F00007F8000FFC001FFE001FFE001FFE001FFE001FFE001FFE000FFC0007F80003F0
0000000000000000000000000000000000000000000000000001FC00FFFC00FFFC00FFFC
00FFFC000FFC0007FC0007FC0007FC0007FC0007FC0007FC0007FC0007FC0007FC0007FC
0007FC0007FC0007FC0007FC0007FC0007FC0007FC0007FC0007FC0007FC0007FC0007FC
0007FC00FFFFC0FFFFC0FFFFC0FFFFC012357DB418>105 D<03F803FE0003FE0000FFF8
1FFFC01FFFC000FFF87FFFE07FFFE000FFF8F81FF0F81FF000FFF9E00FF9E00FF8000FFB
C00FFBC00FF80007FF8007FF8007FC0007FF0007FF0007FC0007FE0007FE0007FC0007FE
0007FE0007FC0007FE0007FE0007FC0007FC0007FC0007FC0007FC0007FC0007FC0007FC
0007FC0007FC0007FC0007FC0007FC0007FC0007FC0007FC0007FC0007FC0007FC0007FC
0007FC0007FC0007FC0007FC0007FC0007FC0007FC0007FC0007FC0007FC0007FC0007FC
0007FC0007FC0007FC0007FC0007FC0007FC0007FC0007FC0007FC0007FC0007FC0007FC
0007FC0007FC0007FC0007FC0007FC0007FC0007FC0007FC0007FC0007FC0007FC00FFFF
E0FFFFE0FFFFE0FFFFE0FFFFE0FFFFE0FFFFE0FFFFE0FFFFE0FFFFE0FFFFE0FFFFE04321
7CA04A>109 D<01F803FF0000FFF80FFFC000FFF83FFFF000FFF8FC0FF800FFF9E007FC
000FFBC007FC0007FF8003FE0007FF0003FE0007FF0003FE0007FE0003FE0007FE0003FE
0007FC0003FE0007FC0003FE0007FC0003FE0007FC0003FE0007FC0003FE0007FC0003FE
0007FC0003FE0007FC0003FE0007FC0003FE0007FC0003FE0007FC0003FE0007FC0003FE
0007FC0003FE0007FC0003FE0007FC0003FE0007FC0003FE0007FC0003FE0007FC0003FE
00FFFFE07FFFF0FFFFE07FFFF0FFFFE07FFFF0FFFFE07FFFF02C217DA031>I<0003FF80
00001FFFF00000FFFFFE0001FF01FF0007FC007FC00FF0001FE01FF0001FF01FE0000FF0
3FE0000FF83FC00007F87FC00007FC7FC00007FC7FC00007FCFFC00007FEFFC00007FEFF
C00007FEFFC00007FEFFC00007FEFFC00007FEFFC00007FEFFC00007FE7FC00007FC7FC0
0007FC7FE0000FFC3FE0000FF81FE0000FF01FF0001FF00FF8003FE007FC007FC001FF01
FF0000FFFFFE00003FFFF8000003FF800027217EA02C>I<01F81F80FFF87FF0FFF8FFF8
FFF9E3FCFFFBC7FE0FFF87FE07FF07FE07FF07FE07FE07FE07FE03FC07FE01F807FE0060
07FC000007FC000007FC000007FC000007FC000007FC000007FC000007FC000007FC0000
07FC000007FC000007FC000007FC000007FC000007FC000007FC000007FC0000FFFFF000
FFFFF000FFFFF000FFFFF0001F217EA024>114 D<00FFE1C007FFFFC00FFFFFC03F803F
C07E000FC07E0007C0FC0007C0FC0003C0FE0003C0FE0003C0FF800000FFFC0000FFFFE0
007FFFFC007FFFFE003FFFFF800FFFFFC007FFFFE000FFFFE0000FFFF000007FF000000F
F0F00007F0F00003F0F80003F0F80003F0FC0003E0FE0007E0FF000FC0FFC01F80FFFFFF
00F9FFFC00E03FE0001C217DA023>I<003C0000003C0000003C0000003C0000003C0000
007C0000007C0000007C000000FC000000FC000001FC000001FC000003FC000007FC0000
1FFFFF80FFFFFF80FFFFFF80FFFFFF8007FC000007FC000007FC000007FC000007FC0000
07FC000007FC000007FC000007FC000007FC000007FC000007FC000007FC000007FC0000
07FC000007FC000007FC03C007FC03C007FC03C007FC03C007FC03C007FC03C007FC03C0
07FE078003FE078001FF0F0000FFFE00003FFC00000FF0001A2F7EAE22>I
E /FA 13 118 df<1E007F807F80FFC0FFC0FFC0FFC07F807F801E000A0A78891B>58
D<00000FC0000000007FF000000001F8381C000007E01C7E00000FC00E7E00003F0007FE
00007F0003FC0000FE0003FC0001FC0003FC0001F80001FC0003F80001F80007F00001F8
000FF00001F8000FE00003F8001FE00003F0001FE00003F0003FC00003F0003FC00007F0
007FC00007E0007F800007E0007F800007E0007F80000FE000FF80000FC000FF00000FC0
00FF00000FC000FF00001FC000FF00001F8000FE00001F8000FE00001F8000FE00003F80
30FE00003F0070FE00003F0060FE00003F0060FE00007F00E0FE00007F00C0FE0000FE00
C07E0001FE00C07E0003FE01C03E00073E01803F000E3E03801F001C3E03000F80381F07
0007C0F00F0E0001FFC007FC00007F0001F0002C2D7CAB33>97 D<000FE0000007FFE000
0007FFE0000007FFE00000001FC00000000FC00000001FC00000001FC00000001F800000
001F800000001F800000003F800000003F000000003F000000003F000000007F00000000
7E000000007E000000007E00000000FE00000000FC00000000FC00000000FC00000001FC
00000001F800000001F80FC00001F83FF00003F8F07C0003F3C03E0003F7001F0003FE00
1F8007FC000F8007F8000FC007F0000FC007F0000FE00FE0000FE00FC0000FE00FC0000F
E00FC0000FE01FC0000FE01F80000FE01F80000FE01F80001FE03F80001FE03F00001FE0
3F00001FE03F00003FE07F00003FC07E00003FC07E00003FC07E00007FC07E00007F80FC
00007F80FC00007F00FC0000FF00FC0000FF00FC0001FE007C0001FC007C0001FC007C00
03F8007C0007F0007C0007E0003C000FE0003E001FC0001E003F80001F007E00000F00FC
000007C1F0000001FFC00000007F00000023467CC429>I<000007F80000003FFF000000
FC07C00003F000E00007E00070001F800030003F000070007E0003F800FE0007F801FC00
07F803F8000FF007F8000FF007F0000FF00FF00007C01FE00000001FE00000003FC00000
003FC00000007FC00000007F800000007F800000007F80000000FF80000000FF00000000
FF00000000FF00000000FF00000000FE00000000FE00000000FE00000000FE00000000FE
00000000FE00000018FE00000038FE000000707E000000E07E000001C03F000003803F00
0007001F80001E000F8000380007C001F00003F00FC00000FFFE0000001FF00000252D7C
AB2A>I<0000000001FC00000000FFFC00000000FFFC00000000FFFC0000000003F80000
000001F80000000003F80000000003F80000000003F00000000003F00000000007F00000
000007F00000000007E00000000007E0000000000FE0000000000FE0000000000FC00000
00000FC0000000001FC0000000001FC0000000001F80000000001F80000000003F800000
00003F80000000003F0000000FC03F0000007FF07F000001F8387F000007E01C7E00000F
C00E7E00003F0007FE00007F0003FE0000FE0003FC0001FC0003FC0001F80001FC0003F8
0001FC0007F00001F8000FF00001F8000FE00003F8001FE00003F8001FE00003F0003FC0
0003F0003FC00007F0007FC00007F0007F800007E0007F800007E0007F80000FE000FF80
000FE000FF00000FC000FF00000FC000FF00001FC000FF00001FC000FE00001F8000FE00
001F8000FE00003F8030FE00003F8070FE00003F0060FE00003F0060FE00007F00E0FE00
007F00C0FE0000FE00C07E0001FE00C07E0003FE01C03E00073E01803F000E3E03801F00
1C3E03000F80381F070007C0F00F0E0001FFC007FC00007F0001F0002E467CC433>I<00
0007F80000003FFE000001FC07800003F003C0000FC001E0001F8000E0007F0000E000FE
00007001FC00007003F80000F007F80000E007F00000E00FF00001E01FE00001C01FE000
03C03FC00007803FC0001F003FC000FC007FC01FF0007FFFFF80007FFFF000007F800000
00FF80000000FF00000000FF00000000FF00000000FF00000000FF00000000FE00000000
FE00000000FE00000000FE00000000FE000000187E000000387E000000707F000000E03F
000001C03F000003801F000007000F80001E000FC000380007E001F00001F00FC000007F
FE0000001FF00000252D7CAB2D>I<0000000007E0000000001FF8000000007C1C000000
00F80E00000001F03E00000003E07F00000003E0FF00000007E1FF00000007C1FF000000
07C1FE0000000FC0FC0000000FC0780000000FC0000000001F80000000001F8000000000
1F80000000001F80000000003F80000000003F00000000003F00000000003F0000000000
3F00000000007F00000000007E00000000007E00000000007E00000000007E00000000FF
FFFF800000FFFFFF800000FFFFFF80000000FC0000000000FC0000000000FC0000000001
FC0000000001F80000000001F80000000001F80000000001F80000000003F80000000003
F00000000003F00000000003F00000000003F00000000007F00000000007E00000000007
E00000000007E00000000007E0000000000FE0000000000FC0000000000FC0000000000F
C0000000000FC0000000000FC0000000001FC0000000001F80000000001F80000000001F
80000000001F80000000003F80000000003F00000000003F00000000003F00000000003F
00000000007F00000000007E00000000007E00000000007E00000000007E0000000000FC
0000000000FC0000000000FC0000000000FC0000000000F80000000001F80000000001F8
0000000001F00000000001F00000001C03F00000007F03E0000000FF03E0000000FF03C0
000000FF07C0000000FF0780000000FE0F00000000F80F00000000601E00000000783C00
0000001FF00000000007C000000000305A7BC530>I<0000FE000000007FFE000000007F
FE000000007FFE0000000001FC0000000000FC0000000001FC0000000001FC0000000001
F80000000001F80000000003F80000000003F80000000003F00000000003F00000000007
F00000000007F00000000007E00000000007E0000000000FE0000000000FE0000000000F
C0000000000FC0000000001FC0000000001FC0000000001F80000000001F803FC000003F
81FFF000003F87C0FC00003F0E007E00003F3C003E00007F70003F00007FE0001F00007F
C0001F80007F80001F8000FF80001F8000FF00001F8000FE00001F8000FE00001F8001FC
00003F8001FC00003F0001F800003F0001F800003F0003F800007F0003F800007E0003F0
00007E0003F000007E0007F00000FE0007F00000FC0007E00000FC0007E00001FC000FE0
0001F8000FE00001F8000FC00003F8000FC00003F0001FC00003F0071FC00007F0061F80
0007E0061F80000FE0063F80000FC00E3F80000FC00C3F00000FC01C3F00000F80187F00
000F80387F00000F80307E00000F80707E00000F80E0FE00000781C0FE000007C380FC00
0001FF00380000007C0030467BC438>104 D<00F80003FC00007F800003FE001FFF0003
FFE000071F007C0FC00F81F8000E0F80E007E01C00FC001C0FC3C003E078007C001807C7
0003F0E0007E001807CE0001F1C0003E003807DC0001FB80003F003007D80001FB00003F
00300FF80001FF00003F00700FF00001FE00003F00600FE00001FC00003F00600FE00001
FC00003F00E00FC00003F800007F00C01FC00003F800007E00C01F800003F000007E0000
1F800003F000007E00001F800007F00000FE00003F800007F00000FC00003F000007E000
00FC00003F000007E00000FC00003F00000FE00001FC00007F00000FE00001F800007E00
000FC00001F800007E00000FC00003F800007E00001FC00003F00000FE00001FC00003F0
0000FC00001F800007F00000FC00001F800007E00000FC00003F800007E00E01FC00003F
80000FE00C01F800003F00000FC00C01F800003F00001FC00C01F800007F00001F801C03
F800007F00001F801803F000007E00001F803803F000007E00001F003003F00000FE0000
1F007007F00000FE00001F006007E00000FC00001F00E007E00000FC00001F01C007E000
01FC00000F03800FE00001FC00000F87000FC00001F8000003FE000380000070000000F8
004F2D7DAB55>109 D<000003FC000000003FFF00000000FE07C0000003F003F0000007
E001F800001FC000FC00003F00007C00007F00007E0000FE00007F0001FC00003F0003F8
00003F0007F800003F8007F000003F800FF000003F801FE000003F801FE000003F803FC0
00003F803FC000007F807FC000007F807F8000007F807F8000007F807F800000FF80FF80
0000FF00FF000000FF00FF000000FF00FF000001FF00FF000001FE00FE000001FE00FE00
0003FC00FE000003FC00FE000003F800FE000007F800FE000007F000FE00000FE000FE00
001FE0007E00001FC0007E00003F80003F00007F00003F0000FE00001F8001F800000FC0
03F0000007E00FC0000001F03F80000000FFFC000000001FE0000000292D7CAB2F>111
D<00F8000FC003FE007FF0070F00F0380E0F83C07C0C07C701FC1C07CE01FC1807DC03FC
3807D803FC3007F803FC300FF003F8700FE000E0600FE00000600FC00000E00FC00000C0
1FC00000C01F800000001F800000001F800000003F800000003F000000003F000000003F
000000007F000000007E000000007E000000007E00000000FE00000000FC00000000FC00
000000FC00000001FC00000001F800000001F800000001F800000003F800000003F00000
0003F000000003F000000007F000000007E000000007E000000007E00000000FE0000000
0FC00000000380000000262D7DAB2C>114 D<00000FF00000007FFE000001F00F800007
8001C0000F0000E0001E000060003C000060003C0001F000780007F000780007F000F800
0FE000F0000FE000F8000FE000F800038000FC00000000FE00000000FF00000000FFF800
00007FFF8000007FFFE000003FFFF800001FFFFC000007FFFE000000FFFE00000007FF00
000000FF000000007F000000003F800000001F800E00001F803F00000F007F80000F007F
80000F007F80001F00FF00001E00FF00001E00FC00003C006000003C0060000078007000
00F000380001E0001C0007C0000F803F000003FFFC0000007FE00000242D7BAB2E>I<00
3E000000000000FF800000E00003C3C00003F0000703E00003F0000601F00003F0000E01
F00007F0001C01F00007F0001803F00007E0003803F00007E0003003F0000FE0003003F0
000FE0007007F0000FC0006007E0000FC0006007E0001FC000E00FE0001FC000C00FC000
1F8000001FC0001F8000001F80003F8000001F80003F8000003F80003F0000003F00003F
0000003F00007F0000007F00007F0000007E00007E0000007E00007E0000007E0000FE00
0000FE0000FE000000FC0000FC000000FC0000FC000000FC0001FC018000FC0001FC0380
01F80001F8030001F80001F8030001F80001F8070001F80003F8060001F80003F0060000
F80007F0060000F8000FF00E0000FC000DF00C00007C001DF01C00007C0039F01800003E
00F0F83800001F03C07870000007FF803FE0000001FC000F8000312D7DAB38>117
D E /FB 42 124 df<1E007F80FF80FFC0FFC0FFE0FFE0FFE07FE01E6000600060006000
6000E000C000C000C001C0018003800300070006000E001C003800700060000B1D78891B
>44 D<1E007F807F80FFC0FFC0FFC0FFC07F807F801E000A0A78891B>46
D<0000FF00000007FFE000001F81F800003E007C0000FC003F0001F8001F8001F0000F80
03E00007C007C00003E007C00003E00FC00003F00F800001F01F800001F81F800001F83F
800001FC3F800001FC3F800001FC3F000000FC7F000000FE7F000000FE7F000000FE7F00
0000FE7F000000FEFF000000FFFF000000FFFF000000FFFF000000FFFF000000FFFF0000
00FFFF000000FFFF000000FFFF000000FFFF000000FFFF000000FFFF000000FFFF000000
FFFF000000FFFF000000FFFF000000FFFF000000FFFF000000FFFF000000FFFF000000FF
FF000000FFFF000000FF7F000000FE7F000000FE7F000000FE7F000000FE7F000000FE7F
800001FE3F800001FC3F800001FC3F800001FC1F800001F81F800001F80FC00003F00FC0
0003F00FC00003F007E00007E003E00007C003F0000FC001F8001F8000FC003F00003E00
7C00001F81F8000007FFE0000000FF000028447CC131>48 D<0003FE0000001FFFC00000
7FFFF00001F80FFC0003C001FE00078000FF000E00007F801C00003FC01C00001FE03800
001FF03000000FF07000000FF860000007F86C000007F8FF000007FCFF800007FCFFC000
07FCFFC00003FCFFC00003FCFFC00003FCFFC00003FC7F800007FC3F000007FC00000007
FC00000007F800000007F80000000FF80000000FF00000001FF00000001FE00000001FE0
0000003FC00000007F800000007F00000000FF00000000FE00000001FC00000003F80000
0007F000000007E00000000FC00000001F800000003F000000007C00000000F800000000
F000000001E000000003C000000007800000000F00000C001E00000C003C00000C003800
0018007000001800E000001801C0000018038000003807000000300E000000701FFFFFFF
F01FFFFFFFF03FFFFFFFF07FFFFFFFF0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE026427BC131
>50 D<0001FF0000000FFFE000003FFFFC0000FE01FE0001F0007F8003C0003FC0070000
1FE00E00001FE00E00000FF00FE0000FF01FF0000FF81FF0000FF81FF00007F81FF80007
F81FF00007F81FF00007F80FE0000FF803C0000FF80000000FF00000000FF00000000FF0
0000001FE00000001FE00000003FC00000003F800000007F00000000FE00000001FC0000
0003F00000001FC000000FFF0000000FFFF000000001FC000000007F000000003F800000
001FC00000000FE00000000FF000000007F800000007FC00000003FC00000003FE000000
03FE00000001FE00000001FF00000001FF00000001FF1E000001FF7F800001FFFFC00001
FFFFC00001FFFFC00001FFFFC00001FFFFC00001FEFF800003FEFF800003FE7E000003FC
70000007FC30000007F83800000FF81C00000FF00E00001FE00780003FC003E0007F8001
FE01FE00007FFFF800000FFFE0000001FF000028447CC131>I<000007FC0000003FFF00
0000FFFFC00003FC03E00007E000F0001FC00038003F000058007E0001FC00FE0003FC00
FC0007FC01F80007FC03F00007FC03F00007FC07E00003F80FE00001F00FE00000001FC0
0000001FC00000001FC00000003F800000003F800000003F800000007F800000007F8000
00007F007F80007F01FFF0007F0780FC00FF0E003E00FF1C001F80FF38000FC0FF700007
E0FF600007E0FFE00003F0FFC00003F8FFC00001F8FFC00001FCFF800001FCFF800000FE
FF800000FEFF800000FEFF000000FFFF000000FFFF000000FFFF000000FF7F000000FF7F
000000FF7F000000FF7F000000FF7F000000FF7F800000FF3F800000FF3F800000FF3F80
0000FE1F800000FE1F800001FE1FC00001FC0FC00001FC0FC00003F807E00003F807E000
07F003F00007E001F8000FC000FC001F80007E003F00003F80FE00000FFFF8000003FFE0
000000FF800028447CC131>54 D<0000FF00000007FFE000001FFFF800007F00FE0000FC
003F0001F0001F8003E0000FC003C00007E007C00003F00F800001F00F800001F00F0000
01F81F000000F81F000000F81F000000F81F000000F81F800000F81F800000F81FC00001
F81FC00001F01FE00001F00FF00003E00FFC0003E007FE0007C007FF800F8003FFC01F00
01FFF03E0001FFF87800007FFEF000003FFFC000001FFFC0000007FFE0000003FFF80000
07FFFC00001E7FFF00007C1FFF8000F80FFFC001E003FFE003C001FFF007C0007FF80F80
003FFC1F00000FFC3E000007FE3E000001FE7C000000FE7C000000FF7C0000007FF80000
003FF80000003FF80000001FF80000001FF80000001FF80000001FF80000001FFC000000
1E7C0000003E7C0000003E7E0000003C3E0000007C1F000000F81F800001F00FC00003E0
07E00007C003F8001F8000FF00FF00003FFFFC00000FFFF0000001FF800028447CC131>
56 D<0000FF00000007FFE000001FFFF800007F80FC0000FC007E0001F8003F0003F000
1F8007E0000FC00FE00007E01FC00007E01FC00003F03F800003F03F800003F87F800001
F87F000001FC7F000001FCFF000001FCFF000001FCFF000001FEFF000000FEFF000000FE
FF000000FEFF000000FEFF000000FEFF000000FFFF000000FFFF000000FFFF000000FF7F
000001FF7F000001FF7F000001FF3F800001FF3F800003FF1F800003FF1FC00003FF0FC0
0007FF07E00006FF07E0000EFF03F0001CFF01F80038FF007C0070FF003F01E0FF000FFF
80FE0001FE00FE00000000FE00000001FE00000001FC00000001FC00000001FC00000001
FC00000003F800000003F800000003F00F800007F01FC00007E03FE0000FE03FE0000FC0
3FE0001F803FE0001F803FC0003F003F80007E001E0000FC001C0001F8000F0003F00007
E01FE00003FFFF800000FFFE0000001FF0000028447CC131>I<0000001FFC0000000000
0001FFFFC0000000000007E003F000000000001E00003C00000000007800000F00000000
01E0000003C00000000380000000E00000000F00000000780000001C000000001C000000
38000000000E000000700000000007000000E00000000003800000C00000000001800001
C00000000001C0000380000FF00000E0000300003FFC00006000070000FC0F000070000E
0003F003C00038000C0007C000E00018001C001F800070001C0018003F800038000C0038
003F00001C000E0030007E00000FF006003000FE00000FF006007000FC000007F0070060
01FC000007F003006001FC000007F003006003F8000007F003006003F8000007F00300E0
03F8000007F00380C007F0000007F00180C007F0000007F00180C007F0000007F00180C0
07F0000007F00180C007F0000007F00180C007F0000007F00180C007F0000007F00180C0
07F0000007F00180C007F0000007F00180C007F0000007F00180C007F0000007F00180E0
03F8000007F001806003F8000007F001806003F8000007F001806001FC000007F0018060
01FC000007F003807000FC000007F003003000FE00000FF0030030007E00000FF0030038
003F00001FF0030018003F80003FF007001C001F800077F006000C0007C000E3F80E000E
0003F003C3F81C00070000FC0F00FC38000300003FFC007FF0000380000FF0000FC00001
C00000000000000000C00000000000000000E00000000000000000700000000000000000
3800000000000000001C00000000000000000F00000000001F80000380000000007F8000
01E000000003FE000000780000001FF00000001E000001FF8000000007E0007FF8000000
0001FFFFFF0000000000001FFFC000000041477BC54C>64 D<00000000C0000000000000
0001E00000000000000001E00000000000000001E00000000000000003F0000000000000
0003F00000000000000003F00000000000000007F80000000000000007F8000000000000
0007F8000000000000000FFC000000000000000FFC000000000000000FFC000000000000
0019FE0000000000000019FE0000000000000019FE0000000000000030FF000000000000
0030FF0000000000000070FF80000000000000607F80000000000000607F800000000000
00E07FC0000000000000C03FC0000000000000C03FC0000000000001C03FE00000000000
01801FE0000000000001801FE0000000000003001FF0000000000003000FF00000000000
03000FF0000000000006000FF80000000000060007F80000000000060007F80000000000
0C0003FC00000000000C0003FC00000000000C0003FC0000000000180001FE0000000000
180001FE0000000000180001FE0000000000300000FF0000000000300000FF0000000000
700000FF80000000006000007F80000000006000007F8000000000E000007FC000000000
FFFFFFFFC000000000FFFFFFFFC000000001FFFFFFFFE0000000018000001FE000000001
8000001FE0000000030000001FF0000000030000000FF0000000030000000FF000000006
0000000FF80000000600000007F80000000600000007F80000000C00000003FC0000000C
00000003FC0000000C00000003FC0000001800000001FE0000001800000001FE00000018
00000001FE0000003000000000FF0000003000000000FF0000007800000000FF800000F8
00000000FF800001FC00000000FFC0000FFF00000003FFE000FFFFE000007FFFFFC0FFFF
E000007FFFFFC0FFFFE000007FFFFFC042477DC649>I<0000000FFE000060000000FFFF
C000E0000003FFFFF000E000000FFC01FC01E000003FC0003E01E00000FF00000F83E000
03FC000003C7E00007F8000001E7E0000FF0000000FFE0001FE00000007FE0003FC00000
003FE0007F800000001FE000FF000000000FE001FE000000000FE001FC0000000007E003
FC0000000007E007F80000000003E007F80000000003E00FF00000000001E00FF0000000
0001E01FE00000000000E01FE00000000000E03FE00000000000E03FE00000000000E03F
C00000000000607FC00000000000607FC00000000000607FC00000000000607FC0000000
000000FF80000000000000FF80000000000000FF80000000000000FF80000000000000FF
80000000000000FF80000000000000FF80000000000000FF80000000000000FF80000000
000000FF80000000000000FF80000000000000FF80000000000000FF80000000000000FF
800000000000007FC00000000000007FC00000000000007FC00000000000607FC0000000
0000603FC00000000000603FE00000000000603FE00000000000601FE00000000000E01F
F00000000000E00FF00000000000C00FF00000000000C007F80000000001C007F8000000
00018003FC00000000038001FC00000000038001FE00000000070000FF00000000060000
7F800000000E00003FC00000001C00001FE00000003800000FF000000078000007F80000
00F0000003FC000001E0000000FF000007800000003FC0001F000000000FFC00FC000000
0003FFFFF00000000000FFFFC000000000000FFE0000003B487BC546>67
D<FFFFFFFFFF00000000FFFFFFFFFFF0000000FFFFFFFFFFFC00000001FFC00007FF0000
0000FF8000007FC00000007F8000001FE00000007F80000007F00000007F80000003FC00
00007F80000001FE0000007F80000000FF0000007F800000007F0000007F800000003F80
00007F800000001FC000007F800000000FE000007F800000000FE000007F8000000007F0
00007F8000000007F800007F8000000003F800007F8000000003FC00007F8000000003FC
00007F8000000001FC00007F8000000001FE00007F8000000001FE00007F8000000001FE
00007F8000000001FF00007F8000000000FF00007F8000000000FF00007F8000000000FF
00007F8000000000FF80007F8000000000FF80007F8000000000FF80007F8000000000FF
80007F8000000000FF80007F8000000000FF80007F8000000000FF80007F8000000000FF
80007F8000000000FF80007F8000000000FF80007F8000000000FF80007F8000000000FF
80007F8000000000FF80007F8000000000FF00007F8000000000FF00007F8000000000FF
00007F8000000001FF00007F8000000001FE00007F8000000001FE00007F8000000001FE
00007F8000000001FC00007F8000000003FC00007F8000000003F800007F8000000007F8
00007F8000000007F000007F800000000FF000007F800000000FE000007F800000001FC0
00007F800000003FC000007F800000003F8000007F800000007F0000007F80000000FE00
00007F80000003FC0000007F80000007F80000007F8000001FE0000000FF8000007FC000
0001FFC00007FF000000FFFFFFFFFFFC000000FFFFFFFFFFF0000000FFFFFFFFFF000000
0041447CC34B>I<FFFFFFFFFFFFF800FFFFFFFFFFFFF800FFFFFFFFFFFFF80001FFC000
007FF800007F80000007FC00007F80000001FC00007F80000000FC00007F800000007C00
007F800000003C00007F800000001C00007F800000001C00007F800000000E00007F8000
00000E00007F800000000E00007F800000000600007F800000000600007F800000000600
007F800000000600007F800000000700007F800006000300007F800006000300007F8000
06000300007F800006000000007F800006000000007F800006000000007F800006000000
007F80000E000000007F80000E000000007F80001E000000007F80003E000000007F8000
FE000000007FFFFFFE000000007FFFFFFE000000007FFFFFFE000000007F8000FE000000
007F80003E000000007F80001E000000007F80000E000000007F80000E000000007F8000
06000000007F800006000000007F800006000000007F8000060000C0007F8000060000C0
007F8000060000C0007F800006000180007F800000000180007F800000000180007F8000
00000180007F800000000180007F800000000380007F800000000380007F800000000300
007F800000000300007F800000000700007F800000000700007F800000000F00007F8000
00000F00007F800000001E00007F800000001E00007F800000003E00007F800000007E00
007F80000001FE00007F80000007FE0001FFC000007FFE00FFFFFFFFFFFFFC00FFFFFFFF
FFFFFC00FFFFFFFFFFFFFC003A447CC342>I<FFFFFFFFFFFFF0FFFFFFFFFFFFF0FFFFFF
FFFFFFF001FFC000007FF0007F8000000FF8007F80000003F8007F80000001F8007F8000
0000F8007F8000000078007F8000000038007F8000000038007F800000001C007F800000
001C007F800000001C007F800000000C007F800000000C007F800000000C007F80000000
0C007F800000000E007F8000000006007F80000C0006007F80000C0006007F80000C0000
007F80000C0000007F80000C0000007F80000C0000007F80000C0000007F80001C000000
7F80001C0000007F80003C0000007F80007C0000007F8001FC0000007FFFFFFC0000007F
FFFFFC0000007FFFFFFC0000007F8001FC0000007F80007C0000007F80003C0000007F80
001C0000007F80001C0000007F80000C0000007F80000C0000007F80000C0000007F8000
0C0000007F80000C0000007F80000C0000007F80000C0000007F8000000000007F800000
0000007F8000000000007F8000000000007F8000000000007F8000000000007F80000000
00007F8000000000007F8000000000007F8000000000007F8000000000007F8000000000
007F8000000000007F8000000000007F8000000000007F8000000000007FC00000000001
FFE000000000FFFFFFF8000000FFFFFFF8000000FFFFFFF800000037447CC340>I<0000
000FFE00006000000000FFFFC000E000000003FFFFF000E00000000FFC01FC01E0000000
3FC0003E01E0000000FF00000F83E0000003FC000003C7E0000007F8000001E7E000000F
F0000000FFE000001FE00000007FE000003FC00000003FE000007F800000001FE00000FF
000000000FE00001FE000000000FE00001FC0000000007E00003FC0000000007E00007F8
0000000003E00007F80000000003E0000FF00000000001E0000FF00000000001E0001FE0
0000000000E0001FE00000000000E0003FE00000000000E0003FE00000000000E0003FC0
000000000060007FC0000000000060007FC0000000000060007FC0000000000060007FC0
00000000000000FF8000000000000000FF8000000000000000FF8000000000000000FF80
00000000000000FF8000000000000000FF8000000000000000FF8000000000000000FF80
00000000000000FF8000000000000000FF8000000000000000FF8000000000000000FF80
00000000000000FF8000000000000000FF80000001FFFFFFC07FC0000001FFFFFFC07FC0
000001FFFFFFC07FC0000000007FF0007FC0000000003FE0003FC0000000001FE0003FE0
000000001FE0003FE0000000001FE0001FE0000000001FE0001FF0000000001FE0000FF0
000000001FE0000FF0000000001FE00007F8000000001FE00007F8000000001FE00003FC
000000001FE00001FE000000001FE00001FE000000001FE00000FF000000001FE000007F
800000001FE000003FC00000003FE000001FE00000003FE000000FF00000007FE0000007
F8000000E7E0000003FE000001C7E0000000FF00000383E00000003FE0000F01E0000000
0FFC00FE00E000000003FFFFF8006000000000FFFFE00000000000000FFE000000004248
7BC54D>I<FFFFFFF8000000FFFFFFF8000000FFFFFFF800000001FFE000000000007FC0
00000000007F8000000000007F8000000000007F8000000000007F8000000000007F8000
000000007F8000000000007F8000000000007F8000000000007F8000000000007F800000
0000007F8000000000007F8000000000007F8000000000007F8000000000007F80000000
00007F8000000000007F8000000000007F8000000000007F8000000000007F8000000000
007F8000000000007F8000000000007F8000000000007F8000000000007F800000000000
7F8000000000007F8000000000007F8000000000007F8000000000007F8000000000007F
8000000000007F8000000000007F8000000000007F8000000000007F8000000000007F80
00000000007F8000000000007F8000000030007F8000000030007F8000000030007F8000
000030007F8000000070007F8000000060007F8000000060007F8000000060007F800000
0060007F8000000060007F80000000E0007F80000000E0007F80000000E0007F80000001
C0007F80000001C0007F80000003C0007F80000007C0007F80000007C0007F8000000FC0
007F8000003FC0007F8000007FC0007F800001FFC001FFC0001FFF80FFFFFFFFFFFF80FF
FFFFFFFFFF80FFFFFFFFFFFF8034447CC33D>76 D<FFFF800000000007FFFCFFFFC00000
00000FFFFCFFFFC0000000000FFFFC01FFC0000000000FFE00006FE0000000001BF80000
6FE0000000001BF800006FE0000000001BF8000067F00000000033F8000067F000000000
33F8000063F80000000063F8000063F80000000063F8000063F80000000063F8000061FC
00000000C3F8000061FC00000000C3F8000061FC00000000C3F8000060FE0000000183F8
000060FE0000000183F80000607F0000000303F80000607F0000000303F80000607F0000
000303F80000603F8000000603F80000603F8000000603F80000603F8000000603F80000
601FC000000C03F80000601FC000000C03F80000600FE000001803F80000600FE0000018
03F80000600FE000001803F800006007F000003003F800006007F000003003F800006007
F000003003F800006003F800006003F800006003F800006003F800006001FC0000C003F8
00006001FC0000C003F800006001FC0000C003F800006000FE00018003F800006000FE00
018003F800006000FE00018003F8000060007F00030003F8000060007F00030003F80000
60003F80060003F8000060003F80060003F8000060003F80060003F8000060001FC00C00
03F8000060001FC00C0003F8000060001FC00C0003F8000060000FE0180003F800006000
0FE0180003F80000600007F0300003F80000600007F0300003F80000600007F0300003F8
0000600003F8600003F80000600003F8600003F80000600003F8600003F80000600001FC
C00003F80000600001FCC00003F80000600000FF800003F80000600000FF800003F80000
600000FF800003F800006000007F000003F80000F000007F000003F80000F000007F0000
03F80001F800003E000003F8000FFF00003E00000FFE00FFFFF0001C0007FFFFFCFFFFF0
001C0007FFFFFCFFFFF0001C0007FFFFFC4E447BC359>I<0001FF000300000FFFE00700
003FFFF8070000FE00FE0F0001F8001F0F0007E000079F0007C00003DF000F800001FF00
1F000000FF003F0000007F003E0000003F007E0000003F007E0000001F007C0000001F00
FC0000000F00FC0000000F00FC0000000700FC0000000700FC0000000700FE0000000700
FE0000000300FE0000000300FF0000000300FF00000003007F80000000007FC000000000
7FE0000000003FF8000000003FFE000000001FFFE00000000FFFFE00000007FFFFE00000
03FFFFFC000001FFFFFF000000FFFFFFC000003FFFFFF000000FFFFFF8000001FFFFFC00
00001FFFFE00000001FFFE000000001FFF0000000003FF8000000001FF8000000000FFC0
000000007FC0000000003FC0000000001FC0000000001FE0C00000000FE0C00000000FE0
C00000000FE0C000000007E0C000000007E0C000000007E0E000000007E0E000000007E0
E000000007E0F000000007C0F00000000FC0F80000000FC0F80000000F80FC0000001F80
FE0000001F00FF0000003F00FF8000007E00FBC00000FC00F9F00001F800F07C0003F000
F03FC00FE000E00FFFFF8000E001FFFE0000C0003FF000002B487BC536>83
D<3FFFFFFFFFFFFFF83FFFFFFFFFFFFFF83FFFFFFFFFFFFFF83FF0001FF8001FF83F8000
0FF00003F83E00000FF00000F87C00000FF000007C7800000FF000003C7800000FF00000
3C7000000FF000001C7000000FF000001C7000000FF000001C6000000FF000000C600000
0FF000000C6000000FF000000C6000000FF000000C6000000FF000000CC000000FF00000
06C000000FF0000006C000000FF0000006C000000FF0000006C000000FF0000006000000
0FF00000000000000FF00000000000000FF00000000000000FF00000000000000FF00000
000000000FF00000000000000FF00000000000000FF00000000000000FF0000000000000
0FF00000000000000FF00000000000000FF00000000000000FF00000000000000FF00000
000000000FF00000000000000FF00000000000000FF00000000000000FF0000000000000
0FF00000000000000FF00000000000000FF00000000000000FF00000000000000FF00000
000000000FF00000000000000FF00000000000000FF00000000000000FF0000000000000
0FF00000000000000FF00000000000000FF00000000000000FF00000000000000FF00000
000000000FF00000000000000FF00000000000000FF00000000000000FF0000000000000
0FF00000000000000FF00000000000000FF00000000000000FF00000000000000FF00000
000000001FF80000000000007FFE0000000001FFFFFFFF80000001FFFFFFFF80000001FF
FFFFFF80003F447DC346>I<FFFFFFC0000FFFFFFFFFFFC0000FFFFFFFFFFFC0000FFFFF
01FFE0000000FFF0007F800000001F80007F800000000F00007F800000000F00007F8000
00000600007F800000000600007F800000000600007F800000000600007F800000000600
007F800000000600007F800000000600007F800000000600007F800000000600007F8000
00000600007F800000000600007F800000000600007F800000000600007F800000000600
007F800000000600007F800000000600007F800000000600007F800000000600007F8000
00000600007F800000000600007F800000000600007F800000000600007F800000000600
007F800000000600007F800000000600007F800000000600007F800000000600007F8000
00000600007F800000000600007F800000000600007F800000000600007F800000000600
007F800000000600007F800000000600007F800000000600007F800000000600007F8000
00000600007F800000000600007F800000000600007F800000000600007F800000000600
007F800000000600007F800000000600007F800000000E00003FC00000000C00003FC000
00000C00003FC00000001C00001FC00000001C00001FE00000001800000FE00000003800
000FE000000030000007F000000070000007F0000000E0000003F8000001E0000001FC00
0001C0000000FE000007800000007F00000F000000003F80001E000000001FE0007C0000
000007FC03F00000000001FFFFE000000000007FFF80000000000007FC00000040467CC3
49>I<0007FC000000003FFF80000000F80FE0000003C003F00000070001F800000E0000
FC00000FC0007E00001FE0007F00001FF0003F80001FF0003F80001FF0003F80001FF000
1FC0001FF0001FC0000FE0001FC0000380001FC0000000001FC0000000001FC000000000
1FC0000000001FC00000000FFFC0000001FFFFC000000FFE1FC000003FC01FC00000FF00
1FC00003FC001FC00007F8001FC0000FF0001FC0001FE0001FC0003FC0001FC0007FC000
1FC0007F80001FC0007F80001FC060FF00001FC060FF00001FC060FF00001FC060FF0000
3FC060FF00003FC060FF00003FC060FF80007FC0607F8000EFC0607FC000C7E0C03FC001
C7E0C01FE00783F1C007F81E03FF8001FFFC01FF00001FE0007C002B2E7CAC31>97
D<01FC00000000FFFC00000000FFFC00000000FFFC0000000007FC0000000003FC000000
0001FC0000000001FC0000000001FC0000000001FC0000000001FC0000000001FC000000
0001FC0000000001FC0000000001FC0000000001FC0000000001FC0000000001FC000000
0001FC0000000001FC0000000001FC0000000001FC0000000001FC0000000001FC000000
0001FC0000000001FC03FC000001FC0FFF800001FC3C07E00001FC7001F80001FDE0007E
0001FD80003F0001FF80001F8001FF00001FC001FE00000FE001FC000007E001FC000007
F001FC000007F001FC000003F801FC000003F801FC000003FC01FC000003FC01FC000001
FC01FC000001FE01FC000001FE01FC000001FE01FC000001FE01FC000001FE01FC000001
FE01FC000001FE01FC000001FE01FC000001FE01FC000001FE01FC000001FE01FC000001
FC01FC000003FC01FC000003FC01FC000003F801FC000003F801FC000007F001FC000007
F001FE00000FE001FE00000FC001FF00001FC001FB00003F8001F380007E0001E1C000FC
0001E0F001F80001C03C07E00001801FFF8000000003FC00002F467DC436>I<00007F80
000003FFF000000FC07C00003F000F0000FC00038001F80001C003F8000FC007F0001FE0
07E0003FE00FE0003FE01FC0003FE01FC0003FE03F80003FE03F80001FC07F800007007F
800000007F800000007F00000000FF00000000FF00000000FF00000000FF00000000FF00
000000FF00000000FF00000000FF00000000FF00000000FF00000000FF000000007F0000
00007F800000007F800000003F800000003F800000303FC00000301FC00000700FE00000
600FE00000E007F00000C003F80001C001F800038000FC000700003F001E00001FC07800
0007FFF0000000FF8000242E7DAC2B>I<000000007F000000003FFF000000003FFF0000
00003FFF0000000001FF0000000000FF00000000007F00000000007F00000000007F0000
0000007F00000000007F00000000007F00000000007F00000000007F00000000007F0000
0000007F00000000007F00000000007F00000000007F00000000007F00000000007F0000
0000007F00000000007F00000000007F00000000007F0000007F807F000003FFF07F0000
0FC07C7F00003F000E7F00007E00077F0000FC0003FF0003F80001FF0007F00000FF0007
E00000FF000FE000007F001FC000007F001FC000007F003F8000007F003F8000007F007F
8000007F007F8000007F007F0000007F00FF0000007F00FF0000007F00FF0000007F00FF
0000007F00FF0000007F00FF0000007F00FF0000007F00FF0000007F00FF0000007F00FF
0000007F00FF0000007F007F0000007F007F8000007F007F8000007F003F8000007F003F
8000007F001FC000007F001FC000007F000FC00000FF000FE00000FF0007F00001FF0003
F00003FF0001F800077F8000FC000E7FC0003F001C7FFE000FC0F87FFE0003FFE07FFE00
007F007F002F467DC436>I<0001FE00000007FFC000001F03F000007E00FC0000FC007E
0001F8003F0003F0003F0007E0001F800FE0001FC00FC0000FC01FC0000FC03F80000FE0
3F800007E03F800007E07F800007F07F000007F07F000007F0FF000007F0FF000007F0FF
000007F0FFFFFFFFF0FFFFFFFFF0FF00000000FF00000000FF00000000FF00000000FF00
000000FF000000007F000000007F000000007F800000007F800000003F800000003F8000
00301FC00000301FC00000700FC00000600FE00000E007F00000C003F00001C001F80003
8000FC000700003E001E00001F80F8000003FFE0000000FF0000242E7DAC2B>I<00000F
E00000007FF8000001F81E000003F03F00000FE07F80001FC0FF80001F80FF80003F80FF
80007F00FF80007F00FF80007F007F0000FE001C0000FE00000000FE00000000FE000000
00FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000
FE00000000FE00000000FE00000000FE00000000FE000000FFFFFF8000FFFFFF8000FFFF
FF800000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00
000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE0000
0000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE000000
00FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000
FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE
00000001FF8000007FFFFF00007FFFFF00007FFFFF000021467EC51E>I<000000000F80
0001FC007FE0000FFF81F0F0003F07E381F000FC01FF03F001F800FE01F003F0007E01E0
07F0007F000007E0003F00000FE0003F80000FC0001F80001FC0001FC0001FC0001FC000
1FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC000
1FC0001FC0000FC0001F80000FE0003F800007E0003F000007F0007F000003F0007E0000
01F800FC000001FC01F8000003BF07E00000030FFF8000000701FC000000070000000000
0700000000000F00000000000F00000000000F00000000000F800000000007C000000000
07E00000000007FFFFF8000003FFFFFF000003FFFFFFE00001FFFFFFF800007FFFFFFC00
01FFFFFFFE0007C0000FFF000F800000FF003F0000003F803E0000001F807C0000000FC0
7C0000000FC0F800000007C0F800000007C0F800000007C0F800000007C0F800000007C0
FC0000000FC07C0000000F807E0000001F803E0000001F001F0000003E000F8000007C00
07E00001F80001F80007E000007F003F8000001FFFFE00000001FFE000002C427DAC31>
I<01FC00000000FFFC00000000FFFC00000000FFFC0000000007FC0000000003FC000000
0001FC0000000001FC0000000001FC0000000001FC0000000001FC0000000001FC000000
0001FC0000000001FC0000000001FC0000000001FC0000000001FC0000000001FC000000
0001FC0000000001FC0000000001FC0000000001FC0000000001FC0000000001FC000000
0001FC0000000001FC01FE000001FC07FFC00001FC1E07F00001FC3801F80001FC7001FC
0001FCE000FC0001FDC000FE0001FD8000FE0001FF80007F0001FF00007F0001FF00007F
0001FE00007F0001FE00007F0001FE00007F0001FC00007F0001FC00007F0001FC00007F
0001FC00007F0001FC00007F0001FC00007F0001FC00007F0001FC00007F0001FC00007F
0001FC00007F0001FC00007F0001FC00007F0001FC00007F0001FC00007F0001FC00007F
0001FC00007F0001FC00007F0001FC00007F0001FC00007F0001FC00007F0001FC00007F
0001FC00007F0001FC00007F0001FC00007F0001FC00007F0001FC00007F0003FE0000FF
80FFFFF83FFFFEFFFFF83FFFFEFFFFF83FFFFE2F457DC436>I<01E00007F80007F8000F
FC000FFC000FFC000FFC0007F80007F80001E00000000000000000000000000000000000
000000000000000000000000000000000000000000000001FC00FFFC00FFFC00FFFC0007
FC0003FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001
FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001
FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0003
FE00FFFFF8FFFFF8FFFFF815437DC21C>I<01FC00FFFC00FFFC00FFFC0007FC0003FC00
01FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC00
01FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC00
01FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC00
01FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC00
01FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0003FE00
FFFFF8FFFFF8FFFFF815457DC41C>108 D<01FC00FF00001FE00000FFFC07FFE000FFFC
0000FFFC0F03F801E07F0000FFFC3C01FC07803F800007FC7000FE0E001FC00003FCE000
7E1C000FC00001FDC0007F38000FE00001FD80007F30000FE00001FF80003FF00007F000
01FF00003FE00007F00001FF00003FE00007F00001FE00003FC00007F00001FE00003FC0
0007F00001FE00003FC00007F00001FC00003F800007F00001FC00003F800007F00001FC
00003F800007F00001FC00003F800007F00001FC00003F800007F00001FC00003F800007
F00001FC00003F800007F00001FC00003F800007F00001FC00003F800007F00001FC0000
3F800007F00001FC00003F800007F00001FC00003F800007F00001FC00003F800007F000
01FC00003F800007F00001FC00003F800007F00001FC00003F800007F00001FC00003F80
0007F00001FC00003F800007F00001FC00003F800007F00001FC00003F800007F00001FC
00003F800007F00001FC00003F800007F00001FC00003F800007F00001FC00003F800007
F00001FC00003F800007F00001FC00003F800007F00003FE00007FC0000FF800FFFFF81F
FFFF03FFFFE0FFFFF81FFFFF03FFFFE0FFFFF81FFFFF03FFFFE04B2C7DAB52>I<01FC01
FE0000FFFC07FFC000FFFC1E07F000FFFC3801F80007FC7001FC0003FCE000FC0001FDC0
00FE0001FD8000FE0001FF80007F0001FF00007F0001FF00007F0001FE00007F0001FE00
007F0001FE00007F0001FC00007F0001FC00007F0001FC00007F0001FC00007F0001FC00
007F0001FC00007F0001FC00007F0001FC00007F0001FC00007F0001FC00007F0001FC00
007F0001FC00007F0001FC00007F0001FC00007F0001FC00007F0001FC00007F0001FC00
007F0001FC00007F0001FC00007F0001FC00007F0001FC00007F0001FC00007F0001FC00
007F0001FC00007F0001FC00007F0001FC00007F0003FE0000FF80FFFFF83FFFFEFFFFF8
3FFFFEFFFFF83FFFFE2F2C7DAB36>I<00007F8000000003FFF00000000FC0FC0000003E
001F0000007C000F800000F80007C00001F00003E00003E00001F00007C00000F8000FC0
0000FC000FC00000FC001F8000007E003F8000007F003F8000007F003F0000003F007F00
00003F807F0000003F807F0000003F807F0000003F80FF0000003FC0FF0000003FC0FF00
00003FC0FF0000003FC0FF0000003FC0FF0000003FC0FF0000003FC0FF0000003FC0FF00
00003FC0FF0000003FC07F0000003F807F0000003F807F8000007F803F8000007F003F80
00007F001F8000007E001FC00000FE000FC00000FC000FE00001FC0007E00001F80003F0
0003F00001F80007E00000FC000FC000003E001F0000001FC0FE00000007FFF800000000
7F8000002A2E7DAC31>I<01FC03FC0000FFFC0FFF8000FFFC3C07E000FFFC7001F80007
FDE000FE0001FD80007F0001FF80003F8001FF00001FC001FE00001FE001FC00000FE001
FC00000FF001FC000007F001FC000007F801FC000003F801FC000003FC01FC000003FC01
FC000003FC01FC000001FE01FC000001FE01FC000001FE01FC000001FE01FC000001FE01
FC000001FE01FC000001FE01FC000001FE01FC000001FE01FC000001FE01FC000001FE01
FC000003FC01FC000003FC01FC000003FC01FC000007F801FC000007F801FC000007F001
FC00000FF001FE00000FE001FE00001FC001FF00003FC001FF00003F8001FF80007E0001
FDC000FC0001FCF003F80001FC3C0FE00001FC1FFF800001FC03FC000001FC0000000001
FC0000000001FC0000000001FC0000000001FC0000000001FC0000000001FC0000000001
FC0000000001FC0000000001FC0000000001FC0000000001FC0000000001FC0000000001
FC0000000003FE00000000FFFFF8000000FFFFF8000000FFFFF80000002F3F7DAB36>I<
03F803F0FFF81FFCFFF83C3EFFF8707F07F8E0FF03F9C0FF01F980FF01FB80FF01FB007E
01FB003C01FF000001FE000001FE000001FE000001FE000001FC000001FC000001FC0000
01FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC0000
01FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC0000
01FC000001FC000001FC000001FC000003FF0000FFFFFE00FFFFFE00FFFFFE00202C7DAB
26>114 D<003FE01801FFFC3807E01F780F0003F81E0001F83C0000F87C000078780000
78F8000038F8000038F8000018F8000018FC000018FC000018FE000018FF8000007FC000
007FFC00003FFFE0001FFFFC000FFFFF0007FFFFC003FFFFE000FFFFF0001FFFF80000FF
F800000FFC000003FCC00001FEC00000FEC000007EE000007EE000003EE000003EF00000
3EF000003EF000003EF800003CFC00007CFC000078FE0000F8FF0001F0F38003E0F1F00F
80E07FFE00C00FF0001F2E7DAC26>I<0006000000060000000600000006000000060000
000E0000000E0000000E0000000E0000001E0000001E0000001E0000003E0000007E0000
007E000000FE000001FE000007FE00001FFFFFF0FFFFFFF0FFFFFFF000FE000000FE0000
00FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE0000
00FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE0000
00FE000000FE000000FE000C00FE000C00FE000C00FE000C00FE000C00FE000C00FE000C
00FE000C00FE000C00FE000C007E001C007F0018007F0018003F0038001F8030001FC070
0007E0E00001FFC000007F001E3E7EBC26>I<01FC00007F00FFFC003FFF00FFFC003FFF
00FFFC003FFF0007FC0001FF0003FC0000FF0001FC00007F0001FC00007F0001FC00007F
0001FC00007F0001FC00007F0001FC00007F0001FC00007F0001FC00007F0001FC00007F
0001FC00007F0001FC00007F0001FC00007F0001FC00007F0001FC00007F0001FC00007F
0001FC00007F0001FC00007F0001FC00007F0001FC00007F0001FC00007F0001FC00007F
0001FC00007F0001FC00007F0001FC00007F0001FC00007F0001FC00007F0001FC0000FF
0001FC0000FF0001FC0000FF0001FC0001FF0001FC0001FF0000FC0001FF0000FE0003FF
00007E00077F80007F000E7FC0003F001C7FFE000FC0787FFE0003FFF07FFE00007F807F
002F2D7DAB36>I<FFFFF001FFFCFFFFF001FFFCFFFFF001FFFC07FF00007FE003FE0000
1F8001FE00001F0001FE00000E0000FE00000E0000FE00000C00007F00001800007F0000
1800007F80001800003F80003000003F80003000003FC0007000001FC0006000001FE000
6000000FE000C000000FE000C000000FF001C0000007F00180000007F00180000003F803
00000003F80300000003FC0700000001FC0600000001FC0600000000FE0C00000000FE0C
00000000FF0C000000007F18000000007F18000000007FB8000000003FB0000000003FF0
000000001FE0000000001FE0000000001FE0000000000FC0000000000FC0000000000780
00000000078000000000078000000000030000002E2C7EAA33>I<FFFFF001FFFCFFFFF0
01FFFCFFFFF001FFFC07FF00007FE003FE00001F8001FE00001F0001FE00000E0000FE00
000C0000FF00001C00007F00001800007F00001800007F80003800003F80003000003F80
003000001FC0006000001FC0006000001FE000E000000FE000C000000FE000C0000007F0
0180000007F00180000007F80380000003F80300000003F80300000001FC0600000001FC
0600000001FE0E00000000FE0C00000000FE0C000000007F18000000007F18000000007F
B8000000003FB0000000003FB0000000001FE0000000001FE0000000001FE0000000000F
C0000000000FC00000000007800000000007800000000007800000000003000000000003
00000000000600000000000600000000000600000000000C00000000000C000000000018
0000000000180000003C00180000007E0030000000FF0030000000FF0060000000FF0060
000000FF00C0000000FE01C00000007C03800000007007000000003C1E000000000FFC00
00000003F0000000002E3F7EAA33>121 D<3FFFFFFFE03FFFFFFFE03FC0003FE03F0000
3FC03C00007F80380000FF00380000FF00300001FE00700003FC00700003FC00700007F8
0060000FF00060000FF00060001FE00060003FC00060003FC00000007F80000000FF0000
0001FF00000001FE00000003FC00000007FC00000007F80000000FF00000001FF0000000
1FE00060003FC00060007F800060007F80006000FF0000C001FE0000C001FE0000C003FC
0000C007F80000C007F80001C00FF00001C01FE00003C01FE00003C03FC00007807F8000
1F80FF8000FF80FFFFFFFF80FFFFFFFF80232B7DAA2B>I<FFFFFFFFFFFFFFFFFFFFFFFF
3002809B31>I E /FC 1 4 df<00007000000000F800000000F800000000F800000000F8
00000000F800000000F800000000F800000000F80000000070000078007000F07C007001
F0FF007007F87F80700FF03FE0703FE00FF0707F8003F870FE0000FE73F800003F77E000
000FFF80000003FE00000000F800000003FE0000000FFF8000003F77E00000FE73F80003
F870FE000FF0707F803FE0703FE07F80700FF0FF007007F87C007001F078007000F00000
7000000000F800000000F800000000F800000000F800000000F800000000F800000000F8
00000000F800000000700000252B7AAD32>3 D E /FD 24 122 df<00000000007FF800
000060000000000FFFFF800000E0000000007FFFFFE00000E000000003FFFFFFFC0001E0
0000000FFFE003FE0001E00000003FFE00003F8003E0000000FFF0000007C003E0000001
FFC0000003F007E0000007FF00000000F80FE000000FFC000000007C0FE000001FF80000
00001E1FE000007FE0000000000F1FE00000FFC00000000007BFE00001FF800000000003
FFE00003FF000000000003FFE00007FE000000000001FFE0000FFC000000000000FFE000
0FF80000000000007FE0001FF00000000000007FE0003FF00000000000003FE0007FE000
00000000001FE0007FC00000000000001FE000FFC00000000000000FE001FF8000000000
00000FE001FF800000000000000FE003FF0000000000000007E003FF0000000000000007
E007FE0000000000000003E007FE0000000000000003E00FFC0000000000000003E00FFC
0000000000000001E01FFC0000000000000001E01FFC0000000000000001E01FF8000000
0000000001E03FF80000000000000001E03FF80000000000000000E03FF0000000000000
0000E03FF00000000000000000E07FF00000000000000000E07FF0000000000000000000
7FF00000000000000000007FF00000000000000000007FF0000000000000000000FFE000
0000000000000000FFE0000000000000000000FFE0000000000000000000FFE000000000
0000000000FFE0000000000000000000FFE0000000000000000000FFE000000000000000
0000FFE0000000000000000000FFE0000000000000000000FFE0000000000000000000FF
E0000000000000000000FFE0000000000000000000FFE0000000000000000000FFE00000
00000000000000FFE0000000000000000000FFE00000000000000000007FF00000000000
000000007FF00000000000000000007FF00000000000000000007FF00000000000000000
007FF00000000000000000003FF00000000000000000003FF00000000000000000E03FF8
0000000000000000E03FF80000000000000000E01FF80000000000000000E01FFC000000
0000000000E01FFC0000000000000000E00FFC0000000000000001E00FFC000000000000
0001C007FE0000000000000001C007FE0000000000000001C003FF0000000000000001C0
03FF0000000000000003C001FF80000000000000038001FF80000000000000078000FFC0
0000000000000780007FC00000000000000700007FE00000000000000F00003FF0000000
0000001E00001FF00000000000001E00000FF80000000000003C00000FFC000000000000
38000007FE00000000000078000003FF000000000000F0000001FF800000000001E00000
00FFC00000000003C00000007FE00000000007C00000001FF8000000000F800000000FFC
000000001F0000000007FF000000007C0000000001FFC0000001F80000000000FFF00000
07F000000000003FFE00001FC000000000000FFFE001FF00000000000003FFFFFFFC0000
00000000007FFFFFF0000000000000000FFFFF8000000000000000007FF8000000005366
7AE360>67 D<FFFFFFFFFFFFF000000000FFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFE0
000000FFFFFFFFFFFFFFF800000000FFFC0000007FFE000000003FF80000000FFF800000
001FF800000001FFC00000001FF8000000007FF00000001FF8000000001FF80000001FF8
000000000FFC0000001FF80000000003FE0000001FF80000000001FF0000001FF8000000
0000FF8000001FF800000000007FC000001FF800000000003FE000001FF800000000001F
F000001FF800000000000FF000001FF800000000000FF800001FF8000000000007FC0000
1FF8000000000003FC00001FF8000000000003FE00001FF8000000000001FF00001FF800
0000000001FF00001FF8000000000000FF80001FF8000000000000FF80001FF800000000
00007FC0001FF80000000000007FC0001FF80000000000007FE0001FF80000000000003F
E0001FF80000000000003FE0001FF80000000000003FF0001FF80000000000003FF0001F
F80000000000001FF0001FF80000000000001FF8001FF80000000000001FF8001FF80000
000000001FF8001FF80000000000001FFC001FF80000000000001FFC001FF80000000000
000FFC001FF80000000000000FFC001FF80000000000000FFC001FF80000000000000FFC
001FF80000000000000FFE001FF80000000000000FFE001FF80000000000000FFE001FF8
0000000000000FFE001FF80000000000000FFE001FF80000000000000FFE001FF8000000
0000000FFE001FF80000000000000FFE001FF80000000000000FFE001FF8000000000000
0FFE001FF80000000000000FFE001FF80000000000000FFE001FF80000000000000FFE00
1FF80000000000000FFE001FF80000000000000FFE001FF80000000000000FFC001FF800
00000000000FFC001FF80000000000000FFC001FF80000000000000FFC001FF800000000
00000FFC001FF80000000000001FFC001FF80000000000001FF8001FF80000000000001F
F8001FF80000000000001FF8001FF80000000000001FF8001FF80000000000003FF0001F
F80000000000003FF0001FF80000000000003FE0001FF80000000000003FE0001FF80000
000000007FE0001FF80000000000007FC0001FF8000000000000FFC0001FF80000000000
00FF80001FF8000000000000FF80001FF8000000000001FF00001FF8000000000001FF00
001FF8000000000003FE00001FF8000000000007FC00001FF8000000000007FC00001FF8
00000000000FF800001FF800000000001FF000001FF800000000003FE000001FF8000000
00007FC000001FF80000000000FFC000001FF80000000001FF8000001FF80000000003FF
0000001FF80000000007FC0000001FF8000000001FF80000001FF8000000007FF0000000
1FF800000001FFC00000003FF800000007FF80000000FFFC0000007FFE000000FFFFFFFF
FFFFFFF8000000FFFFFFFFFFFFFFE0000000FFFFFFFFFFFFFF00000000FFFFFFFFFFFFF0
00000000576279E165>I<FFFFFC000000000000001FFFFF80FFFFFC000000000000001F
FFFF80FFFFFC000000000000001FFFFF80FFFFFE000000000000003FFFFF8000FFFE0000
00000000003FFF8000003FFE000000000000003FFE0000001DFF0000000000000077FC00
00001DFF0000000000000077FC0000001CFF80000000000000E7FC0000001CFF80000000
000000E7FC0000001CFF80000000000000E7FC0000001C7FC0000000000001C7FC000000
1C7FC0000000000001C7FC0000001C7FC0000000000001C7FC0000001C3FE00000000000
0387FC0000001C3FE000000000000387FC0000001C3FE000000000000387FC0000001C1F
F000000000000707FC0000001C1FF000000000000707FC0000001C0FF800000000000E07
FC0000001C0FF800000000000E07FC0000001C0FF800000000000E07FC0000001C07FC00
000000001C07FC0000001C07FC00000000001C07FC0000001C07FC00000000001C07FC00
00001C03FE00000000003807FC0000001C03FE00000000003807FC0000001C03FE000000
00003807FC0000001C01FF00000000007007FC0000001C01FF00000000007007FC000000
1C00FF8000000000E007FC0000001C00FF8000000000E007FC0000001C00FF8000000000
E007FC0000001C007FC000000001C007FC0000001C007FC000000001C007FC0000001C00
7FC000000001C007FC0000001C003FE0000000038007FC0000001C003FE0000000038007
FC0000001C003FE0000000038007FC0000001C001FF0000000070007FC0000001C001FF0
000000070007FC0000001C000FF80000000E0007FC0000001C000FF80000000E0007FC00
00001C000FF80000000E0007FC0000001C0007FC0000001C0007FC0000001C0007FC0000
001C0007FC0000001C0007FC0000001C0007FC0000001C0003FE000000380007FC000000
1C0003FE000000380007FC0000001C0003FE000000380007FC0000001C0001FF00000070
0007FC0000001C0001FF000000700007FC0000001C0000FF800000E00007FC0000001C00
00FF800000E00007FC0000001C0000FF800000E00007FC0000001C00007FC00001C00007
FC0000001C00007FC00001C00007FC0000001C00007FC00001C00007FC0000001C00003F
E00003800007FC0000001C00003FE00003800007FC0000001C00003FE00003800007FC00
00001C00001FF00007000007FC0000001C00001FF00007000007FC0000001C00000FF800
0E000007FC0000001C00000FF8000E000007FC0000001C00000FF8000E000007FC000000
1C000007FC001C000007FC0000001C000007FC001C000007FC0000001C000007FC001C00
0007FC0000001C000003FE0038000007FC0000001C000003FE0038000007FC0000001C00
0003FE0038000007FC0000001C000001FF0070000007FC0000001C000001FF0070000007
FC0000001C000001FF0070000007FC0000001C000000FF80E0000007FC0000001C000000
FF80E0000007FC0000001C0000007FC1C0000007FC0000001C0000007FC1C0000007FC00
00001C0000007FC1C0000007FC0000001C0000003FE380000007FC0000001C0000003FE3
80000007FC0000001C0000003FE380000007FC0000001C0000001FF700000007FC000000
1C0000001FF700000007FC0000001C0000001FF700000007FC0000001C0000000FFE0000
0007FC0000001C0000000FFE00000007FC0000003E00000007FC00000007FC0000003E00
000007FC00000007FC0000007F00000007FC00000007FC0000007F00000003F800000007
FC000001FFC0000003F80000000FFE000007FFF8000003F80000003FFF8000FFFFFF8000
01F000003FFFFFFF80FFFFFF800001F000003FFFFFFF80FFFFFF800001F000003FFFFFFF
80FFFFFF800000E000003FFFFFFF80696278E17A>77 D<0000000001FFE0000000000000
0000003FFFFF000000000000000001FFFFFFE00000000000000007FF003FF80000000000
00001FF00003FE000000000000007FC00000FF80000000000001FF0000003FE000000000
0003FC0000000FF000000000000FF000000003FC00000000001FE000000001FE00000000
003FC000000000FF00000000007F80000000007F8000000000FF00000000003FC0000000
01FE00000000001FE000000003FC00000000000FF000000007F8000000000007F8000000
0FF0000000000003FC0000001FE0000000000001FE0000003FE0000000000001FF000000
3FC0000000000000FF0000007FC0000000000000FF800000FF800000000000007FC00000
FF800000000000007FC00001FF000000000000003FE00001FF000000000000003FE00003
FE000000000000001FF00003FE000000000000001FF00007FC000000000000000FF80007
FC000000000000000FF8000FFC000000000000000FFC000FF80000000000000007FC001F
F80000000000000007FE001FF80000000000000007FE001FF80000000000000007FE003F
F00000000000000003FF003FF00000000000000003FF003FF00000000000000003FF003F
F00000000000000003FF007FF00000000000000003FF807FF00000000000000003FF807F
E00000000000000001FF807FE00000000000000001FF807FE00000000000000001FF807F
E00000000000000001FF80FFE00000000000000001FFC0FFE00000000000000001FFC0FF
E00000000000000001FFC0FFE00000000000000001FFC0FFE00000000000000001FFC0FF
E00000000000000001FFC0FFE00000000000000001FFC0FFE00000000000000001FFC0FF
E00000000000000001FFC0FFE00000000000000001FFC0FFE00000000000000001FFC0FF
E00000000000000001FFC0FFE00000000000000001FFC0FFE00000000000000001FFC0FF
E00000000000000001FFC07FF00000000000000003FF807FF00000000000000003FF807F
F00000000000000003FF807FF00000000000000003FF807FF00000000000000003FF803F
F00000000000000003FF003FF80000000000000007FF003FF80000000000000007FF003F
F80000000000000007FF001FF80000000000000007FE001FF80000000000000007FE001F
FC000000000000000FFE000FFC000000000000000FFC000FFC000000000000000FFC0007
FE000000000000001FF80007FE000000000000001FF80007FE000000000000001FF80003
FF000000000000003FF00003FF000000000000003FF00001FF800000000000007FE00000
FF800000000000007FC00000FFC0000000000000FFC000007FC0000000000000FF800000
3FE0000000000001FF0000003FF0000000000003FF0000001FF0000000000003FE000000
0FF8000000000007FC00000007FC00000000000FF800000003FC00000000000FF0000000
03FE00000000001FF000000001FF00000000003FE000000000FF80000000007FC0000000
003FC000000000FF00000000001FF000000003FE00000000000FF800000007FC00000000
0007FC0000000FF8000000000001FF0000003FE00000000000007FC00000FF8000000000
00001FF00003FE0000000000000007FF003FF80000000000000001FFFFFFE00000000000
0000003FFFFF00000000000000000001FFE000000000005A667AE367>79
D<00003FF0000000000003FFFE00000000000FFFFF80000000003FC03FE0000000007E00
07F800000000F80003FC00000001E00001FE00000003C00000FF000000078000007F8000
000F0000003FC000000F8000003FC000000FF000001FE000001FF800001FE000001FFC00
000FF000001FFC00000FF000001FFC00000FF000001FFC000007F800001FFC000007F800
001FFC000007F800000FF8000007F8000003E0000007F800000000000007F80000000000
0007F800000000000007F800000000000007F800000000000007F800000000000007F800
00000000007FF800000000007FFFF8000000000FFFFFF8000000007FF807F800000001FF
8007F800000007FC0007F80000001FF00007F80000007FC00007F8000000FF800007F800
0003FE000007F8000007FC000007F800000FFC000007F800000FF8000007F800001FF000
0007F800003FE0000007F800003FE0000007F800007FC0000007F800E07FC0000007F800
E07FC0000007F800E0FFC0000007F800E0FF80000007F800E0FF80000007F800E0FF8000
000FF800E0FF8000000FF800E0FF8000000FF800E0FF8000001FF800E0FFC000001BF800
E07FC000003BF800E07FC0000073F800E07FE0000071FC01C03FF00000E1FC01C01FF000
01C1FC01C00FFC000780FE038007FE000F00FF070001FF807E007FFF00007FFFF8003FFE
00001FFFE0001FF8000001FF000007E0003B417ABF42>97 D<0003C000000000000007FF
C0000000000000FFFFC0000000000000FFFFC0000000000000FFFFC0000000000000FFFF
C000000000000001FFC0000000000000007FC0000000000000007FC0000000000000003F
C0000000000000003FC0000000000000003FC0000000000000003FC0000000000000003F
C0000000000000003FC0000000000000003FC0000000000000003FC0000000000000003F
C0000000000000003FC0000000000000003FC0000000000000003FC0000000000000003F
C0000000000000003FC0000000000000003FC0000000000000003FC0000000000000003F
C0000000000000003FC0000000000000003FC0000000000000003FC0000000000000003F
C0000000000000003FC0000000000000003FC0000000000000003FC0000000000000003F
C0000000000000003FC0000000000000003FC0000000000000003FC0000000000000003F
C0007FC0000000003FC007FFFC000000003FC01FFFFF000000003FC07F007FC00000003F
C0F8000FF00000003FC3E00007F80000003FC7800001FC0000003FCF000000FE0000003F
DE0000007F0000003FFC0000003F8000003FF80000003FC000003FF00000001FE000003F
F00000000FE000003FE00000000FF000003FE000000007F800003FC000000007F800003F
C000000003FC00003FC000000003FC00003FC000000003FE00003FC000000001FE00003F
C000000001FE00003FC000000001FF00003FC000000001FF00003FC000000001FF00003F
C000000000FF00003FC000000000FF80003FC000000000FF80003FC000000000FF80003F
C000000000FF80003FC000000000FF80003FC000000000FF80003FC000000000FF80003F
C000000000FF80003FC000000000FF80003FC000000000FF80003FC000000000FF80003F
C000000000FF80003FC000000000FF80003FC000000000FF00003FC000000001FF00003F
C000000001FF00003FC000000001FF00003FC000000001FF00003FC000000001FE00003F
C000000003FE00003FC000000003FC00003FC000000003FC00003FC000000007FC00003F
C000000007F800003FE000000007F000003FE00000000FF000003FF00000001FE000003F
F80000001FC000003FB80000003FC000003F3C0000007F8000003F1E000000FF0000003F
0F000001FE0000003E07800003FC0000003E03C0000FF00000003C01F0001FE00000003C
007E00FF800000003C003FFFFE0000000038000FFFF800000000000000FF800000004165
7DE349>I<000001FF80000000000FFFF8000000003FFFFE00000000FF007F80000003FC
0007E0000007F00001F000001FE000007800003FC000003C00007F8000001E0000FF0000
000F0001FE0000001F0001FC000000FF0003FC000001FF8007F8000003FF8007F8000003
FF800FF0000003FF800FF0000003FF801FE0000003FF801FE0000003FF803FE0000001FF
003FC00000007C003FC000000000007FC000000000007FC000000000007FC00000000000
7F800000000000FF800000000000FF800000000000FF800000000000FF800000000000FF
800000000000FF800000000000FF800000000000FF800000000000FF800000000000FF80
0000000000FF800000000000FF800000000000FF8000000000007F8000000000007FC000
000000007FC000000000007FC000000000007FC000000000003FC000000000003FE00000
0000003FE000000000001FE000000001C01FF000000001C00FF000000003C00FF8000000
038007F8000000038003FC000000078003FE000000070001FE0000000F0000FF0000001E
00007F8000003C00003FC000007800001FE00000F000000FF80001E0000003FC0007C000
0000FF803F800000003FFFFE000000000FFFF80000000001FF80000032417CBF3A>I<00
00000000001E000000000000003FFE00000000000007FFFE00000000000007FFFE000000
00000007FFFE00000000000007FFFE000000000000000FFE0000000000000003FE000000
0000000003FE0000000000000001FE0000000000000001FE0000000000000001FE000000
0000000001FE0000000000000001FE0000000000000001FE0000000000000001FE000000
0000000001FE0000000000000001FE0000000000000001FE0000000000000001FE000000
0000000001FE0000000000000001FE0000000000000001FE0000000000000001FE000000
0000000001FE0000000000000001FE0000000000000001FE0000000000000001FE000000
0000000001FE0000000000000001FE0000000000000001FE0000000000000001FE000000
0000000001FE0000000000000001FE0000000000000001FE0000000000000001FE000000
0000000001FE0000000000FF8001FE000000000FFFF801FE000000003FFFFE01FE000000
00FF803F81FE00000003FC0007C1FE00000007F80001E1FE0000001FE00000F9FE000000
3FC000007DFE0000007F8000003DFE000000FF0000001FFE000001FE0000000FFE000001
FC00000007FE000003FC00000007FE000007F800000003FE000007F000000001FE00000F
F000000001FE00001FF000000001FE00001FE000000001FE00001FE000000001FE00003F
E000000001FE00003FC000000001FE00007FC000000001FE00007FC000000001FE00007F
C000000001FE00007FC000000001FE00007F8000000001FE0000FF8000000001FE0000FF
8000000001FE0000FF8000000001FE0000FF8000000001FE0000FF8000000001FE0000FF
8000000001FE0000FF8000000001FE0000FF8000000001FE0000FF8000000001FE0000FF
8000000001FE0000FF8000000001FE0000FF8000000001FE0000FF8000000001FE00007F
8000000001FE00007FC000000001FE00007FC000000001FE00007FC000000001FE00003F
C000000001FE00003FC000000001FE00003FE000000001FE00001FE000000001FE00001F
E000000001FE00000FF000000003FE00000FF000000003FE000007F800000007FE000003
F800000007FE000003FC0000000FFE000001FE0000001FFE000000FE0000003DFE000000
7F0000003DFE0000003F800000F9FF0000001FC00001F1FF0000000FF00003C1FFC00000
07F8000F81FFFF800001FF007F01FFFF8000007FFFFC01FFFF8000001FFFE001FFFF8000
0001FF0001FF000041657CE349>I<000003FE00000000001FFFE000000000FFFFF80000
0001FE03FE00000007F0007F8000000FE0003FC000003FC0001FE000007F00000FF00000
FF000007F80000FE000003F80001FC000003FC0003F8000001FC0007F8000001FE0007F0
000000FE000FF0000000FF000FF00000007F001FE00000007F001FE00000007F803FE000
00007F803FC00000003F803FC00000003F807FC00000003FC07FC00000003FC07FC00000
003FC07F800000003FC07F800000003FC0FF800000003FC0FFFFFFFFFFFFC0FFFFFFFFFF
FFC0FFFFFFFFFFFFC0FF800000000000FF800000000000FF800000000000FF8000000000
00FF800000000000FF800000000000FF800000000000FF800000000000FF800000000000
7F8000000000007FC000000000007FC000000000007FC000000000003FC000000000003F
C000000000003FE000000000001FE000000000001FE000000001C00FF000000001C00FF0
00000003C007F8000000038007F8000000038003FC000000078001FC0000000F0001FE00
00000E0000FF0000001E00007F8000003C00003FC000007800001FE00000F0000007F000
03E0000003FC0007C0000000FF803F000000003FFFFC000000000FFFF00000000001FF80
000032417CBF3A>I<0000000FF0000000007FFC00000001FFFF00000007F81F8000000F
E00FC000001FC03FC000003F807FE000007F007FE00000FF007FE00001FE007FE00001FC
007FE00003FC003FC00003FC003FC00007F8000F000007F80000000007F8000000000FF0
000000000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF0
000000000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF0
000000000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF0
000000000FF0000000000FF0000000000FF0000000000FF0000000FFFFFFFFF000FFFFFF
FFF000FFFFFFFFF000FFFFFFFFF000000FF0000000000FF0000000000FF0000000000FF0
000000000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF0
000000000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF0
000000000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF0
000000000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF0
000000000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF0
000000000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF0
000000000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF0
000000000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF0
000000001FF8000000003FFE0000003FFFFFFF00003FFFFFFF00003FFFFFFF00003FFFFF
FF00002B657EE428>I<0003C000000000000007FFC0000000000000FFFFC00000000000
00FFFFC0000000000000FFFFC0000000000000FFFFC000000000000001FFC00000000000
00007FC0000000000000007FC0000000000000003FC0000000000000003FC00000000000
00003FC0000000000000003FC0000000000000003FC0000000000000003FC00000000000
00003FC0000000000000003FC0000000000000003FC0000000000000003FC00000000000
00003FC0000000000000003FC0000000000000003FC0000000000000003FC00000000000
00003FC0000000000000003FC0000000000000003FC0000000000000003FC00000000000
00003FC0000000000000003FC0000000000000003FC0000000000000003FC00000000000
00003FC0000000000000003FC0000000000000003FC0000000000000003FC00000000000
00003FC0000000000000003FC0000000000000003FC0007FE0000000003FC003FFFC0000
00003FC00FFFFF000000003FC03F00FFC00000003FC078001FE00000003FC0F0000FF000
00003FC1C00007F80000003FC3800007FC0000003FC7000003FC0000003FCE000003FE00
00003FCE000001FE0000003FDC000001FE0000003FD8000001FE0000003FF8000000FF00
00003FF0000000FF0000003FF0000000FF0000003FF0000000FF0000003FE0000000FF00
00003FE0000000FF0000003FE0000000FF0000003FC0000000FF0000003FC0000000FF00
00003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF00
00003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF00
00003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF00
00003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF00
00003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF00
00003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF00
00003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF00
00003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF00
00003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000007FE0000001FF80
0000FFF0000003FFC000FFFFFFF003FFFFFFC0FFFFFFF003FFFFFFC0FFFFFFF003FFFFFF
C0FFFFFFF003FFFFFFC042647DE349>104 D<003C000000FF000001FF800003FFC00003
FFC00003FFC00003FFC00003FFC00003FFC00001FF800000FF0000003C00000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
0000000003C00007FFC0007FFFC0007FFFC0007FFFC0007FFFC00001FFC000007FC00000
7FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC00000
3FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC00000
3FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC00000
3FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC00000
3FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC00000
3FC000003FC000003FC000003FC000007FE00000FFF000FFFFFFE0FFFFFFE0FFFFFFE0FF
FFFFE01B5F7DDE23>I<000000F0000003FC000007FE00000FFF00000FFF00000FFF0000
0FFF00000FFF00000FFF000007FE000003FC000000F00000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000001F0000
3FFF0007FFFF0007FFFF0007FFFF0007FFFF00000FFF000003FF000001FF000000FF0000
00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF0000
00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF0000
00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF0000
00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF0000
00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF0000
00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF0000
00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF0000
00FF000000FF000000FF000000FF1F0001FE7FC001FEFFE001FEFFE001FCFFE001FCFFE0
03F8FFE003F8FFE007F07FC007E07F800FC03E001F801FC07F000FFFFE0003FFF800007F
C000207C86DE28>I<0003C00007FFC000FFFFC000FFFFC000FFFFC000FFFFC00001FFC0
00007FC000007FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC0
00003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC0
00003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC0
00003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC0
00003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC0
00003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC0
00003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC0
00003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC0
00003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC0
00003FC000003FC000003FC000003FC000003FC000003FC000007FE00000FFF000FFFFFF
F0FFFFFFF0FFFFFFF0FFFFFFF01C647DE323>108 D<0003C000FFC0000007FE00000007
FFC003FFF800001FFFC00000FFFFC00FFFFE00007FFFF00000FFFFC03F00FF8001F807FC
0000FFFFC078003FC003C001FE0000FFFFC1E0001FE00F0000FF000001FFC3C0000FF01E
00007F8000007FC3800007F81C00003FC000007FC7000007F83800003FC000003FCE0000
03FC7000001FE000003FCC000003FC6000001FE000003FDC000003FCE000001FE000003F
D8000003FCC000001FE000003FF8000001FFC000000FF000003FF0000001FF8000000FF0
00003FF0000001FF8000000FF000003FE0000001FF0000000FF000003FE0000001FF0000
000FF000003FE0000001FF0000000FF000003FE0000001FF0000000FF000003FC0000001
FE0000000FF000003FC0000001FE0000000FF000003FC0000001FE0000000FF000003FC0
000001FE0000000FF000003FC0000001FE0000000FF000003FC0000001FE0000000FF000
003FC0000001FE0000000FF000003FC0000001FE0000000FF000003FC0000001FE000000
0FF000003FC0000001FE0000000FF000003FC0000001FE0000000FF000003FC0000001FE
0000000FF000003FC0000001FE0000000FF000003FC0000001FE0000000FF000003FC000
0001FE0000000FF000003FC0000001FE0000000FF000003FC0000001FE0000000FF00000
3FC0000001FE0000000FF000003FC0000001FE0000000FF000003FC0000001FE0000000F
F000003FC0000001FE0000000FF000003FC0000001FE0000000FF000003FC0000001FE00
00000FF000003FC0000001FE0000000FF000003FC0000001FE0000000FF000003FC00000
01FE0000000FF000003FC0000001FE0000000FF000003FC0000001FE0000000FF000003F
C0000001FE0000000FF000003FC0000001FE0000000FF000003FC0000001FE0000000FF0
00003FC0000001FE0000000FF000003FC0000001FE0000000FF000003FC0000001FE0000
000FF000003FC0000001FE0000000FF000003FC0000001FE0000000FF000003FC0000001
FE0000000FF000007FE0000003FF0000001FF80000FFF0000007FF8000003FFC00FFFFFF
F007FFFFFF803FFFFFFCFFFFFFF007FFFFFF803FFFFFFCFFFFFFF007FFFFFF803FFFFFFC
FFFFFFF007FFFFFF803FFFFFFC663F7CBE6F>I<0003C0007FE000000007FFC003FFFC00
0000FFFFC00FFFFF000000FFFFC03F00FFC00000FFFFC078001FE00000FFFFC0F0000FF0
000001FFC1C00007F80000007FC3800007FC0000007FC7000003FC0000003FCE000003FE
0000003FCE000001FE0000003FDC000001FE0000003FD8000001FE0000003FF8000000FF
0000003FF0000000FF0000003FF0000000FF0000003FF0000000FF0000003FE0000000FF
0000003FE0000000FF0000003FE0000000FF0000003FC0000000FF0000003FC0000000FF
0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF
0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF
0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF
0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF
0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF
0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF
0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF
0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF
0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000007FE0000001FF
800000FFF0000003FFC000FFFFFFF003FFFFFFC0FFFFFFF003FFFFFFC0FFFFFFF003FFFF
FFC0FFFFFFF003FFFFFFC0423F7DBE49>I<000000FF8000000000000FFFF80000000000
3FFFFE0000000000FF007F8000000003FC001FE000000007F00007F00000000FC00001F8
0000003F800000FE0000007F0000007F0000007E0000003F000000FC0000001F800001F8
0000000FC00003F80000000FE00003F000000007E00007F000000007F0000FE000000003
F8000FE000000003F8001FE000000003FC001FC000000001FC001FC000000001FC003FC0
00000001FE003FC000000001FE003FC000000001FE007F8000000000FF007F8000000000
FF007F8000000000FF007F8000000000FF00FF8000000000FF80FF8000000000FF80FF80
00000000FF80FF8000000000FF80FF8000000000FF80FF8000000000FF80FF8000000000
FF80FF8000000000FF80FF8000000000FF80FF8000000000FF80FF8000000000FF80FF80
00000000FF807F8000000000FF007F8000000000FF007FC000000001FF007FC000000001
FF003FC000000001FE003FC000000001FE003FC000000001FE001FE000000003FC001FE0
00000003FC001FE000000003FC000FF000000007F80007F000000007F00007F000000007
F00003F80000000FE00001FC0000001FC00001FC0000001FC00000FE0000003F8000007F
0000007F0000003F800000FE0000001FC00001FC0000000FF00007F800000003FC001FE0
00000000FF007F80000000007FFFFF00000000000FFFF8000000000001FFC00000003941
7CBF42>I<0003C0007FC000000007FFC007FFFC000000FFFFC01FFFFF000000FFFFC07F
00FFC00000FFFFC0F8001FF00000FFFFC3E00007F8000001FFC7800003FC0000007FCF00
0001FE0000007FDE000000FF0000003FFC0000007F8000003FF80000003FC000003FF000
00003FE000003FF00000001FE000003FE00000001FF000003FE00000000FF800003FC000
00000FF800003FC000000007FC00003FC000000007FC00003FC000000003FE00003FC000
000003FE00003FC000000003FE00003FC000000001FF00003FC000000001FF00003FC000
000001FF00003FC000000001FF00003FC000000001FF80003FC000000000FF80003FC000
000000FF80003FC000000000FF80003FC000000000FF80003FC000000000FF80003FC000
000000FF80003FC000000000FF80003FC000000000FF80003FC000000000FF80003FC000
000000FF80003FC000000000FF80003FC000000000FF80003FC000000001FF00003FC000
000001FF00003FC000000001FF00003FC000000001FF00003FC000000001FF00003FC000
000003FE00003FC000000003FE00003FC000000003FC00003FC000000007FC00003FC000
000007FC00003FC00000000FF800003FE00000000FF000003FE00000001FF000003FF000
00003FE000003FF80000003FC000003FF80000007FC000003FFC000000FF8000003FDE00
0001FF0000003FCF000003FE0000003FC7800007FC0000003FC3C0000FF00000003FC1F0
003FE00000003FC07E01FF800000003FC03FFFFE000000003FC00FFFF8000000003FC000
FF80000000003FC0000000000000003FC0000000000000003FC0000000000000003FC000
0000000000003FC0000000000000003FC0000000000000003FC0000000000000003FC000
0000000000003FC0000000000000003FC0000000000000003FC0000000000000003FC000
0000000000003FC0000000000000003FC0000000000000003FC0000000000000003FC000
0000000000003FC0000000000000003FC0000000000000003FC0000000000000003FC000
0000000000003FC0000000000000007FE000000000000000FFF0000000000000FFFFFFF0
0000000000FFFFFFF00000000000FFFFFFF00000000000FFFFFFF00000000000415B7DBE
49>I<00078003F80007FF800FFF00FFFF803FFFC0FFFF807C0FE0FFFF81F01FE0FFFF81
E03FF001FF83803FF0007F87003FF0007F8F003FF0003F8E003FF0003F9C001FE0003F9C
000FC0003F98000300003FB8000000003FB8000000003FB0000000003FF0000000003FF0
000000003FE0000000003FE0000000003FE0000000003FE0000000003FE0000000003FC0
000000003FC0000000003FC0000000003FC0000000003FC0000000003FC0000000003FC0
000000003FC0000000003FC0000000003FC0000000003FC0000000003FC0000000003FC0
000000003FC0000000003FC0000000003FC0000000003FC0000000003FC0000000003FC0
000000003FC0000000003FC0000000003FC0000000003FC0000000003FC0000000003FC0
000000003FC0000000003FC0000000003FC0000000003FC0000000003FC0000000003FC0
000000003FC0000000003FC0000000003FC0000000007FE000000000FFF8000000FFFFFF
FC0000FFFFFFFC0000FFFFFFFC0000FFFFFFFC00002C3F7CBE33>114
D<0000FFE00180000FFFFC0380007FFFFF078001FF001FCF8003F80003EF8007E00001FF
800FC00000FF801F8000007F803F0000003F803E0000001F807E0000000F807C0000000F
807C0000000F80FC0000000780FC0000000780FC0000000780FC0000000380FE00000003
80FE0000000380FF0000000380FF80000003807FC0000003807FE0000000007FF8000000
003FFE000000001FFFF00000000FFFFF80000007FFFFF8000003FFFFFF000001FFFFFFC0
00007FFFFFF000001FFFFFF8000007FFFFFE0000007FFFFF00000003FFFF800000003FFF
C000000003FFC000000000FFE0000000007FE0E00000001FF0E00000000FF0E00000000F
F8F000000007F8F000000003F8F000000003F8F000000003F8F800000001F8F800000001
F8F800000001F8FC00000001F8FC00000001F8FE00000001F0FE00000003F0FF00000003
F0FF00000003E0FF80000007E0FFC000000FC0FFE000000F80FDF000001F80F8F800007F
00F83E0000FC00F01FC00FF800F007FFFFE000E001FFFF8000C0003FF800002D417DBF34
>I<00003800000000003800000000003800000000003800000000003800000000003800
00000000380000000000780000000000780000000000780000000000780000000000F800
00000000F80000000000F80000000001F80000000001F80000000001F80000000003F800
00000003F80000000007F8000000000FF8000000001FF8000000001FF8000000007FF800
000000FFF800000003FFF80000000FFFFFFFFF00FFFFFFFFFF00FFFFFFFFFF00FFFFFFFF
FF000007F80000000007F80000000007F80000000007F80000000007F80000000007F800
00000007F80000000007F80000000007F80000000007F80000000007F80000000007F800
00000007F80000000007F80000000007F80000000007F80000000007F80000000007F800
00000007F80000000007F80000000007F80000000007F80000000007F80000000007F800
00000007F80000000007F80000000007F80000000007F80000000007F80000000007F800
00000007F80000000007F80000000007F80000E00007F80000E00007F80000E00007F800
00E00007F80000E00007F80000E00007F80000E00007F80000E00007F80000E00007F800
00E00007F80000E00007F80000E00007F80000E00007F80000E00003FC0001C00003FC00
01C00003FC0001C00003FC0003C00001FE0003800001FE0007800000FF00070000007F80
0F0000003FC01E0000001FF07C0000000FFFF800000003FFE0000000007F80002B597FD7
33>I<0003C00000000F000007FFC000001FFF0000FFFFC00003FFFF0000FFFFC00003FF
FF0000FFFFC00003FFFF0000FFFFC00003FFFF000001FFC0000007FF0000007FC0000001
FF0000007FC0000001FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000
FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000
FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000
FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000
FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000
FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000
FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000
FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000
FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000
FF0000003FC0000000FF0000003FC0000001FF0000003FC0000001FF0000003FC0000001
FF0000003FC0000003FF0000003FC0000003FF0000003FC0000003FF0000003FC0000007
FF0000001FC0000006FF0000001FE000000EFF0000001FE000001CFF0000000FE000001C
FF0000000FF0000038FF80000007F0000070FF80000003F80001E0FFE0000001FE0003C0
FFFFC00000FFC01F80FFFFC000003FFFFE00FFFFC000000FFFF800FFFFC0000000FFC000
FF800042407DBE49>I<7FFFFFC0000FFFFFE07FFFFFC0000FFFFFE07FFFFFC0000FFFFF
E07FFFFFC0000FFFFFE000FFFF000003FFFC00003FFE000001FFE000000FFC000001FF80
00000FFC000000FE00000007FC000000FC00000003FE000001F800000001FF000001F000
000000FF800003E000000000FF800003C0000000007FC0000780000000003FE0000F0000
0000001FF0000E00000000001FF0001E00000000000FF8003C000000000007FC00780000
00000003FE00F0000000000003FE00E0000000000001FF01E0000000000000FF83C00000
000000007FC7800000000000003FC7000000000000003FEF000000000000001FFE000000
000000000FFC0000000000000007F80000000000000007FC0000000000000003FE000000
0000000001FF0000000000000003FF0000000000000003FF8000000000000007FFC00000
000000000F3FE00000000000001E1FE00000000000003C1FF0000000000000380FF80000
000000007807FC000000000000F003FC000000000001E003FE000000000003C001FF0000
00000003C000FF80000000000780007FC0000000000F00007FC0000000001E00003FE000
0000001C00001FF0000000003C00000FF8000000007800000FF800000000F0000007FC00
000001F0000003FE00000003E0000001FF00000007E0000001FF0000000FE0000000FF80
00003FE0000000FFC00000FFF0000001FFE00007FFF8000003FFFC00FFFFFC00000FFFFF
F8FFFFFC00000FFFFFF8FFFFFC00000FFFFFF8FFFFFC00000FFFFFF8453E80BD46>120
D<FFFFFF800001FFFFE0FFFFFF800001FFFFE0FFFFFF800001FFFFE0FFFFFF800001FFFF
E001FFF80000007FFE00007FE00000001FF800007FE00000001FE000003FE00000000FC0
00003FE00000000F8000001FE00000000F8000001FF00000000F0000000FF00000000E00
00000FF00000000E00000007F80000001C00000007F80000001C00000007FC0000003C00
000003FC0000003800000003FC0000003800000001FE0000007000000001FE0000007000
000001FF000000F000000000FF000000E000000000FF000000E0000000007F800001C000
0000007F800001C0000000007FC00003C0000000003FC0000380000000003FC000038000
0000003FE0000780000000001FE0000700000000001FF0000F00000000000FF0000E0000
0000000FF0000E00000000000FF8001E000000000007F8001C000000000007FC003C0000
00000003FC0038000000000003FC0038000000000003FE0078000000000001FE00700000
00000001FF00F0000000000000FF00E0000000000000FF00E0000000000000FF81E00000
000000007F81C00000000000007FC3C00000000000003FC3800000000000003FC3800000
000000003FE7800000000000001FE7000000000000001FFF000000000000000FFE000000
000000000FFE000000000000000FFE0000000000000007FC0000000000000007FC000000
0000000003F80000000000000003F80000000000000003F80000000000000001F0000000
0000000001F00000000000000000E00000000000000000E00000000000000001E0000000
0000000001C00000000000000003C0000000000000000380000000000000000380000000
000000000780000000000000000700000000000000000F00000000000000000E00000000
000000000E00000000000000001E00000000000000001C00000000000000003C00000000
001F80003800000000003FC0003800000000007FE0007000000000007FE0007000000000
007FE000E000000000007FE001E000000000007FE001C000000000007FC0038000000000
003F80078000000000003F000F0000000000001E003E0000000000000FC0FC0000000000
0007FFF800000000000001FFE0000000000000007F00000000000000435B7FBD46>I
E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: Letter

%%EndSetup
%%Page: 1 1
1 0 bop 38 494 a FD(On)44 b(the)g(Complexit)l(y)g(of)e(Co)t(ordinated)i
(Displa)l(y)h(of)d(Multimedia)k(Ob)7 b(jects)3861 442
y FC(\003)604 801 y FB(Martha)33 b(L.)g(Escobar{Molano)392
b(Shahram)32 b(Ghandeharizadeh)443 952 y(Computer)g(Science)i(and)f
(Engineering)151 b(Computer)33 b(Science)g(Departmen)m(t)606
1103 y(Univ)m(ersit)m(y)h(of)e(South)h(Florida)261 b(Univ)m(ersit)m(y)
33 b(of)f(Southern)h(California)643 1254 y(T)-8 b(ampa,)32
b(FL)g(33620,)f(U.S.A.)344 b(Los)33 b(Angeles,)g(CA)g(90089,)f(U.S.A.)
682 1405 y FA(mescobar)s FB(@)p FA(csee:usf)5 b(:edu)595
b(shahr)s(am)p FB(@)p FA(cs:usc:edu)1781 1837 y Fz(Abstract)323
1997 y Fy(A)31 b(m)n(ultimedia)f(presen)n(tation)h(can)h(b)r(e)f
(represen)n(ted)g(as)h(a)g(collection)h(of)f(ob)t(jects)h(with)e(temp)r
(oral)h(constrain)n(ts)208 2116 y(that)23 b(de\014ne)g(when)h(the)g(ob)
t(jects)h(are)f(rendered.)33 b(The)25 b(displa)n(y)f(of)g(a)g(presen)n
(tation)h(is)f(termed)f Fx(c)l(o)l(or)l(dinate)l(d)j
Fy(when)e(the)208 2234 y(displa)n(y)f(of)h(its)g(ob)t(jects)g(resp)r
(ects)g(the)f(pre-sp)r(eci\014ed)g(temp)r(oral)h(constrain)n(ts.)34
b(Otherwise,)25 b(the)e(displa)n(y)g(migh)n(t)f(su\013er)208
2353 y(from)28 b(failures)h(that)f(translate)h(in)n(to)f(meaningless)h
(scenarios.)44 b(F)-6 b(or)28 b(example,)g(a)g(c)n(hase)h(scene)f(b)r
(et)n(w)n(een)h(a)f(dinosaur)208 2472 y(and)d(a)h(jeep)g(b)r(ecomes)f
(meaningless)i(if)f(the)f(system)g(fails)j(to)d(render)h(the)f
(dinosaur)h(when)g(displa)n(ying)g(the)f(scene.)323 2591
y(A)20 b(previous)g(study)g([EMGI96)r(])g(in)n(tro)r(duced)h(a)f
(resource)i(sc)n(heduling)e(tec)n(hnique)g(that)g(guaran)n(tees)i(a)f
(co)r(ordinated)208 2709 y(displa)n(y)d(of)h(a)g(presen)n(tation)f(for)
i(single-disk)e(arc)n(hitectures.)33 b(This)19 b(tec)n(hnique)e
(minimizes)h(b)r(oth)g(latency)g(and)g(memory)208 2828
y(requiremen)n(ts)24 b(and)h(has)g(a)h(w)n(orst)g(case)g(time)f
(complexit)n(y)f Fw(O)r Fy(\()p Fv(n)13 b Fy(lg)i Fv(n)p
Fy(\).)34 b(This)27 b(pap)r(er)e(extends)g(the)f(previous)i(study)e(to)
208 2947 y(m)n(ulti-disk)c(arc)n(hitectures)j(and)f(demonstrates)h(the)
f(follo)n(wing:)35 b(\(1\))22 b(the)h(computation)e(of)i(a)g(resource)g
(sc)n(hedule)g(that)208 3065 y(supp)r(orts)29 b(a)i(co)r(ordinated)g
(displa)n(y)f(and)f(yields)h(the)g(minim)n(um)d(latency)j(is)g
(NP-Hard,)h(and)e(\(2\))h(the)g(computation)208 3184
y(of)25 b(the)f(minim)n(um)d(memory)h(requiremen)n(ts)h(to)h(supp)r
(ort)g(a)h(co)r(ordinated)g(displa)n(y)f(within)h(a)g(pre-sp)r
(eci\014ed)f(latency)g(is)208 3303 y(NP-Hard.)208 3551
y Fu(Keyw)m(ords:)40 b Ft(Multimedia,)31 b(Storage)d(Managemen)n(t,)h
(Resource)g(Sc)n(heduling,)h(Non-textual)f(Data)h(T)n(yp)r(es,)208
3681 y(Complexit)n(y)-7 b(.)p 0 5125 1560 4 v 91 5179
a Fs(\003)127 5202 y Fr(This)31 b(researc)n(h)h(w)n(as)g(supp)r(orted)g
(in)g(part)g(b)n(y)f(NSF)h(gran)n(ts)g(IRI-9222926,)j(IRI-9258362)f
(\(NYI)e(a)n(w)n(ard\),)i(and)e(CD)n(A-9216321,)j(and)d(a)0
5305 y(unrestricted)25 b(cash/equipmen)n(t)g(gift)e(from)f(Hewlett-P)n
(ac)n(k)l(ard.)0 5407 y Fq(T)-7 b(o)27 b(app)r(ear)f(in)h(Theoretical)f
(Computer)f(Science.)p eop
%%Page: 1 2
1 1 bop 1030 2116 a @beginspecial 0 @llx 0 @lly 220.750000
@urx 253.009995 @ury 2207 @rwi @setspecial
%%BeginDocument: sarchit.ps
%
% Frame ps_prolog 5.0, for use with Frame 5.0 products
% This ps_prolog file is Copyright (c) 1986-1995 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameMaker/SGML and FrameViewer as long as this 
% copyright notice is preserved.
%
% FrameMaker users specify the proper paper size for each print job in the
% "Print" dialog's "Printer Paper Size" "Width" and "Height~ fields.  If the
% printer that the PS file is sent to does not support the requested paper
% size, or if there is no paper tray of the proper size currently installed, 
% then the job will not be printed.  The following flag, if set to true, will
% cause the job to print on the default paper in such cases.
/FMAllowPaperSizeMismatch            true def
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to true, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% The following is a set of predefined optimal frequencies and angles for various
% common dpi settings. This is taken from "Advances in Color Separation Using
% PostScript Software Technology," from Adobe Systems (3/13/89 P.N. LPS 0043)
% and corrolated with information which is in various PPD (4.0) files.
%
% The "dpiranges" figure is the minimum dots per inch device resolution which
% can support this setting. The "low" and "high" values are controlled by the
% setting of the FMUseHighFrequencyScreens flag above. The "TDot" flags control
% the use of the "Yellow Triple Dot" feature whereby the frequency id divided by
% three, but the dot function is "trippled" giving a block of 3x3 dots per cell.
%
% PatFreq is a compromise pattern frequency for ps Level 2 printers which is close
% to the ideal WYSIWYG pattern frequency of 9 repetitions/inch but does not beat
% (too badly) against the screen frequencies of any separations for that DPI.
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (5.0) def 
/fMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	fMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto show
	72 220 moveto show
	FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!  Check installation;)
		(also check ~/fminit and ./fminit for old versions) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(Adobe's PostScript Language Reference Manual, 2nd Edition, section H.2.4)
	(says your EPS file is not valid, as it calls X              )
	dup dup (X) search pop exch pop exch pop length 
	5 -1 roll 
	putinterval 
	FMFAILURE
	} def
/fmConcatProcs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin [
	/ALDsave
	/FMdicttop
	/FMoptop
	/FMpointsize
	/FMsaveobject
	/b
	/bitmapsave
	/blut
	/bpside
	/bs
	/bstring
	/bwidth
	/c
	/cf
	/cs
	/cynu
	/depth
	/edown
	/fh
	/fillvals
	/fw
	/fx
	/fy
	/g
	/gfile
	/gindex
	/grnt
	/gryt
	/gstring
	/height
	/hh
	/i
	/im
	/indx
	/is
	/k
	/kk
	/landscape
	/lb
	/len
	/llx
	/lly
	/m
	/magu
	/manualfeed
	/n
	/offbits
	/onbits
	/organgle
	/orgbangle
	/orgbfreq
	/orgbproc
	/orgbxfer
	/orgfreq
	/orggangle
	/orggfreq
	/orggproc
	/orggxfer
	/orgmatrix
	/orgproc
	/orgrangle
	/orgrfreq
	/orgrproc
	/orgrxfer
	/orgxfer
	/pagesave
	/paperheight
	/papersizedict
	/paperwidth
	/pos
	/pwid
	/r
	/rad
	/redt
	/sl
	/str
	/tran
	/u
	/urx
	/ury
	/val
	/width
	/width
	/ws
	/ww
	/x
	/x1
	/x2
	/xindex
	/xpoint
	/xscale
	/xx
	/y
	/y1
	/y2
	/yelu
	/yindex
	/ypoint
	/yscale
	/yy
] { 0 def } forall
/FmBD {bind def} bind def
systemdict /pdfmark known {
	/fMAcrobat true def
	
	/FmPD /pdfmark load def
	
	
	/FmPT /show load def
	
	
	currentdistillerparams /CoreDistVersion get 2000 ge {
	
		
		/FmPD2 /pdfmark load def
		
		
		
		
		
		/FmPA { mark exch /Dest exch 5 3 roll 
				/View [ /XYZ null 6 -2 roll FmDC exch pop null] /DEST FmPD 
		}FmBD
	} {
		
		/FmPD2 /cleartomark load def
		/FmPA {pop pop pop}FmBD
	} ifelse
} {
	
	/fMAcrobat false def
	/FmPD /cleartomark load def
	/FmPD2 /cleartomark load def
	/FmPT /pop load def
	/FmPA {pop pop pop}FmBD
} ifelse
/FmDC {
	transform fMDefaultMatrix itransform cvi exch cvi exch
}FmBD
/FmBx {
	dup 3 index lt {3 1 roll exch} if 
	1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/fMNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		RealSetrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
fMLevel1 { 
	
	
	
	/patScreenDict 7 dict dup begin
		<0f1e3c78f0e1c387> [ 45  { pop } {exch pop} 		.5   2 sqrt] FmBD
		<0f87c3e1f0783c1e> [ 135 { pop } {exch pop}			.5   2 sqrt] FmBD
		<cccccccccccccccc> [ 0   { pop } dup				.5   2	   ] FmBD
		<ffff0000ffff0000> [ 90  { pop } dup				.5   2	   ] FmBD
		<8142241818244281> [ 45  { 2 copy lt {exch} if pop}	dup .75  2 sqrt] FmBD
		<03060c183060c081> [ 45  { pop } {exch pop}			.875 2 sqrt] FmBD
		<8040201008040201> [ 135 { pop } {exch pop}			.875 2 sqrt] FmBD
	end def
} { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} ifelse
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				fMAcrobat not FMPColor graymode and and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not fMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/fMDefaultMatrix matrix defaultmatrix def
/fMatrix2 matrix def
/dpi    72 0 fMDefaultMatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 fMDefaultMatrix dtransform exch atan def
	sangle fMatrix2 rotate 
	fMDefaultMatrix fMatrix2 concatmatrix 
	dup 0 get /sflipx exch def
	    3 get /sflipy exch def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	fMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /fMNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	fMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{papersizefailure} if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{2 dict
		 dup /PageSize [paperwidth paperheight] put
		 manualfeed {dup /ManualFeed manualfeed put} if
		 {setpagedevice} stopped {papersizefailure} if
		}
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			fMNegative {
				1 1 4 { 
					pop { 1 exch sub } fmConcatProcs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		fMNegative {
			{ 1 exch sub } fmConcatProcs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/papersizefailure {
	FMAllowPaperSizeMismatch not
		{
(The requested paper size is not available in any currently-installed tray)
(Edit the PS file to "FMAllowPaperSizeMismatch true" to use default tray)
		 FMFAILURE } if
	} def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYK } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYKGRAY } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
fMLevel1 {
	/fmGetFlip {
		fMatrix2 exch get mul 0 lt { -1 } { 1 } ifelse
	} FmBD
} if
/setPatternMode {
	fMLevel1 {
		2 index patScreenDict exch known {
			pop pop
			patScreenDict exch get aload pop 
			freq 								
			mul									
			5 2 roll							
			fMatrix2 currentmatrix 1 get 0 ne {
				3 -1 roll 90 add 3 1 roll 		
				sflipx 1 fmGetFlip sflipy 2 fmGetFlip neg mul
			} {  								
				sflipx 0 fmGetFlip sflipy 3 fmGetFlip mul 
			} ifelse
			0 lt {exch pop} {pop} ifelse 		
			fMNegative { 
				{neg} fmConcatProcs 			
			} if
			bind
			
			
			
			systemdict /setscreen get exec		
			/FrameCurGray exch def
		} {
			/bwidth  exch def
			/bpside  exch def
			/bstring exch def
			/onbits 0 def  /offbits 0 def
			freq sangle landscape {90 add} if 
				{/ypoint exch def
				 /xpoint exch def
				 /xindex xpoint 1 add 2 div bpside mul cvi def
				 /yindex ypoint 1 add 2 div bpside mul cvi def
				 bstring yindex bwidth mul xindex 8 idiv add get
				 1 7 xindex 8 mod sub bitshift and 0 ne fMNegative {not} if
				 {/onbits  onbits  1 add def 1}
				 {/offbits offbits 1 add def 0}
				 ifelse
				}
				setscreen
			offbits offbits onbits add div fMNegative {1.0 exch sub} if
			/FrameCurGray exch def
		} ifelse
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		fMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode fMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode fMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/rip4 { 
	   
	  
	  kis cis copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  cis mis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  mis yis copy pop 
	  dup dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  yis kis copy pop 
	  3 mul is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
/wbytes { 
      dup dup
      8 gt { pop 8 idiv mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	cvtProc                
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def 
	cvtProc              
	/is width depth wbytes string def
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
fMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/kk cynu magu min yelu min def
		/u kk currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 kk currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch fmConcatProcs settransfer
} bind def
/BITMAPCOLOR { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def
	fMLevel1 {	
		colorsetup
		/is width depth wbytes string def
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is width depth wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	fMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {ip} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/depth 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip pop ris} {gis} {bis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCMYKc { 
	/depth 32 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip4 pop cis} {mis} {yis} {kis} true 4 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYK { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /mis width string def
        /yis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf mis readhexstring pop } 
        { cf yis readhexstring pop } 
        { cf kis readhexstring pop } 
        true 4 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/depth 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop ris gis bis width gray} image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAYc { 
	/depth 32 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop cis mis yis kis width cgray} image
        bitmapsave restore 
        grestore
        } bind def
/cgray { 
        /ww exch def
        /k exch def
        /y exch def
        /m exch def
        /c exch def
        0 1 ww 1 sub { /i exch def c i get m i get y i get k i get CMYKtoRGB
				.144 mul 3 1 roll .587 mul 3 1 roll .299 mul add add
				c i 3 -1 roll floor cvi put } for
        c
 		} bind def
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop width gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /yis width string def
        /mis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf mis readhexstring pop 
          cf yis readhexstring pop 
          cf kis readhexstring pop width cgray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
(5.0) FMVERSION
1 1 0 0 220.75 253.01 0 1 1 FMDOCUMENT
0 0 /Times-Roman FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
220.75 253.01 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
37.86 105.26 107.39 104.75 137.63 1.26 7.63 1.26 4 Y
6 X
0 0 0 1 0 0 0 K
V
100.91 18.58 M
 100.91 28.71 100.91 28.71 111.05 28.71 D
 121.2 28.71 121.2 28.71 121.2 18.58 D
 121.2 8.44 121.2 8.44 111.05 8.44 D
 100.91 8.44 100.91 8.44 100.91 18.58 D
O
7 X
V
0.5 H
0 Z
0 X
N
3 X
90 450 10.14 2.53 111.05 26.18 G
0 X
90 450 10.14 2.53 111.05 26.18 A
23.23 18.67 M
 23.23 28.8 23.23 28.8 33.37 28.8 D
 43.52 28.8 43.52 28.8 43.52 18.67 D
 43.52 8.54 43.52 8.54 33.37 8.54 D
 23.23 8.54 23.23 8.54 23.23 18.67 D
O
7 X
V
0 X
N
3 X
90 450 10.14 2.53 33.37 26.27 G
0 X
90 450 10.14 2.53 33.37 26.27 A
0 10 Q
(Memory) 54.43 85.55 T
(D Disks) 144.24 14.69 T
72.45 129.31 72.45 135.1 2 L
2 H
N
90 450 1 1 90 72.45 129.31 GG
69.68 130.31 72.45 135.1 75.22 130.31 3 L
N
72.45 106.7 72.45 129.31 2 L
3 X
V
2 Z
0 X
N
6.77 224.65 33.85 244.52 R
3 X
V
0.5 H
0 Z
0 X
N
9.04 227.02 31.86 242.22 7.6 RR
7 X
V
0 X
N
(Display Stations) 154.9 232.2 T
46.27 18.67 M
 46.27 28.8 46.27 28.8 56.41 28.8 D
 66.55 28.8 66.55 28.8 66.55 18.67 D
 66.55 8.54 66.55 8.54 56.41 8.54 D
 46.27 8.54 46.27 8.54 46.27 18.67 D
O
7 X
V
0 X
N
3 X
90 450 10.14 2.53 56.41 26.27 G
0 X
90 450 10.14 2.53 56.41 26.27 A
(......) 75.85 14.2 T
72.67 45.73 72.67 39.94 2 L
2 H
N
90 450 1 1 270 72.67 45.73 GG
75.44 44.73 72.67 39.94 69.9 44.73 3 L
N
72.67 64.7 72.67 70.5 2 L
N
90 450 1 1 90 72.67 64.7 GG
69.9 65.7 72.67 70.5 75.44 65.7 3 L
N
72.67 45.73 72.67 64.7 2 L
3 X
V
0 X
N
(Display Schedule) 79.12 118.27 T
(Resource Schedule) 80.11 53.46 T
38.51 105.51 106.91 105.51 2 L
0.5 H
2 Z
N
29.25 72.51 116.37 72.51 2 L
N
18.11 37.01 127.91 37.01 2 L
N
8.71 1.51 138.31 1.51 2 L
N
100.51 106.01 109.51 115.01 R
7 X
V
17.01 37.51 6.63 1.26 2 L
0 X
N
127.13 36.76 138.01 0.01 2 L
N
38.01 105.51 28.51 72.01 2 L
N
107.01 105.51 116.01 73.51 2 L
N
90 450 31 21.75 72.51 159.26 A
(Network) 56.51 156.01 T
109.77 224.65 136.85 244.52 R
3 X
V
0 Z
0 X
N
112.04 227.02 134.86 242.22 7.6 RR
7 X
V
0 X
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
42.77 224.15 69.85 244.02 R
3 X
V
0 X
N
45.04 226.52 67.86 241.72 7.6 RR
7 X
V
0 X
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(......) 80.85 234.7 T
0.01 215.51 144.01 253.01 R
2 Z
N
74.45 204.31 74.45 210.1 2 L
2 H
0 Z
N
90 450 1 1 90 74.45 204.31 GG
71.68 205.31 74.45 210.1 77.22 205.31 3 L
N
74.45 181.7 74.45 204.31 2 L
3 X
V
2 Z
0 X
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndDocument
 @endspecial 1398 2411 a Ft(Figure)27 b(1:)36 b(System)28
b(Arc)n(hitecture)0 2676 y Fp(1)135 b(In)l(tro)t(duction)0
2924 y Ft(Multiple)32 b(media)f(t)n(yp)r(es)h(are)e(b)r(ecoming)h
(widely)g(used)h(in)f(a)g(v)-5 b(ariet)n(y)31 b(of)g(\014elds)g(suc)n
(h)g(as)g(medicine,)h(education,)g(science,)0 3053 y(and)25
b(en)n(tertainmen)n(t.)36 b(A)26 b(c)n(hallenging)e(task)h(is)h(the)f
(storage)f(managemen)n(t)h(of)g(non-textual)g(media)g(t)n(yp)r(es)h
(\(video,)g(audio,)0 3183 y(animations,)21 b(graphics,)f(images\).)33
b(These)20 b(media)g(t)n(yp)r(es)f(migh)n(t)h(require)f(high)h(v)n
(olumes)f(of)h(storage,)f(high)h(bandwidth)g(and)0 3312
y(con)n(tin)n(uous)25 b(displa)n(y)-7 b(.)36 b(F)-7 b(urthermore,)25
b(media)h(ob)5 b(jects)26 b(migh)n(t)g(b)r(e)h(sync)n(hronized)e(and)h
(shared)f(b)n(y)h(sev)n(eral)e(presen)n(tations.)0 3442
y(F)-7 b(or)33 b(example,)h(consider)e(a)h(presen)n(tation)f(where)h
(the)g(displa)n(y)g(of)g(a)g(computer)f(generated)g(animation)h(is)g(o)
n(v)n(erlaid)e(on)0 3571 y(a)g(video)h(clip.)49 b(This)32
b(animation)f(consists)g(of)g(3D)h(represen)n(tations)e(of)i(t)n(w)n(o)
e(dinosaurs,)i(eac)n(h)f(dinosaur's)f(p)r(ositions)h(on)0
3701 y(the)d(screen)e(and)h(the)h(times)g(of)f(their)g(app)r(earances,)
f(and)h(rendering)f(features)h(suc)n(h)g(as)g(ligh)n(t)g(in)n(tensit)n
(y)g(and)g(viewp)r(oin)n(t.)0 3830 y(The)f(video)g(clip)g(consists)f
(of)i(a)e(sequence)h(of)g(frames)f(that)i(m)n(ust)f(b)r(e)g(displa)n(y)
n(ed)g(at)g(a)f(pre-sp)r(eci\014ed)h(rate)f(\(30)h(frames)f(p)r(er)0
3960 y(second\).)36 b(The)26 b(displa)n(y)f(of)h(the)g(video)f(clip)h
(m)n(ust)g(b)r(e)g(sync)n(hronized)f(with)h(that)g(of)g(the)g
(animation,)g(whic)n(h)g(in)g(turn)g(m)n(ust)0 4089 y(satisfy)k(the)g
(temp)r(oral)g(constrain)n(ts)f(sp)r(eci\014ed)h(b)n(y)g(eac)n(h)f
(dinosaur's)g(times)h(of)g(app)r(earance.)43 b(Also,)31
b(the)f(video)g(clip)g(and)0 4219 y(the)e(3D)g(represen)n(tations)d(of)
j(a)f(dinosaur)f(migh)n(t)i(b)r(e)g(shared)e(indep)r(enden)n(tly)j(b)n
(y)e(sev)n(eral)f(presen)n(tations.)177 4384 y(W)-7 b(e)27
b(assume)f(a)g(hardw)n(are)e(arc)n(hitecture)h(\(Figure)i(1\))f
(consisting)g(of)g Fo(D)i Ft(disks,)f(and)f(a)g(limited)h(amoun)n(t)f
(of)h(memory)-7 b(.)0 4514 y(All)30 b(m)n(ultimedia)h(ob)5
b(jects)29 b(reside)g(on)h(disk.)44 b(When)30 b(a)g(user)f(requests)g
(a)h(presen)n(tation,)f(the)h(storage)e(manager)h(retriev)n(es)0
4643 y(participating)23 b(ob)5 b(jects)23 b(from)g(disk)g(in)n(to)g
(memory)g(so)g(that)h(they)f(can)g(b)r(e)h(transmitted)g(o)n(v)n(er)d
(the)j(net)n(w)n(ork)e(and)i(presen)n(ted)0 4773 y(to)h(the)h(user)e
(according)g(to)h(their)g(temp)r(oral)f(constrain)n(ts)g(\(e.g.,)i
(times)f(of)g(a)g(dinosaur's)f(app)r(earance,)g(\014rst)h(frame's)g
(time)0 4902 y(of)32 b(displa)n(y\).)49 b(T)-7 b(o)32
b(illustrate,)g(supp)r(ose)g(that)g(b)r(oth)g(transmission)f(time)h(o)n
(v)n(er)e(the)i(net)n(w)n(ork)f(and)g(time)i(to)f(render)f(a)g(3D)0
5032 y(ob)5 b(ject)25 b(on)f(the)h(screen)f(are)g(negligible.)35
b(Then)25 b(the)g(storage)e(manager)g(m)n(ust)i(ha)n(v)n(e)e(in)i
(memory)f(frame)h(1)f(during)g(the)h(\014rst)27 5129
y Fn(1)p 10 5143 67 4 v 10 5190 a(30)111 5161 y Ft(seconds,)f(frame)g
(2)g(during)h(the)f(second)1420 5129 y Fn(1)p 1403 5143
V 1403 5190 a(30)1504 5161 y Ft(seconds,)h(and)f(so)g(on.)35
b(The)25 b(3D)g(represen)n(tation)d(of)j(a)f(dinosaur)f(m)n(ust)i(also)
0 5291 y(b)r(e)j(in)g(memory)f(during)g(its)h(times)f(of)h(app)r
(earance.)1929 5656 y(1)p eop
%%Page: 2 3
2 2 bop 177 90 a Ft(This)27 b(pap)r(er)f(studies)h(the)g(complexit)n(y)
f(of)h(sc)n(heduling)f(the)h(deliv)n(ery)f(of)h(ob)5
b(jects)26 b(from)h(disk)f(to)h(memory)f(according)0
220 y(to)41 b(their)f(temp)r(oral)h(constrain)n(ts.)75
b(This)41 b(problem)f(\(termed)h Fm(r)l(esour)l(c)l(e)h(sche)l(duling)p
Ft(\))g(is)e(fundamen)n(tal)h(for)g(a)f(storage)0 349
y(managemen)n(t)34 b(system)h(that)g(supp)r(orts)g(m)n(ultimedia)g
(applications)f(suc)n(h)h(as)f(computer)h(animation)f(and)h(co)r
(ordinated)0 479 y(use)27 b(of)h(m)n(ultiple)g(streams)f(\(e.g.,)g
(video,)g(audio\))h(in)g(m)n(ultimedia)f(do)r(cumen)n(ts.)177
644 y(An)c(un)n(balanced)e(placemen)n(t)h(of)g(ob)5 b(jects)21
b(across)f(the)i(disks)g(with)g(resp)r(ect)g(to)g(a)g(presen)n(tation)e
(migh)n(t)i(cause)g(a)f(subset)0 774 y(of)28 b(disks)h(to)f(b)r(ecome)g
(b)r(ottlenec)n(ks.)40 b(The)28 b(ob)5 b(jects)29 b(referenced)e(b)n(y)
i(the)f(presen)n(tation)g(during)g(a)g(p)r(erio)r(d)g(migh)n(t)h
(reside)f(in)0 903 y(a)e(subset)f(of)h(disks.)36 b(These)26
b(disks)f(migh)n(t)h(b)r(ecome)g(b)r(ottlenec)n(ks)g(during)f(the)i
(displa)n(y)e(of)h(the)g(presen)n(tation.)35 b(The)26
b(system)0 1033 y(can)f(detect)h(these)g(b)r(ottlenec)n(ks)f(in)h(adv)
-5 b(ance)24 b(b)r(ecause)i(when)f(a)g(request)g(arriv)n(es,)f(the)i
(iden)n(tit)n(y)f(of)h(ob)5 b(jects)25 b(participating)0
1162 y(in)c(the)f(presen)n(tation,)h(their)f(temp)r(oral)g(constrain)n
(ts,)g(and)h(their)f(data)g(placemen)n(t)g(on)g(disk)g(are)f(pre-sp)r
(eci\014ed.)34 b(A)21 b(resource)0 1292 y(sc)n(hedule)30
b(migh)n(t)h(manipulate)g(the)g(data)g(placemen)n(t)f(to)h(a)n(v)n(oid)
e(these)i(b)r(ottlenec)n(ks.)47 b(T)-7 b(o)30 b(c)n(hange)g(the)h(data)
f(placemen)n(t,)0 1421 y(the)e(sc)n(heduler)f(can)g(replicate)g(or)g
(migrate)f(ob)5 b(jects)27 b(from)h(one)f(disk)g(to)h(another.)177
1586 y(A)g(resource)e(sc)n(hedule)h(that)h(supp)r(orts)f(a)g(co)r
(ordinated)f(displa)n(y)h(of)h(a)f(presen)n(tation)f(consists)h(of)g
(retriev)-5 b(als,)27 b(migra-)0 1716 y(tions,)d(and)f(replications.)34
b(Once)23 b(the)h(displa)n(y)e(starts,)i(the)f(sc)n(hedule)g(m)n(ust)h
(render)e(ob)5 b(jects)23 b(memory)f(residen)n(t)h(according)0
1845 y(to)33 b(their)g(temp)r(oral)g(constrain)n(ts.)53
b(T)-7 b(o)32 b(satisfy)h(these)h(constrain)n(ts,)f(the)h(system)f(can)
g(either)g(retriev)n(e)f(the)h(ob)5 b(jects)33 b(im-)0
1975 y(mediately)28 b(b)r(efore)f(their)h(displa)n(y)-7
b(,)27 b(pre-fetc)n(h)g(them)i(at)e(an)h(earlier)e(time)i(and)g(ha)n(v)
n(e)e(them)j(memory)e(residen)n(t)g(un)n(til)h(they)0
2104 y(are)33 b(displa)n(y)n(ed,)i(or)f(manipulate)g(the)h(data)f
(placemen)n(t)g(to)g(retriev)n(e)f(them)i(from)f(disks)g(di\013eren)n
(t)g(from)g(their)h(original)0 2234 y(lo)r(cation.)177
2399 y(In)j(Section)g(2,)i(w)n(e)e(presen)n(t)f(the)i(formal)e
(statemen)n(t)h(of)g(the)g(problem.)68 b(Section)38 b(3)f(describ)r(es)
h(related)f(studies.)0 2529 y(Section)c(4)g(sho)n(ws)f(that)i(deciding)
f(whether)g(there)h(is)f(a)g(sc)n(hedule)g(to)g(c)n(hange)f(the)i
(placemen)n(t)f(of)g(ob)5 b(jects)33 b(across)e(disk)0
2658 y(driv)n(es)23 b(based)g(on)h(a)f(system)h(load)f(is)h
(NP-Complete.)35 b(Section)24 b(5)f(pro)n(v)n(es)f(that)i(the)h
(computation)e(of)h(a)f(resource)f(sc)n(hedule)0 2788
y(that)32 b(supp)r(orts)f(a)g(co)r(ordinated)f(displa)n(y)g(and)i
(yields)f(the)h(minim)n(um)g(latency)f(is)g(NP-Hard;)h(and)f(the)h
(computation)f(of)0 2917 y(the)d(minim)n(um)h(memory)e(requiremen)n(ts)
f(to)i(displa)n(y)f(a)g(presen)n(tation)g(within)h(a)f(pre-sp)r
(eci\014ed)h(latency)f(is)h(NP-Hard.)36 b(In)0 3047 y(Section)28
b(6,)f(w)n(e)g(presen)n(t)g(conclusions)f(and)i(future)g(researc)n(h)d
(directions.)0 3402 y Fp(2)135 b(Statemen)l(t)46 b(of)g(the)f(Problem)0
3649 y Ft(T)-7 b(o)26 b(simplify)h(the)f(discussion,)g(assume)g(that)g
(the)h(unit)g(of)f(transfer)f(from)h(eac)n(h)g(disk)g(is)g
(\014xed-sized)g(and)g(termed)g(a)g(page.)0 3779 y(This)f(assumption)f
(will)g(b)r(e)h(remo)n(v)n(ed)e(later)h(on)g(to)h(generalize)e(the)i
(results)f(to)g(v)-5 b(ariable-sized)23 b(units)i(of)g(transfer)e(b)r
(et)n(w)n(een)0 3908 y(memory)33 b(and)h(disk.)57 b(An)34
b(ob)5 b(ject)34 b(migh)n(t)g(b)r(e)h(either)f(smaller)f(or)g(larger)f
(than)j(a)e(page.)56 b(When)35 b(an)e(ob)5 b(ject)34
b Fo(x)h Ft(is)f(larger)0 4038 y(than)25 b(a)g(disk)g(page,)g(it)h(is)f
(represen)n(ted)f(as)g(a)h(collection)f(of)i(pages.)35
b(It)25 b(is)g(\014rst)g(partitioned)g(in)n(to)g Fo(k)h
Ft(=)c Fl(d)3338 4001 y Fk(siz)r(e)e(of)26 b(x)p 3261
4019 422 4 v 3261 4067 a(siz)r(e)20 b(of)26 b(a)19 b(pag)r(e)3692
4038 y Fl(e)25 b Ft(disk)0 4167 y(pages.)36 b(Subsequen)n(tly)-7
b(,)27 b(these)g(pages)f(are)g(assigned)f(to)i(the)h
Fo(D)h Ft(disks.)36 b(The)27 b(system)g(ma)n(y)f(cluster)h(sev)n(eral)e
(small)i(ob)5 b(jects)0 4297 y(in)30 b(a)f(single)g(disk)h(page.)42
b(Eac)n(h)29 b(disk)g(can)g(p)r(erform)h(indep)r(enden)n(t)g
(reads/writes.)41 b(The)30 b Fo(D)i Ft(disk)d(driv)n(es)g(ma)n(y)g
(retriev)n(e)f Fo(D)0 4426 y Ft(pages)g(in)n(to)g Fo(D)j
Ft(di\013eren)n(t)e(memory)f(frames)g(at)h(the)g(same)g(time.)41
b(Another)28 b(assumption)h(is)g(that)g(eac)n(h)f(disk)g(has)h(enough)0
4556 y(space)23 b(to)g(accommo)r(date)g(pages)f(migrated/replicated)g
(to)h(the)h(disk)g(during)f(the)h(displa)n(y)e(of)i(a)f(presen)n
(tation)f(in)i(addition)0 4685 y(to)j(those)h(pages)e(residing)h(in)h
(the)g(disk)f(b)r(efore)g(the)h(displa)n(y)-7 b(.)177
4851 y(W)g(e)31 b(discretize)f(time)h(in)n(to)f(\014xed-sized)g(units,)
i(termed)e Fm(time)j(intervals)p Ft(.)46 b(The)30 b(duration)g(of)h
(eac)n(h)e(time)i(in)n(terv)-5 b(al)30 b(is)0 4980 y(denoted)f(as)g
Fo(t)p Ft(.)41 b(The)29 b(b)r(eginning)g(of)g(a)g(time)h(in)n(terv)-5
b(al)28 b Fo(i)h Ft(is)g(termed)g Fm(time)j(instant)c
Fo(i)h Ft(\(Figure)g(2\).)41 b(When)30 b(a)e(user)h(requests)0
5110 y(a)g(presen)n(tation,)f(the)h(system)g(has)g(adv)-5
b(ance)28 b(kno)n(wledge)g(of)h(the)h(iden)n(tit)n(y)f(of)g(pages)f
(that)h(should)g(b)r(e)g(memory)g(residen)n(t)0 5239
y(at)e(sp)r(eci\014c)h(times)g(to)g(supp)r(ort)f(its)h(displa)n(y)-7
b(.)36 b(This)27 b(sc)n(hedule)h(is)f(termed)h(a)f Fm(display)32
b(sche)l(dule)p Ft(:)1929 5656 y(2)p eop
%%Page: 3 4
3 3 bop 357 206 3186 4 v 355 325 4 119 v 552 290 a Fz(T)-7
b(erm)p 950 325 V 235 w(De\014nition)p 3541 325 V 357
329 3186 4 v 355 447 4 119 v 620 412 a Fv(m)p 950 447
V 305 w Fy(Num)n(b)r(er)23 b(of)k(time)e(in)n(terv)l(als)h(in)f(the)g
(presen)n(tation)p 3541 447 V 355 566 V 640 530 a Fv(t)p
950 566 V 325 w Fy(Duration)g(of)i(a)f(time)f(in)n(terv)l(al)p
3541 566 V 355 685 V 399 649 a(Time)g(In)n(terv)l(al)g
Fv(i)p 950 685 V 84 w Fy(P)n(erio)r(d)h([)p Fv(i;)14
b(i)j Fy(+)g(1])p 3541 685 V 355 803 V 509 768 a(Instan)n(t)25
b Fv(i)p 950 803 V 193 w Fy(The)h(b)r(eginning)g(of)g(time)f(in)n(terv)
l(al)h Fv(i)p 3541 803 V 355 922 V 618 887 a(S)665 895
y Fj(i)p 950 922 V 993 887 a Fy(P)n(ages)h(in)e(memory)f(at)i(instan)n
(t)f Fv(i)p 3541 922 V 355 1041 V 617 1005 a(P)666 1013
y Fj(i)p 950 1041 V 993 1005 a Fy(P)n(ages)i(con)n(taining)f(ob)t
(jects)h(displa)n(y)n(ed)e(during)h(in)n(terv)l(al)f
Fv(i)p 3541 1041 V 355 1160 V 606 1124 a(P)666 1092 y
Fj(d)655 1138 y(i)p 950 1160 V 993 1124 a Fy(P)n(ages)i(in)e
Fv(P)1348 1132 y Fj(i)1400 1124 y Fy(that)h(reside)g(on)g(disk)f
Fv(d)p 3541 1160 V 355 1278 V 606 1243 a(F)666 1211 y
Fj(d)655 1257 y(i)p 950 1278 V 993 1243 a Fy(P)n(ages)i(retriev)n(ed)e
(from)h(disk)f Fv(d)g Fy(on)n(to)h(memory)e(during)h(time)g(in)n(terv)l
(al)h Fv(i)p 3541 1278 V 355 1397 V 400 1361 a(F)449
1369 y Fj(i)497 1361 y Fy(=)578 1301 y Fi(P)666 1322
y Fj(D)r Fs(\000)p Fh(1)666 1388 y Fj(d)p Fh(=0)812 1361
y Fv(F)872 1330 y Fj(d)861 1376 y(i)p 950 1397 V 993
1361 a Fy(P)n(ages)h(retriev)n(ed)e(from)h(disk)f(on)n(to)h(memory)d
(during)j(time)f(in)n(terv)l(al)g Fv(i)p 3541 1397 V
355 1516 V 606 1480 a(U)666 1448 y Fj(d)658 1495 y(i)p
950 1516 V 993 1480 a Fy(P)n(ages)i(written)f(to)g(disk)f
Fv(d)g Fy(during)h(time)f(in)n(terv)l(al)g Fv(i)p 3541
1516 V 355 1634 V 609 1599 a(K)674 1607 y Fj(i)p 950
1634 V 993 1599 a Fy(P)n(ages)i(discarded)f(from)f(memory)f(during)h
(time)g(in)n(terv)l(al)h Fv(i)p 3541 1634 V 355 1753
V 606 1718 a(R)665 1686 y Fj(a)664 1732 y(j)p 950 1753
V 993 1718 a Fy(Read)f(page)h Fv(a)g Fy(from)f(disk)g
Fv(j)p 3541 1753 V 355 1872 V 594 1836 a(W)678 1805 y
Fj(a)667 1851 y(j)p 950 1872 V 993 1836 a Fy(W)-6 b(rite)25
b(page)h Fv(a)g Fy(to)g(disk)f Fv(j)p 3541 1872 V 355
1991 V 622 1955 a(D)p 950 1991 V 308 w Fy(Num)n(b)r(er)e(of)k(disk)e
(driv)n(es)h(in)f(the)h(system)p 3541 1991 V 355 2109
V 623 2074 a Fv(B)p 950 2109 V 312 w Fy(Maxim)n(um)d(n)n(um)n(b)r(er)h
(of)j(pages)f(read/written)h(in)n(to)e(a)h(disk)g(during)f(a)h(time)f
(in)n(terv)l(al)p 3541 2109 V 355 2228 V 605 2192 a Fv(B)667
2161 y Fj(d)663 2207 y(i)p 950 2228 V 993 2192 a Fy(Bandwidth)g(a)n(v)l
(ailable)i(\(in)f(pages\))g(at)g(disk)f Fv(d)h Fy(during)f(in)n(terv)l
(al)g Fv(i)p 3541 2228 V 355 2347 V 604 2311 a(M)678
2319 y Fj(i)p 950 2347 V 993 2311 a Fy(Memory)g(a)n(v)l(ailable)i(\(in)
e(pages\))h(during)g(in)n(terv)l(al)f Fv(i)p 3541 2347
V 355 2466 V 624 2430 a(C)p 950 2466 V 314 w Fy(Num)n(b)r(er)e(of)k
(memory)d(frames)i(in)f(the)g(system)p 3541 2466 V 355
2584 V 631 2549 a Fv(n)p 950 2584 V 316 w Fy(Num)n(b)r(er)e(of)k
(clauses)p 3541 2584 V 355 2703 V 633 2667 a Fv(k)p 950
2703 V 320 w Fy(Num)n(b)r(er)c(of)k(v)l(ariables)p 3541
2703 V 355 2822 V 613 2786 a Fv(M)p 950 2822 V 306 w
Fy(Set)e(of)h(migrations)h(to)f(b)r(e)f(sc)n(heduled)p
3541 2822 V 355 2940 V 562 2905 a([0,)h(N])p 950 2940
V 246 w(P)n(erio)r(d)g(when)g Fv(M)34 b Fy(m)n(ust)24
b(b)r(e)h(sc)n(heduled)p 3541 2940 V 355 3059 V 626 3023
a Fv(A)p 950 3059 V 309 w Fy(System)f(load)i(during)g([0)p
Fv(;)13 b(N)8 b Fy(])p 3541 3059 V 355 3178 V 635 3142
a Fv(p)p 950 3178 V 319 w Fy(Start)25 b(up)g(latency)h(in)f(time)g(in)n
(terv)l(als)p 3541 3178 V 357 3181 3186 4 v 831 3363
a Ft(T)-7 b(able)27 b(1:)36 b(List)28 b(of)g(terms)f(used)g(in)h(this)g
(pap)r(er)f(and)h(their)f(de\014nitions)499 4908 y @beginspecial
0 @llx 0 @lly 348.339996 @urx 130.389999 @ury 3483 @rwi
@setspecial
%%BeginDocument: memsched.ps
%
% Frame ps_prolog 5.0, for use with Frame 5.0 products
% This ps_prolog file is Copyright (c) 1986-1995 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameMaker/SGML and FrameViewer as long as this 
% copyright notice is preserved.
%
% FrameMaker users specify the proper paper size for each print job in the
% "Print" dialog's "Printer Paper Size" "Width" and "Height~ fields.  If the
% printer that the PS file is sent to does not support the requested paper
% size, or if there is no paper tray of the proper size currently installed, 
% then the job will not be printed.  The following flag, if set to true, will
% cause the job to print on the default paper in such cases.
/FMAllowPaperSizeMismatch            true def
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to true, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% The following is a set of predefined optimal frequencies and angles for various
% common dpi settings. This is taken from "Advances in Color Separation Using
% PostScript Software Technology," from Adobe Systems (3/13/89 P.N. LPS 0043)
% and corrolated with information which is in various PPD (4.0) files.
%
% The "dpiranges" figure is the minimum dots per inch device resolution which
% can support this setting. The "low" and "high" values are controlled by the
% setting of the FMUseHighFrequencyScreens flag above. The "TDot" flags control
% the use of the "Yellow Triple Dot" feature whereby the frequency id divided by
% three, but the dot function is "trippled" giving a block of 3x3 dots per cell.
%
% PatFreq is a compromise pattern frequency for ps Level 2 printers which is close
% to the ideal WYSIWYG pattern frequency of 9 repetitions/inch but does not beat
% (too badly) against the screen frequencies of any separations for that DPI.
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (5.0) def 
/fMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	fMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto show
	72 220 moveto show
	FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!  Check installation;)
		(also check ~/fminit and ./fminit for old versions) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(Adobe's PostScript Language Reference Manual, 2nd Edition, section H.2.4)
	(says your EPS file is not valid, as it calls X              )
	dup dup (X) search pop exch pop exch pop length 
	5 -1 roll 
	putinterval 
	FMFAILURE
	} def
/fmConcatProcs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin [
	/ALDsave
	/FMdicttop
	/FMoptop
	/FMpointsize
	/FMsaveobject
	/b
	/bitmapsave
	/blut
	/bpside
	/bs
	/bstring
	/bwidth
	/c
	/cf
	/cs
	/cynu
	/depth
	/edown
	/fh
	/fillvals
	/fw
	/fx
	/fy
	/g
	/gfile
	/gindex
	/grnt
	/gryt
	/gstring
	/height
	/hh
	/i
	/im
	/indx
	/is
	/k
	/kk
	/landscape
	/lb
	/len
	/llx
	/lly
	/m
	/magu
	/manualfeed
	/n
	/offbits
	/onbits
	/organgle
	/orgbangle
	/orgbfreq
	/orgbproc
	/orgbxfer
	/orgfreq
	/orggangle
	/orggfreq
	/orggproc
	/orggxfer
	/orgmatrix
	/orgproc
	/orgrangle
	/orgrfreq
	/orgrproc
	/orgrxfer
	/orgxfer
	/pagesave
	/paperheight
	/papersizedict
	/paperwidth
	/pos
	/pwid
	/r
	/rad
	/redt
	/sl
	/str
	/tran
	/u
	/urx
	/ury
	/val
	/width
	/width
	/ws
	/ww
	/x
	/x1
	/x2
	/xindex
	/xpoint
	/xscale
	/xx
	/y
	/y1
	/y2
	/yelu
	/yindex
	/ypoint
	/yscale
	/yy
] { 0 def } forall
/FmBD {bind def} bind def
systemdict /pdfmark known {
	/fMAcrobat true def
	
	/FmPD /pdfmark load def
	
	
	/FmPT /show load def
	
	
	currentdistillerparams /CoreDistVersion get 2000 ge {
	
		
		/FmPD2 /pdfmark load def
		
		
		
		
		
		/FmPA { mark exch /Dest exch 5 3 roll 
				/View [ /XYZ null 6 -2 roll FmDC exch pop null] /DEST FmPD 
		}FmBD
	} {
		
		/FmPD2 /cleartomark load def
		/FmPA {pop pop pop}FmBD
	} ifelse
} {
	
	/fMAcrobat false def
	/FmPD /cleartomark load def
	/FmPD2 /cleartomark load def
	/FmPT /pop load def
	/FmPA {pop pop pop}FmBD
} ifelse
/FmDC {
	transform fMDefaultMatrix itransform cvi exch cvi exch
}FmBD
/FmBx {
	dup 3 index lt {3 1 roll exch} if 
	1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/fMNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		RealSetrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
fMLevel1 { 
	
	
	
	/patScreenDict 7 dict dup begin
		<0f1e3c78f0e1c387> [ 45  { pop } {exch pop} 		.5   2 sqrt] FmBD
		<0f87c3e1f0783c1e> [ 135 { pop } {exch pop}			.5   2 sqrt] FmBD
		<cccccccccccccccc> [ 0   { pop } dup				.5   2	   ] FmBD
		<ffff0000ffff0000> [ 90  { pop } dup				.5   2	   ] FmBD
		<8142241818244281> [ 45  { 2 copy lt {exch} if pop}	dup .75  2 sqrt] FmBD
		<03060c183060c081> [ 45  { pop } {exch pop}			.875 2 sqrt] FmBD
		<8040201008040201> [ 135 { pop } {exch pop}			.875 2 sqrt] FmBD
	end def
} { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} ifelse
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				fMAcrobat not FMPColor graymode and and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not fMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/fMDefaultMatrix matrix defaultmatrix def
/fMatrix2 matrix def
/dpi    72 0 fMDefaultMatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 fMDefaultMatrix dtransform exch atan def
	sangle fMatrix2 rotate 
	fMDefaultMatrix fMatrix2 concatmatrix 
	dup 0 get /sflipx exch def
	    3 get /sflipy exch def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	fMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /fMNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	fMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{papersizefailure} if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{2 dict
		 dup /PageSize [paperwidth paperheight] put
		 manualfeed {dup /ManualFeed manualfeed put} if
		 {setpagedevice} stopped {papersizefailure} if
		}
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			fMNegative {
				1 1 4 { 
					pop { 1 exch sub } fmConcatProcs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		fMNegative {
			{ 1 exch sub } fmConcatProcs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/papersizefailure {
	FMAllowPaperSizeMismatch not
		{
(The requested paper size is not available in any currently-installed tray)
(Edit the PS file to "FMAllowPaperSizeMismatch true" to use default tray)
		 FMFAILURE } if
	} def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYK } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYKGRAY } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
fMLevel1 {
	/fmGetFlip {
		fMatrix2 exch get mul 0 lt { -1 } { 1 } ifelse
	} FmBD
} if
/setPatternMode {
	fMLevel1 {
		2 index patScreenDict exch known {
			pop pop
			patScreenDict exch get aload pop 
			freq 								
			mul									
			5 2 roll							
			fMatrix2 currentmatrix 1 get 0 ne {
				3 -1 roll 90 add 3 1 roll 		
				sflipx 1 fmGetFlip sflipy 2 fmGetFlip neg mul
			} {  								
				sflipx 0 fmGetFlip sflipy 3 fmGetFlip mul 
			} ifelse
			0 lt {exch pop} {pop} ifelse 		
			fMNegative { 
				{neg} fmConcatProcs 			
			} if
			bind
			
			
			
			systemdict /setscreen get exec		
			/FrameCurGray exch def
		} {
			/bwidth  exch def
			/bpside  exch def
			/bstring exch def
			/onbits 0 def  /offbits 0 def
			freq sangle landscape {90 add} if 
				{/ypoint exch def
				 /xpoint exch def
				 /xindex xpoint 1 add 2 div bpside mul cvi def
				 /yindex ypoint 1 add 2 div bpside mul cvi def
				 bstring yindex bwidth mul xindex 8 idiv add get
				 1 7 xindex 8 mod sub bitshift and 0 ne fMNegative {not} if
				 {/onbits  onbits  1 add def 1}
				 {/offbits offbits 1 add def 0}
				 ifelse
				}
				setscreen
			offbits offbits onbits add div fMNegative {1.0 exch sub} if
			/FrameCurGray exch def
		} ifelse
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		fMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode fMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode fMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/rip4 { 
	   
	  
	  kis cis copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  cis mis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  mis yis copy pop 
	  dup dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  yis kis copy pop 
	  3 mul is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
/wbytes { 
      dup dup
      8 gt { pop 8 idiv mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	cvtProc                
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def 
	cvtProc              
	/is width depth wbytes string def
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
fMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/kk cynu magu min yelu min def
		/u kk currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 kk currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch fmConcatProcs settransfer
} bind def
/BITMAPCOLOR { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def
	fMLevel1 {	
		colorsetup
		/is width depth wbytes string def
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is width depth wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	fMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {ip} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/depth 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip pop ris} {gis} {bis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCMYKc { 
	/depth 32 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip4 pop cis} {mis} {yis} {kis} true 4 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYK { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /mis width string def
        /yis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf mis readhexstring pop } 
        { cf yis readhexstring pop } 
        { cf kis readhexstring pop } 
        true 4 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/depth 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop ris gis bis width gray} image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAYc { 
	/depth 32 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop cis mis yis kis width cgray} image
        bitmapsave restore 
        grestore
        } bind def
/cgray { 
        /ww exch def
        /k exch def
        /y exch def
        /m exch def
        /c exch def
        0 1 ww 1 sub { /i exch def c i get m i get y i get k i get CMYKtoRGB
				.144 mul 3 1 roll .587 mul 3 1 roll .299 mul add add
				c i 3 -1 roll floor cvi put } for
        c
 		} bind def
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop width gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /yis width string def
        /mis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf mis readhexstring pop 
          cf yis readhexstring pop 
          cf kis readhexstring pop width cgray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
(5.0) FMVERSION
1 1 0 0 348.34 130.39 0 1 3 FMDOCUMENT
0 0 /Times-Roman FMFONTDEFINE
1 0 /Times-Italic FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
348.34 130.39 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(interv) 159.1 111.41 T
(al) 182.18 111.41 T
1 F
( i) 189.4 111.41 T
67.65 66.66 67.65 56.55 2 L
0.5 H
2 Z
N
103.62 66.12 103.62 56 2 L
N
247.7 66.02 247.7 55.91 2 L
N
283.14 66.57 283.14 56.46 2 L
N
(0) 65.59 46.49 T
(1) 101.2 46.49 T
158.18 66.12 158.18 56 2 L
N
194.3 66.37 194.3 56.26 2 L
N
(i) 156.3 46.25 T
(i+1) 185.82 45.74 T
(m-1) 240.36 45.48 T
(m) 279.47 46.98 T
0 F
(Request) 0.02 12.21 T
(Display) 53.65 11.47 T
(arri) 0.68 4.19 T
(v) 14.31 4.19 T
(es) 19.16 4.19 T
(starts) 57.32 3.11 T
(Display) 269.49 10.03 T
(ends) 274.33 2.17 T
(T) 164.76 123.56 T
(ime) 170.52 123.56 T
163.36 67.16 158.66 67.16 2 L
0 Z
N
163.11 64.59 158.66 67.16 163.11 69.72 3 L
N
189.58 67.16 194.28 67.16 2 L
N
189.83 69.72 194.28 67.16 189.83 64.59 3 L
N
163.36 67.16 189.58 67.16 2 L
N
(S) 61.91 93.7 T
1 8 Q
(0) 67.47 91.2 T
0 10 Q
(S) 148.58 96.02 T
1 8 Q
(i) 154.14 93.52 T
0 10 Q
(S) 278.44 92.71 T
1 8 Q
(m) 284 90.21 T
68 74.43 70.56 74.43 68 69.98 65.43 74.43 4 Y
N
68 74.43 70.56 74.43 68 69.98 65.43 74.43 4 Y
V
68 87.63 68 74.68 2 L
2 Z
N
282.99 72.71 285.56 72.71 282.99 68.27 280.42 72.71 4 Y
0 Z
N
282.99 72.71 285.56 72.71 282.99 68.27 280.42 72.71 4 Y
V
282.99 85.92 282.99 72.96 2 L
2 Z
N
0 10 Q
(T) 318.96 63.82 T
(ime) 324.72 63.82 T
(interv) 314.13 53.49 T
(als) 337.21 53.49 T
158.68 76.47 161.25 76.47 158.68 72.02 156.12 76.47 4 Y
0 Z
N
158.68 76.47 161.25 76.47 158.68 72.02 156.12 76.47 4 Y
V
158.68 89.67 158.68 76.72 2 L
2 Z
N
175.68 72.62 178.25 72.62 175.68 68.17 173.12 72.62 4 Y
0 Z
N
175.68 72.62 178.25 72.62 175.68 68.17 173.12 72.62 4 Y
V
175.68 103.67 175.68 72.87 2 L
2 Z
N
14.62 65.62 14.62 55.5 2 L
N
14.68 36.35 12.12 36.35 14.68 40.8 17.25 36.35 4 Y
0 Z
N
14.68 36.35 12.12 36.35 14.68 40.8 17.25 36.35 4 Y
V
14.68 36.1 14.68 21.05 2 L
2 Z
N
1 F
(-p) 10.59 46.49 T
297.74 60.67 297.74 63.24 302.18 60.67 297.74 58.11 4 Y
0 Z
N
297.74 60.67 297.74 63.24 302.18 60.67 297.74 58.11 4 Y
V
14.68 60.67 297.49 60.67 2 L
2 Z
N
67.68 36.35 65.12 36.35 67.68 40.8 70.25 36.35 4 Y
0 Z
N
67.68 36.35 65.12 36.35 67.68 40.8 70.25 36.35 4 Y
V
67.68 36.1 67.68 21.05 2 L
2 Z
N
283.68 36.35 281.12 36.35 283.68 40.8 286.25 36.35 4 Y
0 Z
N
283.68 36.35 281.12 36.35 283.68 40.8 286.25 36.35 4 Y
V
283.68 36.1 283.68 21.05 2 L
2 Z
N
152.26 71.99 154.5 73.24 154.44 68.11 150.02 70.73 4 Y
0 Z
N
152.26 71.99 154.5 73.24 154.44 68.11 150.02 70.73 4 Y
V
137.9 97.6 152.14 72.21 2 L
2 Z
N
0 F
(instant) 111.73 104.41 T
1 F
( i) 138.4 104.41 T
0 F
(T) 113.76 116.56 T
(ime) 119.52 116.56 T
FMENDPAGE
%%EndDocument
 @endspecial 1197 5203 a(Figure)g(2:)37 b(Time)27 b(in)n(terv)-5
b(al)27 b(and)h(time)g(instan)n(t.)1929 5656 y(3)p eop
%%Page: 4 5
4 4 bop 0 90 a Fu(De\014nition:)88 b Ft(A)30 b Fm(display)k(sche)l
(dule)d Ft(is)e(a)h(sequence)f Fl(f)p Fo(P)1825 102 y
Fn(0)1862 90 y Fo(;)14 b(:)g(:)g(:)g(;)g(P)2100 102 y
Fk(m)p Fg(\000)p Fn(1)2248 90 y Fl(g)29 b Ft(of)h(disk)g(page)f(sets.)
43 b(Where)30 b Fo(m)g Ft(is)g(the)g(duration)0 220 y(of)e(the)g
(presen)n(tation)e(in)i(time)g(in)n(terv)-5 b(als,)27
b(and)g Fo(P)1567 232 y Fk(i)1623 220 y Ft(is)g(the)h(set)g(of)f(pages)
g(displa)n(y)n(ed)f(during)i(in)n(terv)-5 b(al)27 b Fo(i)p
Ft(.)177 410 y(T)-7 b(o)36 b(minimize)h(the)f(observ)n(ed)f(startup)h
(latency)f(and)h(the)h(required)e(amoun)n(t)h(of)g(memory)-7
b(,)37 b(a)f(resource)e(sc)n(hedule)0 539 y(o)n(v)n(erlaps)e(the)j
(displa)n(y)f(and)g(the)h(retriev)-5 b(al)34 b(of)g(disk)h(pages)e(and)
i(manipulates)f(the)h(placemen)n(t)f(of)h(data)f(on)g(disks.)57
b(T)-7 b(o)0 669 y(illustrate,)33 b(supp)r(ose)g(that)g(the)f(displa)n
(y)g(sc)n(hedule)g(consists)g(of)h(disjoin)n(t)f(set)h(of)f(pages)g
(\(i.e.,)i Fo(P)3077 681 y Fk(i)3127 669 y Fl(\\)22 b
Fo(P)3257 681 y Fk(j)3324 669 y Ft(=)30 b Fl(;)p Ft(,)k(for)e
Fo(i)f Fl(6)p Ft(=)g Fo(j)5 b Ft(\).)0 798 y(Ideally)-7
b(,)25 b(the)g(collection)f(of)h(pages)f(that)h(constitute)g
Fo(P)1723 810 y Fk(i)1775 798 y Ft(should)g(b)r(e)g(retriev)n(ed)f(in)n
(to)g(memory)g(during)g(time)i(in)n(terv)-5 b(al)24 b
Fo(i)13 b Fl(\000)g Ft(1.)0 928 y(This)30 b(w)n(ould)h(minimize)g(the)g
(amoun)n(t)f(of)g(required)g(memory)-7 b(.)45 b(Ho)n(w)n(ev)n(er,)29
b(this)i(ideal)f(situation)g(migh)n(t)h(b)r(e)g(infeasible)f(at)0
1057 y(times)35 b(b)r(ecause)g(the)g(pages)f(that)h(constitute)g
Fo(P)1563 1069 y Fk(i)1626 1057 y Ft(migh)n(t)g(b)r(e)h(unev)n(enly)e
(disp)r(ersed)h(across)e(the)i(disks,)h(exhausting)f(the)0
1187 y(bandwidth)25 b(of)g(one)f(or)g(more)g(disks)g(\(while)i(other)e
(disks)g(are)g(idle\))h(suc)n(h)g(that)g(they)g(fail)f(to)h(retriev)n
(e)f(the)h(set)f Fo(P)3545 1199 y Fk(i)3598 1187 y Ft(during)g(a)0
1316 y(time)h(in)n(terv)-5 b(al.)35 b(Note)25 b(that)g(in)f(this)h
(scenario)e(the)i(total)f(bandwidth)h(of)g(the)g(disks)f(is)g
(su\016cien)n(t,)i(the)f(primary)e(limitation)0 1446
y(is)33 b(the)h(placemen)n(t)f(of)g(data)g(in)g(com)n(bination)f(with)i
(the)g(displa)n(y)e(sc)n(hedule)h(that)g(results)g(in)h(formation)e(of)
h(b)r(ottlenec)n(k)0 1576 y(disks.)j(The)25 b(system)f(ma)n(y)h(pursue)
f(t)n(w)n(o)h(alternativ)n(e)e(solutions)i(to)f(resolv)n(e)g(b)r
(ottlenec)n(ks:)35 b(\(1\))25 b(retriev)n(e)f(some)g(pages)g(of)h
Fo(P)3872 1588 y Fk(i)0 1705 y Ft(during)c(earlier)f(time)i(in)n(terv)
-5 b(als,)22 b Fo(i)6 b Fl(\000)g Ft(2,)22 b Fo(i)6 b
Fl(\000)g Ft(3,)23 b(...,)g(etc.,)g(\(these)e(pages)g(are)f(termed)i
Fm(pr)l(e-fetche)l(d)h Ft(pages\),)f(or)e(\(2\))i(manipulate)0
1835 y(the)28 b(placemen)n(t)f(of)g(data)g(prior)f(to)i(time)f(in)n
(terv)-5 b(al)27 b Fo(i)g Ft(so)g(that)h Fo(P)2004 1847
y Fk(i)2059 1835 y Ft(is)f(more)g(ev)n(enly)g(distributed)g(across)f
(disks.)36 b(A)28 b(resource)0 1964 y(sc)n(hedule)33
b(to)f(supp)r(ort)h(a)f(co)r(ordinated)g(displa)n(y)g(of)h(a)g
(structured)f(presen)n(tation)g(migh)n(t)h(ha)n(v)n(e)e(three)i(comp)r
(onen)n(ts:)47 b(\(1\))0 2094 y(page)28 b(retriev)-5
b(als)28 b(from)h(disks)g(to)g(memory)-7 b(,)29 b(\(2\))g(page)g
(writes)g(to)g(c)n(hange)f(the)h(data)g(placemen)n(t,)g(and)h(\(3\))f
(page)f(discards)0 2223 y(\(from)d(memory\))g(to)g(accommo)r(date)g
(new)g(retriev)-5 b(als.)35 b(If)26 b(the)f(system)g(resolv)n(es)f(b)r
(ottlenec)n(ks)h(with)h(pre-fetc)n(hes)e(only)-7 b(,)26
b(the)0 2353 y(second)34 b(comp)r(onen)n(t)g(b)r(ecomes)g(unnecessary)
-7 b(.)57 b(Otherwise,)35 b(reads)e(from)i(the)g(\014rst)f(comp)r(onen)
n(t)g(and)g(writes)h(from)f(the)0 2482 y(second)d(comp)r(onen)n(t)h(sp)
r(ecify)g(the)h(migrations/replications)c(to)i(manipulate)h(the)h
Fm(plac)l(ement)h(of)h(data)p Ft(.)50 b(F)-7 b(ormally)g(,)33
b(the)0 2612 y(placemen)n(t)c(of)h(data)f(is)g(de\014ned)h(as)e(a)i
(mapping)f(from)g(a)g(page)f(iden)n(ti\014er)i(and)f(a)g(time)h(in)n
(terv)-5 b(al)29 b(in)n(to)g(one)g(or)g(more)f(disk)0
2741 y(driv)n(es.)177 2906 y(The)j(set)f(of)h(pages)e(o)r(ccup)n(ying)h
(memory)f(frames)h(at)h(instan)n(t)f Fo(i)g Ft(\()p Fo(S)2324
2918 y Fk(i)2352 2906 y Ft(\))h(is)f(de\014ned)h(based)f(on)h(the)f
(set)h(of)f(pages)g(that)0 3036 y(o)r(ccup)n(y)25 b(memory)g(at)h
(instan)n(t)f Fo(i)15 b Fl(\000)f Ft(1)25 b(\()p Fo(S)1246
3048 y Fk(i)p Fg(\000)p Fn(1)1359 3036 y Ft(\),)h(those)g(discarded)f
(from)g(memory)g(\()p Fo(K)2640 3048 y Fk(i)2667 3036
y Ft(\),)i(those)e(\015ushed)h(to)g(disks)f(\()p Fo(U)3646
3006 y Fk(d)3637 3058 y(i)3685 3036 y Ft(\),)h(and)0
3165 y(those)f(retriev)n(ed)g(from)g(di\013eren)n(t)h(disks)f(\()p
Fo(F)1381 3135 y Fk(d)1369 3187 y(i)1420 3165 y Ft(\).)37
b(The)26 b(n)n(um)n(b)r(er)f(of)h(pages)e(in)i Fo(S)2444
3177 y Fk(i)2498 3165 y Ft(should)f(b)r(e)h(lo)n(w)n(er)e(than)i(or)f
(equal)g(to)h(the)g Fo(C)0 3295 y Ft(bu\013ers)i(that)f(constitute)h
(the)g(memory)-7 b(.)0 3485 y Fu(De\014nition:)78 b Ft(Giv)n(en)27
b(a)g(system)h(with)g Fo(D)i Ft(disks,)d(the)h(state)f(of)h(memory)f
(at)g(eac)n(h)g(instan)n(t)g Fo(i)h Ft(is)f(de\014ned)h(as:)778
3698 y Fo(S)829 3710 y Fk(i)880 3698 y Ft(=)22 b(\()p
Fo(S)1050 3710 y Fk(i)p Fg(\000)p Fn(1)1182 3698 y Fl(\000)c
Fo(K)1336 3710 y Fk(i)p Fg(\000)p Fn(1)1466 3698 y Fl(\000)g
Ft(\()p Fo(U)1647 3663 y Fn(0)1638 3718 y Fk(i)p Fg(\000)p
Fn(1)1769 3698 y Fl([)h Fo(:)14 b(:)g(:)k Fl([)h Fo(U)2098
3662 y Fk(D)r Fg(\000)p Fn(1)2089 3721 y Fk(i)p Fg(\000)p
Fn(1)2243 3698 y Ft(\)\))g Fl([)g Ft(\()p Fo(F)2497 3663
y Fn(0)2485 3718 y Fk(i)p Fg(\000)p Fn(1)2617 3698 y
Fl([)f Fo(:)c(:)g(:)19 b Fl([)g Fo(F)2945 3662 y Fk(D)r
Fg(\000)p Fn(1)2933 3721 y Fk(i)p Fg(\000)p Fn(1)3090
3698 y Ft(\))177 4029 y(F)-7 b(ormally)g(,)40 b(a)e(resource)e(sc)n
(heduler)h(consumes)g(a)h(displa)n(y)f(sc)n(hedule)h
Fl(f)p Fo(P)2531 4041 y Fn(0)2568 4029 y Fo(;)14 b(:)g(:)g(:)g(;)g(P)
2806 4041 y Fk(m)p Fg(\000)p Fn(1)2954 4029 y Fl(g)p
Ft(,)40 b(a)e(system)g(con\014guration)0 4158 y(\()p
Fo(B)t(;)14 b(C)q(;)g(D)r Ft(\),)33 b(and)d(a)h(placemen)n(t)f(of)h
(data,)g Fl(P)7 b Ft(,)31 b(to)g(compute)f(a)h(sc)n(hedule)f(of)h(page)
e(discards,)i(writes,)g(and)f(retriev)-5 b(als)30 b(that)0
4288 y(satisfy)d(the)h(temp)r(oral)f(constrain)n(ts)f(dictated)i(b)n(y)
g(the)g(displa)n(y)e(sc)n(hedule.)0 4478 y Fu(De\014nition:)118
b Ft(Giv)n(en)37 b(a)f(system)h(with)g Fo(C)43 b Ft(memory)36
b(bu\013ers,)k Fo(D)f Ft(driv)n(es)d(eac)n(h)g(with)h(su\016cien)n(t)g
(disk)g(bandwidth)g(to)0 4608 y(retriev)n(e/write)23
b Fo(B)30 b Ft(pages)25 b(during)g(a)g(time)h(in)n(terv)-5
b(al,)25 b(a)h(displa)n(y)e(sc)n(hedule)h Fl(f)p Fo(P)2448
4620 y Fn(0)2486 4608 y Fo(;)14 b(:)g(:)g(:)f(;)h(P)2723
4620 y Fk(m)p Fg(\000)p Fn(1)2871 4608 y Fl(g)p Ft(,)26
b(an)f(initial)h(state)f(of)h(memory)0 4737 y Fo(S)51
4749 y Fg(\000)p Fk(p)141 4737 y Ft(,)34 b(and)f(an)f(initial)h
(placemen)n(t)g(of)f(data)g Fl(P)7 b Ft(,)34 b(a)e Fm(r)l(esour)l(c)l
(e)i(sche)l(dule)g Ft(consists)e(of)h Fo(p)21 b Ft(+)h
Fo(m)32 b Ft(time)i(in)n(terv)-5 b(als:)46 b Fo(m)32
b Ft(of)h(these)0 4867 y(o)n(v)n(erlap)24 b(with)j(the)f(displa)n(y)-7
b(,)26 b(and)g Fo(p)f Ft(of)h(them)h(either)f(pre-fetc)n(h)g(pages)f
(in)n(to)g(memory)h(or)f(mo)r(dify)h(the)h(placemen)n(t)f(of)g(data)0
4996 y(across)21 b(the)j(disks)e(in)i(preparation)d(for)i(the)g(displa)
n(y)-7 b(.)35 b(In)23 b(essence,)h Fo(p)f Ft(denotes)g(the)g(incurred)g
(startup)f(latency)-7 b(.)36 b(Asso)r(ciated)0 5126 y(with)28
b(eac)n(h)f(time)h(in)n(terv)-5 b(al)27 b Fo(i)g Ft(are:)60
5357 y(\(1\))42 b(a)20 b(collection)h(of)g(pages)g(retriev)n(ed)f(from)
h(eac)n(h)f(of)h(the)h Fo(D)i Ft(disks)c(during)h(time)h(in)n(terv)-5
b(al)21 b Fo(i)p Ft(,)h(denoted)g(as)e Fo(F)3445 5327
y Fn(0)3433 5379 y Fk(i)3482 5357 y Fo(;)14 b(:)g(:)g(:)g(;)g(F)3732
5322 y Fk(D)r Fg(\000)p Fn(1)3720 5380 y Fk(i)3877 5357
y Ft(,)1929 5656 y(4)p eop
%%Page: 5 6
5 5 bop 60 90 a Ft(\(2\))42 b(a)27 b(collection)g(of)g(pages)g(written)
h(to)f(eac)n(h)g(of)g(the)h Fo(D)i Ft(disks)d(during)g(time)h(in)n
(terv)-5 b(al)28 b Fo(i)p Ft(,)f(denoted)g(as)g Fo(U)3401
60 y Fn(0)3392 112 y Fk(i)3438 90 y Fo(;)14 b(:)g(:)g(:)g(;)g(U)3689
55 y Fk(D)r Fg(\000)p Fn(1)3680 113 y Fk(i)3834 90 y
Ft(,)60 286 y(\(3\))42 b(a)27 b(collection)g(of)g(pages)g(discarded)f
(from)i(memory)e(to)i(accommo)r(date)e(these)i(retriev)-5
b(als,)27 b(denoted)g(as)g Fo(K)3559 298 y Fk(i)3586
286 y Ft(.)0 518 y(F)-7 b(urthermore,)27 b(the)h(retriev)n(ed,)e
(written,)i(and)f(discarded)g(pages)f(m)n(ust)i(satisfy)f(the)h(follo)n
(wing)f(constrain)n(ts:)78 749 y(\(i\))43 b(Once)25 b(the)h(displa)n(y)
f(starts,)g(the)h(set)g(of)f(pages)g(in)h(memory)e(at)i(eac)n(h)f
(instan)n(t)g Fo(i)h Ft(is)f(a)g(sup)r(erset)h(of)f(those)h(required)e
(b)n(y)208 879 y(the)k(displa)n(y)e(sc)n(hedule:)37 b(F)-7
b(or)27 b(eac)n(h)g Fo(i)22 b Fl(2)i Ft([0)p Fo(;)14
b(m)k Fl(\000)g Ft(1])p Fo(;)36 b(P)1914 891 y Fk(i)1965
879 y Fl(\022)23 b Fo(S)2104 891 y Fk(i)2159 879 y Ft(and)k
Fo(P)2373 891 y Fk(i)2424 879 y Fl(\022)c Fo(S)2563 891
y Fk(i)p Fn(+1)2675 879 y Ft(.)55 1075 y(\(ii\))43 b(The)32
b(n)n(um)n(b)r(er)g(of)g(pages)f(retriev)n(ed)g(and)g(written)i(to)f(a)
f(disk)h(during)g(a)g(time)g(in)n(terv)-5 b(al)32 b(do)r(es)g(not)g
(exceed)g Fo(B)t Ft(:)46 b(F)-7 b(or)208 1204 y(eac)n(h)26
b Fo(i)d Fl(2)g Ft([)p Fl(\000)p Fo(p;)14 b(m)k Fl(\000)g
Ft(1])27 b(and)h(eac)n(h)f Fo(d)c Fl(2)g Ft([0)p Fo(;)14
b(D)20 b Fl(\000)e Ft(1],)28 b Fl(j)p Fo(F)1928 1174
y Fk(d)1916 1226 y(i)1966 1204 y Fl(j)19 b Ft(+)f Fl(j)p
Fo(U)2180 1174 y Fk(d)2171 1226 y(i)2218 1204 y Fl(j)23
b(\024)g Fo(B)t Ft(.)32 1400 y(\(iii\))43 b(The)37 b(n)n(um)n(b)r(er)h
(of)f(memory)g(residen)n(t)g(pages)g(at)g(eac)n(h)g(time)h(instan)n(t)g
(is)f(lo)n(w)n(er)g(than)g(the)h(n)n(um)n(b)r(er)g(of)f(a)n(v)-5
b(ailable)208 1530 y(memory)26 b(frames:)37 b(F)-7 b(or)27
b(eac)n(h)f Fo(i)d Fl(2)g Ft([)p Fl(\000)p Fo(p;)14 b(m)p
Ft(])p Fo(;)37 b Fl(j)p Fo(S)1689 1542 y Fk(i)1716 1530
y Fl(j)23 b(\024)g Fo(C)6 b Ft(.)35 1726 y(\(iv\))42
b(The)30 b(retriev)-5 b(als)28 b(resp)r(ect)i(the)g(placemen)n(t)g(of)g
(data:)41 b(F)-7 b(or)29 b(eac)n(h)g(page)g Fo(a)p Ft(,)i(in)n(terv)-5
b(al)29 b Fo(i)p Ft(,)i(and)e(disk)h Fo(d)p Ft(:)42 b
Fo(a)27 b Fl(2)g Fo(F)3577 1696 y Fk(d)3565 1747 y(i)3646
1726 y Ft(implies)208 1855 y(that)32 b Fo(d)e Fl(2)g(P)615
1825 y Fg(0)638 1855 y Ft(\()p Fo(a;)14 b(i)p Ft(\),)33
b(where)e Fl(P)1177 1825 y Fg(0)1232 1855 y Ft(is)h(the)g(placemen)n(t)
f(of)h(data)f(resulting)h(from)f(up)r(dating)h Fl(P)39
b Ft(with)32 b(migrations)e(and)208 1985 y(replications)c(sc)n(heduled)
h(prior)g(to)g(in)n(terv)-5 b(al)27 b Fo(i)p Ft(.)0 2217
y(If)e(there)f(is)h(no)f(manipulation)g(of)h(the)g(data)f(placemen)n(t)
g(\(i.e.,)h(for)f(eac)n(h)g(in)n(terv)-5 b(al)24 b Fo(i)g
Ft(and)h(driv)n(e)e Fo(d)p Ft(,)j Fo(U)3160 2186 y Fk(d)3151
2238 y(i)3221 2217 y Ft(=)d Fl(;)p Ft(\),)i(then)g(w)n(e)f(ha)n(v)n(e)0
2346 y(a)j Fm(r)l(etrieval)k(sche)l(dule)p Ft(.)177 2536
y(T)-7 b(o)27 b(illustrate)g(these)g(concepts,)g(consider)f(a)h(displa)
n(y)g(sc)n(hedule)f(for)h(three)g(time)h(in)n(terv)-5
b(als:)36 b Fo(P)3171 2548 y Fn(0)3208 2536 y Ft(=)p
Fl(f)p Fo(a;)14 b(b)p Fl(g)p Ft(,)26 b Fo(P)3576 2548
y Fn(1)3613 2536 y Ft(=)p Fl(f)p Fo(c;)14 b(d)p Fl(g)p
Ft(,)0 2666 y(and)21 b Fo(P)208 2678 y Fn(2)245 2666
y Ft(=)p Fl(f)p Fo(e;)14 b(f)9 b Fl(g)p Ft(.)33 b(Assume)21
b(that)g(the)h(system)e(consists)g(of)h(t)n(w)n(o)g(disks)f(\()p
Fo(D)r Ft(=2\),)i(eac)n(h)f(with)g(the)g(bandwidth)h(to)f(retriev)n(e)e
(one)0 2795 y(disk)28 b(page)f(during)g(a)h(time)g(in)n(terv)-5
b(al)28 b(\()p Fo(B)t Ft(=1\).)37 b(Assuming)28 b(that)g(all)g
(referenced)f(pages)g(reside)g(on)h(disk)f(one,)h(Figure)f(3\(a\))0
2925 y(sho)n(ws)40 b(a)g(retriev)-5 b(al)40 b(sc)n(hedule)g(that)i
(supp)r(orts)e(a)g(co)r(ordinated)g(displa)n(y)-7 b(.)76
b(In)41 b(this)g(\014gure,)j(a)c(negativ)n(e)g(time)h(instan)n(t)0
3054 y(corresp)r(onds)28 b(to)i(page)f(retriev)-5 b(als)29
b(p)r(erformed)h(prior)e(to)i(the)h(displa)n(y)-7 b(.)43
b(A)31 b(page)e(migh)n(t)h(either)g(b)r(e)g(retriev)n(ed)f(during)h
(the)0 3184 y(time)23 b(in)n(terv)-5 b(al)21 b(prior)g(to)h(its)g
(displa)n(y)g(\(e.g.,)h Fo(f)31 b Ft(is)22 b(retriev)n(ed)f(at)h(in)n
(terv)-5 b(al)21 b(1)h(and)g(displa)n(y)n(ed)f(at)h(in)n(terv)-5
b(al)21 b(2\))h(or)g(pre-fetc)n(hed)f(at)0 3313 y(an)27
b(earlier)e(time)i(in)n(terv)-5 b(al)27 b(\(e.g.,)g Fo(a)f
Ft(is)h(retriev)n(ed)f(at)h(in)n(terv)-5 b(al)26 b(-4)g(and)h(displa)n
(y)n(ed)f(at)g(in)n(terv)-5 b(al)27 b(0\).)36 b(Pre-fetc)n(hing)26
b(increases)0 3443 y(the)36 b(memory)f(requiremen)n(ts)g(of)h(the)g
(system.)62 b(F)-7 b(or)35 b(example,)j(5)d(frames)h(of)g(memory)f(are)
g(allo)r(cated)g(at)h(instan)n(t)f(one)0 3572 y(\()p
Fo(a;)14 b(b;)g(c;)g(d;)g(e)p Ft(\))23 b(while)h(the)h(displa)n(y)e(sc)
n(hedule)g(dictates)h(that)g(only)g(four)f(should)h(b)r(e)g(allo)r
(cated)f(\()p Fo(a;)14 b(b;)g(c;)g(d)p Ft(\).)36 b(The)24
b(other)f(page,)0 3702 y Fo(e)k Ft(is)h(pre-fetc)n(hed)f(for)g(later)g
(use)g(and)h(increase)e(the)i(memory)f(requiremen)n(ts)f(of)i(the)g
(system.)177 3867 y(As)f(illustrated)g(b)n(y)g(this)h(example,)f(an)f
(un)n(balanced)h(sc)n(hedule)g(of)g(references)f(to)h(disks)g(migh)n(t)
g(result)g(in)g(formation)0 3997 y(of)c(b)r(ottlenec)n(k)h(disks)f
(that)h(requires)e(the)i(system)f(to)g(pre-fetc)n(h)g(pages)g(while)g
(other)g(disks)g(remain)g(idle.)36 b(In)24 b(our)e(example,)0
4126 y(while)31 b(the)g(bandwidth)g(of)g(t)n(w)n(o)f(disks)g(could)h
(accommo)r(date)f(the)h(retriev)-5 b(al)29 b(of)i(t)n(w)n(o)f(pages,)h
(the)g(system)f(w)n(as)g(forced)g(to)0 4256 y(pre-fetc)n(h)j(pages)e(b)
r(ecause)i(they)g(all)g(reside)f(on)h(disk)g(one.)52
b(The)33 b(sc)n(heduler)g(ma)n(y)f(construct)g(resource)f(sc)n(hedules)
i(that)0 4385 y(utilize)h(the)g(idle)g(disk)g(bandwidth)g(in)g(order)f
(to)g(minimize)i(the)f(n)n(um)n(b)r(er)g(of)f(pre-fetc)n(hed)h(pages.)
54 b(Figure)33 b(3\(b\))h(sho)n(ws)0 4515 y(one)d(suc)n(h)f(sc)n
(hedule.)47 b(With)32 b(this)f(sc)n(hedule,)g(the)h(system)e(reads)g
(page)g Fo(e)h Ft(from)f(disk)h(one)g(during)f(time)i(in)n(terv)-5
b(al)30 b(-4)g(and)0 4644 y(replicates)25 b(or)g(migrates)g(it)i(to)f
(disk)g(zero)f(during)h(time)g(in)n(terv)-5 b(al)26 b(-3)f(\()p
Fo(U)2273 4614 y Fn(0)2264 4665 y Fg(\000)p Fn(3)2376
4644 y Ft(=)e Fl(f)p Fo(e)p Fl(g)p Ft(\).)35 b(This)27
b(allo)n(ws)d(the)j(system)f(to)g(free)g(the)0 4774 y(memory)i(frame)h
(o)r(ccupied)g(b)n(y)f Fo(e)h Ft(at)g(time)g(instan)n(t)g(-2)g(and,)g
(utilize)g(disk)g(zero)f(to)h(retriev)n(e)e Fo(e)i Ft(during)g(time)g
(in)n(terv)-5 b(al)28 b(one)0 4903 y(to)e(satisfy)g(the)g(displa)n(y)g
(sc)n(hedule.)36 b(With)27 b(this)f(sc)n(hedule,)g(only)g(4)g(memory)f
(frames)g(are)g(required)h(at)g(instan)n(t)g(one)f(\()i
Fo(a)p Ft(,)f Fo(b)p Ft(,)0 5033 y Fo(c)p Ft(,)i Fo(d)p
Ft(\).)177 5198 y(The)37 b(sc)n(hedule)f(for)g(migrations)f(and)h
(replications)f(dep)r(ends)i(on)f(the)h(a)n(v)-5 b(ailable)35
b(disk)i(bandwidth)g(and)f(memory)0 5328 y(during)27
b(eac)n(h)g(time)h(in)n(terv)-5 b(al,)27 b(whic)n(h)h(in)g(turn)f(dep)r
(ends)h(on)g(the)g(system)f(load.)1929 5656 y(5)p eop
%%Page: 6 7
6 6 bop 204 1918 a @beginspecial 0 @llx 0 @lly 419.109985
@urx 229.320007 @ury 4191 @rwi @setspecial
%%BeginDocument: retres.ps
%
% Frame ps_prolog 5.0, for use with Frame 5.0 products
% This ps_prolog file is Copyright (c) 1986-1995 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameMaker/SGML and FrameViewer as long as this 
% copyright notice is preserved.
%
% FrameMaker users specify the proper paper size for each print job in the
% "Print" dialog's "Printer Paper Size" "Width" and "Height~ fields.  If the
% printer that the PS file is sent to does not support the requested paper
% size, or if there is no paper tray of the proper size currently installed, 
% then the job will not be printed.  The following flag, if set to true, will
% cause the job to print on the default paper in such cases.
/FMAllowPaperSizeMismatch            true def
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to true, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% The following is a set of predefined optimal frequencies and angles for various
% common dpi settings. This is taken from "Advances in Color Separation Using
% PostScript Software Technology," from Adobe Systems (3/13/89 P.N. LPS 0043)
% and corrolated with information which is in various PPD (4.0) files.
%
% The "dpiranges" figure is the minimum dots per inch device resolution which
% can support this setting. The "low" and "high" values are controlled by the
% setting of the FMUseHighFrequencyScreens flag above. The "TDot" flags control
% the use of the "Yellow Triple Dot" feature whereby the frequency id divided by
% three, but the dot function is "trippled" giving a block of 3x3 dots per cell.
%
% PatFreq is a compromise pattern frequency for ps Level 2 printers which is close
% to the ideal WYSIWYG pattern frequency of 9 repetitions/inch but does not beat
% (too badly) against the screen frequencies of any separations for that DPI.
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (5.0) def 
/fMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	fMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto show
	72 220 moveto show
	FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!  Check installation;)
		(also check ~/fminit and ./fminit for old versions) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(Adobe's PostScript Language Reference Manual, 2nd Edition, section H.2.4)
	(says your EPS file is not valid, as it calls X              )
	dup dup (X) search pop exch pop exch pop length 
	5 -1 roll 
	putinterval 
	FMFAILURE
	} def
/fmConcatProcs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin [
	/ALDsave
	/FMdicttop
	/FMoptop
	/FMpointsize
	/FMsaveobject
	/b
	/bitmapsave
	/blut
	/bpside
	/bs
	/bstring
	/bwidth
	/c
	/cf
	/cs
	/cynu
	/depth
	/edown
	/fh
	/fillvals
	/fw
	/fx
	/fy
	/g
	/gfile
	/gindex
	/grnt
	/gryt
	/gstring
	/height
	/hh
	/i
	/im
	/indx
	/is
	/k
	/kk
	/landscape
	/lb
	/len
	/llx
	/lly
	/m
	/magu
	/manualfeed
	/n
	/offbits
	/onbits
	/organgle
	/orgbangle
	/orgbfreq
	/orgbproc
	/orgbxfer
	/orgfreq
	/orggangle
	/orggfreq
	/orggproc
	/orggxfer
	/orgmatrix
	/orgproc
	/orgrangle
	/orgrfreq
	/orgrproc
	/orgrxfer
	/orgxfer
	/pagesave
	/paperheight
	/papersizedict
	/paperwidth
	/pos
	/pwid
	/r
	/rad
	/redt
	/sl
	/str
	/tran
	/u
	/urx
	/ury
	/val
	/width
	/width
	/ws
	/ww
	/x
	/x1
	/x2
	/xindex
	/xpoint
	/xscale
	/xx
	/y
	/y1
	/y2
	/yelu
	/yindex
	/ypoint
	/yscale
	/yy
] { 0 def } forall
/FmBD {bind def} bind def
systemdict /pdfmark known {
	/fMAcrobat true def
	
	/FmPD /pdfmark load def
	
	
	/FmPT /show load def
	
	
	currentdistillerparams /CoreDistVersion get 2000 ge {
	
		
		/FmPD2 /pdfmark load def
		
		
		
		
		
		/FmPA { mark exch /Dest exch 5 3 roll 
				/View [ /XYZ null 6 -2 roll FmDC exch pop null] /DEST FmPD 
		}FmBD
	} {
		
		/FmPD2 /cleartomark load def
		/FmPA {pop pop pop}FmBD
	} ifelse
} {
	
	/fMAcrobat false def
	/FmPD /cleartomark load def
	/FmPD2 /cleartomark load def
	/FmPT /pop load def
	/FmPA {pop pop pop}FmBD
} ifelse
/FmDC {
	transform fMDefaultMatrix itransform cvi exch cvi exch
}FmBD
/FmBx {
	dup 3 index lt {3 1 roll exch} if 
	1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/fMNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		RealSetrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
fMLevel1 { 
	
	
	
	/patScreenDict 7 dict dup begin
		<0f1e3c78f0e1c387> [ 45  { pop } {exch pop} 		.5   2 sqrt] FmBD
		<0f87c3e1f0783c1e> [ 135 { pop } {exch pop}			.5   2 sqrt] FmBD
		<cccccccccccccccc> [ 0   { pop } dup				.5   2	   ] FmBD
		<ffff0000ffff0000> [ 90  { pop } dup				.5   2	   ] FmBD
		<8142241818244281> [ 45  { 2 copy lt {exch} if pop}	dup .75  2 sqrt] FmBD
		<03060c183060c081> [ 45  { pop } {exch pop}			.875 2 sqrt] FmBD
		<8040201008040201> [ 135 { pop } {exch pop}			.875 2 sqrt] FmBD
	end def
} { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} ifelse
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				fMAcrobat not FMPColor graymode and and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not fMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/fMDefaultMatrix matrix defaultmatrix def
/fMatrix2 matrix def
/dpi    72 0 fMDefaultMatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 fMDefaultMatrix dtransform exch atan def
	sangle fMatrix2 rotate 
	fMDefaultMatrix fMatrix2 concatmatrix 
	dup 0 get /sflipx exch def
	    3 get /sflipy exch def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	fMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /fMNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	fMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{papersizefailure} if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{2 dict
		 dup /PageSize [paperwidth paperheight] put
		 manualfeed {dup /ManualFeed manualfeed put} if
		 {setpagedevice} stopped {papersizefailure} if
		}
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			fMNegative {
				1 1 4 { 
					pop { 1 exch sub } fmConcatProcs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		fMNegative {
			{ 1 exch sub } fmConcatProcs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/papersizefailure {
	FMAllowPaperSizeMismatch not
		{
(The requested paper size is not available in any currently-installed tray)
(Edit the PS file to "FMAllowPaperSizeMismatch true" to use default tray)
		 FMFAILURE } if
	} def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYK } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYKGRAY } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
fMLevel1 {
	/fmGetFlip {
		fMatrix2 exch get mul 0 lt { -1 } { 1 } ifelse
	} FmBD
} if
/setPatternMode {
	fMLevel1 {
		2 index patScreenDict exch known {
			pop pop
			patScreenDict exch get aload pop 
			freq 								
			mul									
			5 2 roll							
			fMatrix2 currentmatrix 1 get 0 ne {
				3 -1 roll 90 add 3 1 roll 		
				sflipx 1 fmGetFlip sflipy 2 fmGetFlip neg mul
			} {  								
				sflipx 0 fmGetFlip sflipy 3 fmGetFlip mul 
			} ifelse
			0 lt {exch pop} {pop} ifelse 		
			fMNegative { 
				{neg} fmConcatProcs 			
			} if
			bind
			
			
			
			systemdict /setscreen get exec		
			/FrameCurGray exch def
		} {
			/bwidth  exch def
			/bpside  exch def
			/bstring exch def
			/onbits 0 def  /offbits 0 def
			freq sangle landscape {90 add} if 
				{/ypoint exch def
				 /xpoint exch def
				 /xindex xpoint 1 add 2 div bpside mul cvi def
				 /yindex ypoint 1 add 2 div bpside mul cvi def
				 bstring yindex bwidth mul xindex 8 idiv add get
				 1 7 xindex 8 mod sub bitshift and 0 ne fMNegative {not} if
				 {/onbits  onbits  1 add def 1}
				 {/offbits offbits 1 add def 0}
				 ifelse
				}
				setscreen
			offbits offbits onbits add div fMNegative {1.0 exch sub} if
			/FrameCurGray exch def
		} ifelse
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		fMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode fMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode fMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/rip4 { 
	   
	  
	  kis cis copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  cis mis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  mis yis copy pop 
	  dup dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  yis kis copy pop 
	  3 mul is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
/wbytes { 
      dup dup
      8 gt { pop 8 idiv mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	cvtProc                
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def 
	cvtProc              
	/is width depth wbytes string def
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
fMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/kk cynu magu min yelu min def
		/u kk currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 kk currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch fmConcatProcs settransfer
} bind def
/BITMAPCOLOR { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def
	fMLevel1 {	
		colorsetup
		/is width depth wbytes string def
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is width depth wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	fMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {ip} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/depth 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip pop ris} {gis} {bis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCMYKc { 
	/depth 32 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip4 pop cis} {mis} {yis} {kis} true 4 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYK { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /mis width string def
        /yis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf mis readhexstring pop } 
        { cf yis readhexstring pop } 
        { cf kis readhexstring pop } 
        true 4 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/depth 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop ris gis bis width gray} image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAYc { 
	/depth 32 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop cis mis yis kis width cgray} image
        bitmapsave restore 
        grestore
        } bind def
/cgray { 
        /ww exch def
        /k exch def
        /y exch def
        /m exch def
        /c exch def
        0 1 ww 1 sub { /i exch def c i get m i get y i get k i get CMYKtoRGB
				.144 mul 3 1 roll .587 mul 3 1 roll .299 mul add add
				c i 3 -1 roll floor cvi put } for
        c
 		} bind def
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop width gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /yis width string def
        /mis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf mis readhexstring pop 
          cf yis readhexstring pop 
          cf kis readhexstring pop width cgray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
(5.0) FMVERSION
1 1 0 0 419.11 229.32 0 1 6 FMDOCUMENT
0 0 /Times-Roman FMFONTDEFINE
1 0 /Times-Italic FMFONTDEFINE
2 0 /Times-Bold FMFONTDEFINE
3 0 /AvantGarde-Book FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
419.11 229.32 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
369.18 122.09 369.18 125.06 379.56 122.09 369.18 119.11 4 Y
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
369.18 122.09 369.18 125.06 379.56 122.09 369.18 119.11 4 Y
V
228.75 122.09 368.93 122.09 2 L
2 Z
N
228.4 127.84 228.4 116.33 2 L
N
247.56 127.2 247.56 115.69 2 L
N
266.71 127.84 266.71 116.33 2 L
N
285.87 127.2 285.87 115.69 2 L
N
305.03 128.48 305.03 116.97 2 L
N
324.18 127.84 324.18 116.33 2 L
N
343.34 128.48 343.34 116.97 2 L
N
362.5 127.84 362.5 116.33 2 L
N
0 10 Q
(-4) 224.07 105.9 T
(-3) 242.72 105.9 T
(-2) 262.38 105.9 T
(-1) 281.54 105.9 T
(0) 303.19 105.4 T
(1) 322.85 105.4 T
(2) 342 105.4 T
(3) 361.08 105.51 T
362.4 128.82 362.4 124.12 2 L
0 Z
N
364.97 128.57 362.4 124.12 359.83 128.57 3 L
N
362.4 216.1 362.4 128.82 2 L
2 Z
N
305.06 128.46 305.06 123.76 2 L
0 Z
N
307.62 128.21 305.06 123.76 302.49 128.21 3 L
N
305.06 215.74 305.06 128.46 2 L
2 Z
N
(Display starts) 290.69 220.69 T
(Display ends) 348.53 220.69 T
(e) 235.6 134.94 T
(T) 383.64 119.48 T
(ime) 389.39 119.48 T
(a) 254.82 134.88 T
(b) 273.67 135.55 T
(c) 293.49 135.42 T
(d) 311.68 135.81 T
(f) 331.48 135.81 T
1 F
(e) 254.44 176.8 T
228.46 130.13 228.46 125.44 2 L
0 Z
N
231.03 129.88 228.46 125.44 225.9 129.88 3 L
N
228.46 217.42 228.46 130.13 2 L
2 Z
N
0 F
(Request arri) 214.1 220.69 T
(v) 262.45 220.69 T
(es) 267.3 220.69 T
(e) 331.76 148.64 T
(a) 265.75 83.78 T
(e) 245.77 91.92 T
(a) 284.89 84.04 T
(a) 304.04 84.04 T
(a) 323.4 84.04 T
(b) 284.74 74.32 T
(b) 303.65 74.59 T
(b) 322.57 75.11 T
(c) 303.81 66.69 T
(c) 323.4 66.7 T
(c) 342.32 67.21 T
(d) 323.02 56.77 T
(d) 342.16 56.77 T
(e) 342.32 92.18 T
(e) 361.46 92.18 T
(f) 342.39 46.36 T
(f) 361.53 46.38 T
155.06 122.6 155.06 125.57 165.44 122.6 155.06 119.62 4 Y
0 Z
N
155.06 122.6 155.06 125.57 165.44 122.6 155.06 119.62 4 Y
V
14.63 122.6 154.81 122.6 2 L
2 Z
N
14.29 128.35 14.29 116.84 2 L
N
33.44 127.71 33.44 116.2 2 L
N
52.6 128.35 52.6 116.84 2 L
N
71.76 127.71 71.76 116.2 2 L
N
90.91 128.99 90.91 117.48 2 L
N
110.07 128.35 110.07 116.84 2 L
N
129.23 128.99 129.23 117.48 2 L
N
148.38 128.35 148.38 116.84 2 L
N
(-4) 7.95 106.41 T
(-3) 27.11 106.41 T
(-2) 46.26 106.41 T
(-1) 65.42 106.41 T
(0) 89.58 106.41 T
(1) 108.73 105.91 T
(2) 127.89 105.91 T
(3) 146.96 106.02 T
148.79 127.79 148.79 123.1 2 L
0 Z
N
151.35 127.54 148.79 123.1 146.22 127.54 3 L
N
148.79 188.63 148.79 127.79 2 L
2 Z
N
90.94 128.43 90.94 123.74 2 L
0 Z
N
93.51 128.18 90.94 123.74 88.38 128.18 3 L
N
90.94 189.27 90.94 128.43 2 L
2 Z
N
(Display starts) 76.58 195.7 T
(Display ends) 134.42 195.7 T
(a) 21.49 140.95 T
(T) 169.52 119.99 T
(ime) 175.28 119.99 T
(P) 162 77.56 T
(ages in) 167.41 77.56 T
(b) 40.71 140.89 T
(c) 60.05 141.06 T
(d) 78.37 140.93 T
(e) 98.07 141.32 T
(f) 117.37 141.82 T
13.85 129.58 13.85 124.88 2 L
0 Z
N
16.42 129.33 13.85 124.88 11.28 129.33 3 L
N
13.85 190.42 13.85 129.58 2 L
2 Z
N
(Request arri) -0.02 195.7 T
(v) 48.33 195.7 T
(es) 53.18 195.7 T
(a) 51.64 89.42 T
(a) 31.66 89.42 T
(a) 70.78 89.68 T
(a) 89.92 89.68 T
(a) 109.29 89.68 T
(b) 70.62 77.95 T
(b) 89.54 78.73 T
(b) 108.45 79.24 T
(c) 89.69 69.32 T
(c) 109.29 69.32 T
(c) 128.2 69.84 T
(d) 108.91 59.4 T
(d) 128.05 59.4 T
(e) 128.2 50.5 T
(e) 147.34 50.5 T
(f) 128.28 39.79 T
(f) 147.42 40.31 T
(b) 52.48 79.35 T
(c) 70.71 69.19 T
(d) 89.85 59.01 T
(e) 109.45 50.87 T
(\050b\051) 301.6 3.99 T
(\050a\051) 86.58 3.98 T
0 0 0 1 0 0 0 K
(1) 30.3 19.8 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(2) 51.7 19.8 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3) 70.32 19.8 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4) 90.22 19.8 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5) 109.13 19.8 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4) 127.74 19.8 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(2) 147.65 19.8 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(1) 244.04 20.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(1) 265.45 20.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(2) 284.06 20.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3) 303.97 20.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4) 322.87 20.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4) 341.48 20.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(2) 361.39 20.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Amount of) 164.05 29.85 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(memory) 164.05 9.76 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(required) 163.45 19.97 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Amount of) 375.52 29.85 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(memory) 375.52 9.76 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(required) 374.92 19.97 T
0 0 0 1 0 0 0 K
2 F
(F) 180.22 136.56 T
2 8 Q
(1) 186.33 140.56 T
(i) 190.33 134.06 T
0 0 0 1 0 0 0 K
0 10 Q
(Retrievals) 166.55 146.42 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
(Discards) 168.56 174.92 T
(a) 117.29 174.68 T
(b) 116.45 164.24 T
(c) 136.2 175.34 T
(d) 136.05 164.9 T
(Ki) 180.05 165.56 T
2 10 Q
(S) 172.55 57.06 T
2 8 Q
(i) 178.11 54.56 T
0 10 Q
(memory) 162 67.56 T
2 F
(F) 389.17 136.23 T
2 8 Q
(1) 395.28 140.23 T
(i) 399.28 133.73 T
0 0 0 1 0 0 0 K
0 10 Q
(Retrievals) 375.51 160.09 T
0 0 0 1 0 0 0 K
2 F
(F) 389.06 148.51 T
2 8 Q
(0) 395.17 152.51 T
(i) 399.17 146.01 T
1 10 Q
(Writes) 378.56 182.92 T
(U) 388.06 172.92 T
1 8 Q
(0) 395.28 176.92 T
(i) 399.28 170.42 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 F
(Discards) 377.07 206.42 T
(a) 331.8 206.18 T
(b) 330.96 195.74 T
(c) 350.71 206.84 T
(d) 350.56 196.4 T
(Ki) 388.56 197.06 T
0 10 Q
(P) 377 76.56 T
(ages in) 382.41 76.56 T
2 F
(S) 387.55 56.06 T
2 8 Q
(i) 393.11 53.56 T
0 10 Q
(memory) 377 66.56 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
86.56 74.66 96.56 96.66 5 RR
N
106.56 56.9 115.41 96.16 4.43 RR
N
125.06 36.9 133.91 76.16 4.43 RR
N
143.56 36.16 153.56 58.16 5 RR
N
300.56 72.16 310.56 92.16 5 RR
N
321.06 52.4 329.91 91.66 4.43 RR
N
339.56 43.9 348.41 100.66 4.43 RR
N
358.06 42.9 366.91 99.66 4.43 RR
N
FMENDPAGE
%%EndDocument
 @endspecial 0 2214 a Ft(Figure)25 b(3:)36 b(\(a\))26
b(Retriev)-5 b(al)26 b(Sc)n(hedule.)36 b(\(b\))27 b(Resource)e(Sc)n
(hedule.)37 b(P)n(ages)24 b(in)i(memory)f(inside)h(an)g(o)n(v)-5
b(al)25 b(are)g(those)h(required)0 2343 y(b)n(y)h(the)h(displa)n(y)f
(sc)n(hedule)g(at)h(that)g(instan)n(t.)0 2608 y Fu(De\014nition:)72
b Ft(The)22 b Fm(system)j(lo)l(ad)e Ft(for)f(a)g(p)r(erio)r(d)g([0)p
Fo(;)14 b(N)9 b Ft(])21 b(is)h(de\014ned)h(as)e(a)h(sequence)g([)p
Fo(a)2698 2620 y Fn(0)2735 2608 y Fo(;)g(:)14 b(:)g(:)g(;)22
b(a)2980 2620 y Fk(N)6 b Fg(\000)p Fn(1)3128 2608 y Ft(])22
b(of)g(records)f(consisting)0 2738 y(of)i(\()p Fo(D)12
b Ft(+)d(1\))22 b(attributes)h(that)h(sp)r(eci\014es)f(the)g(a)n(v)-5
b(ailabilit)n(y)22 b(of)h(system)g(resources)e(during)h(eac)n(h)g(time)
i(in)n(terv)-5 b(al.)35 b(Eac)n(h)22 b(record)0 2867
y Fo(a)44 2879 y Fk(i)91 2867 y Ft(corresp)r(ond)17 b(to)j(time)f(in)n
(terv)-5 b(al)19 b Fo(i)p Ft(,)k(0)f Fl(\024)h Fo(i)f
Fl(\024)h Fo(N)11 b Fl(\000)r Ft(1,)20 b(and)f(consists)f(of)h(the)h
(follo)n(wing)e(attributes)h Fo(<)k(B)3210 2837 y Fn(0)3206
2889 y Fk(i)3247 2867 y Fo(;)14 b(:)g(:)g(:)g(;)g(B)3499
2832 y Fk(D)r Fg(\000)p Fn(1)3495 2891 y Fk(i)3644 2867
y Fo(;)g(M)3762 2879 y Fk(i)3812 2867 y Fo(>)p Ft(;)0
2997 y(where)28 b Fo(B)308 2967 y Fk(d)304 3019 y(i)375
2997 y Ft(is)h(the)g(disk)f(bandwidth)h(a)n(v)-5 b(ailable)27
b(at)i(driv)n(e)e Fo(d)i Ft(during)f(in)n(terv)-5 b(al)28
b Fo(i)g Ft(and)g Fo(M)2784 3009 y Fk(i)2840 2997 y Ft(is)h(the)f(n)n
(um)n(b)r(er)h(of)f(page)g(frames)0 3127 y(a)n(v)-5 b(ailable)26
b(at)i(instan)n(t)f Fo(i)p Ft(.)177 3317 y(A)h(request)e(to)i(c)n
(hange)e(the)h(placemen)n(t)g(of)h(a)e(page)h(is)g(denoted)g(as)g(\()p
Fo(a;)14 b(sour)r(ce)23 b Fl(!)g(f)p Fo(tar)r(g)s(et)3072
3329 y Fn(1)3109 3317 y Fo(;)14 b(:)g(:)g(:)f(;)h(tar)r(g)s(et)3518
3329 y Fk(n)3563 3317 y Fl(g)p Ft(\),)28 b(where)0 3446
y Fo(a)33 b Ft(is)g(the)h(disk)f(page)f(to)h(migrate/replicate,)f
Fo(sour)r(ce)h Ft(is)g(a)g(disk)g(driv)n(e)f(that)i(con)n(tains)e
Fo(a)p Ft(,)i(and)f Fl(f)p Fo(tar)r(g)s(et)3367 3458
y Fn(1)3404 3446 y Fo(;)14 b(:)g(:)g(:)g(;)g(tar)r(g)s(et)3814
3458 y Fk(n)3858 3446 y Fl(g)0 3576 y Ft(are)32 b(alternativ)n(e)g
(driv)n(es)g(to)h(con)n(tain)g Fo(a)p Ft(.)53 b(T)-7
b(o)33 b(migrate/replicate)e(a)i(page,)h(the)f(system)g(can)g(utilize)g
(in)n(termediate)g(disk)0 3705 y(driv)n(es.)62 b(F)-7
b(or)36 b(example,)i(consider)e(the)h(migration)e(\()p
Fo(a;)14 b Ft(5)37 b Fl(!)h(f)p Ft(2)p Fo(;)14 b Ft(4)p
Fo(;)g Ft(6)p Fl(g)p Ft(\))34 b(to)j(b)r(e)g(sc)n(heduled)f(in)h(a)f
(system)g(with)h(10)e(disk)0 3835 y(driv)n(es)24 b(\()p
Fo(D)i Ft(=)c(10\).)36 b(One)25 b(p)r(ossible)g(sc)n(hedule)g(\(Figure)
g(4\))g(reads)g Fo(a)g Ft(from)g(disk)g(5)g(during)g(in)n(terv)-5
b(al)25 b(1)g(and)g(writes)g(it)h(to)f(disk)0 3964 y(7)33
b(during)f(in)n(terv)-5 b(al)33 b(2.)53 b(Next,)35 b(it)e(reads)f
Fo(a)h Ft(from)g(disk)g(7)g(during)f(in)n(terv)-5 b(al)33
b(4)f(and)h(writes)g(it)g(to)g(disk)g(8)g(during)g(in)n(terv)-5
b(al)0 4094 y(6.)60 b(Subsequen)n(tly)-7 b(,)38 b(it)e(reads)e
Fo(a)i Ft(from)f(disk)g(8)g(during)g(in)n(terv)-5 b(al)35
b(8)g(and)h(writes)f(it)h(to)f(disk)h(6)f(during)g(in)n(terv)-5
b(al)35 b(9.)60 b(The)0 4223 y(adv)-5 b(an)n(tage)24
b(of)i(using)g(in)n(termediate)f(disks)h(\(e.g.,)g(disks)g(7)f(and)h
(8\))g(is)g(that)g(it)g(reduces)g(the)g(memory)f(requiremen)n(ts)g
(when)0 4353 y(there)k(is)h(insu\016cien)n(t)f(bandwidth)h(to)g
(accommo)r(date)e(the)i(writing)f(of)h Fo(a)f Ft(on)g(disks)g(2)p
Fo(;)14 b Ft(4,)29 b(or)g(6.)42 b(Using)29 b(disks)g(7)g(and)h(8)f(as)0
4482 y(in)n(termediate)e(disks)g(prev)n(en)n(ted)g(the)h(system)f(from)
h(staging)e Fo(a)i Ft(in)g(memory)e(during)i(in)n(terv)-5
b(als)26 b([3)p Fo(;)14 b Ft(4])27 b(and)g([7)p Fo(;)14
b Ft(8].)177 4648 y(T)-7 b(o)31 b(simplify)g(the)h(discussion,)f
(assume)f(that)h(the)h(system)f(do)r(es)f(not)h(allo)n(w)f(to)h(ha)n(v)
n(e)f(replicas)g(of)h(a)f(page)g(on)h(disk.)0 4777 y(This)h(limitation)
h(forces)e(the)i(sc)n(heduler)e(to)h(consider)g(migrations)e(as)i(the)h
(only)f(alternativ)n(e)f(to)h(manipulate)g(the)h(data)0
4907 y(placemen)n(t.)56 b(W)-7 b(e)34 b(will)h(remo)n(v)n(e)d(this)i
(assumption)g(later)f(on)h(to)g(generalize)e(the)j(results)e(to)h
(systems)f(that)i(allo)n(w)e(b)r(oth)0 5036 y(migrations)26
b(and)i(replications)e(as)h(alternativ)n(es)f(to)i(c)n(hange)e(the)i
(placemen)n(t.)0 5226 y Fu(De\014nition:)91 b Ft(Giv)n(en)30
b(a)g(collection)g Fo(M)39 b Ft(\()p Fl(f)p Fo(m)1487
5238 y Fn(1)1524 5226 y Fo(;)14 b(:)g(:)g(:)g(;)g(m)1782
5238 y Fk(r)1818 5226 y Fl(g)p Ft(\))31 b(of)f(requests)g(to)g(c)n
(hange)g(the)h(data)f(placemen)n(t)g(on)g(a)g(system)0
5356 y(load)36 b Fo(A)i Ft(for)e(a)h(p)r(erio)r(d)f([0)p
Fo(;)14 b(N)9 b Ft(],)39 b(a)e(sc)n(hedule)f(of)h(migrations)f(for)g
Fo(M)46 b Ft(on)37 b Fo(A)g Ft(maps)g(eac)n(h)f(request)g
Fo(m)3258 5368 y Fk(i)3323 5356 y Ft(=)g(\()p Fo(a;)14
b(sour)r(ce)39 b Fl(!)1929 5656 y Ft(6)p eop
%%Page: 7 8
7 7 bop 150 680 a @beginspecial 0 @llx 0 @lly 432 @urx
80.779999 @ury 4320 @rwi @setspecial
%%BeginDocument: replic.ps
%
% Frame ps_prolog 5.0, for use with Frame 5.0 products
% This ps_prolog file is Copyright (c) 1986-1995 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameMaker/SGML and FrameViewer as long as this 
% copyright notice is preserved.
%
% FrameMaker users specify the proper paper size for each print job in the
% "Print" dialog's "Printer Paper Size" "Width" and "Height~ fields.  If the
% printer that the PS file is sent to does not support the requested paper
% size, or if there is no paper tray of the proper size currently installed, 
% then the job will not be printed.  The following flag, if set to true, will
% cause the job to print on the default paper in such cases.
/FMAllowPaperSizeMismatch            true def
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to true, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% The following is a set of predefined optimal frequencies and angles for various
% common dpi settings. This is taken from "Advances in Color Separation Using
% PostScript Software Technology," from Adobe Systems (3/13/89 P.N. LPS 0043)
% and corrolated with information which is in various PPD (4.0) files.
%
% The "dpiranges" figure is the minimum dots per inch device resolution which
% can support this setting. The "low" and "high" values are controlled by the
% setting of the FMUseHighFrequencyScreens flag above. The "TDot" flags control
% the use of the "Yellow Triple Dot" feature whereby the frequency id divided by
% three, but the dot function is "trippled" giving a block of 3x3 dots per cell.
%
% PatFreq is a compromise pattern frequency for ps Level 2 printers which is close
% to the ideal WYSIWYG pattern frequency of 9 repetitions/inch but does not beat
% (too badly) against the screen frequencies of any separations for that DPI.
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (5.0) def 
/fMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	fMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto show
	72 220 moveto show
	FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!  Check installation;)
		(also check ~/fminit and ./fminit for old versions) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(Adobe's PostScript Language Reference Manual, 2nd Edition, section H.2.4)
	(says your EPS file is not valid, as it calls X              )
	dup dup (X) search pop exch pop exch pop length 
	5 -1 roll 
	putinterval 
	FMFAILURE
	} def
/fmConcatProcs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin [
	/ALDsave
	/FMdicttop
	/FMoptop
	/FMpointsize
	/FMsaveobject
	/b
	/bitmapsave
	/blut
	/bpside
	/bs
	/bstring
	/bwidth
	/c
	/cf
	/cs
	/cynu
	/depth
	/edown
	/fh
	/fillvals
	/fw
	/fx
	/fy
	/g
	/gfile
	/gindex
	/grnt
	/gryt
	/gstring
	/height
	/hh
	/i
	/im
	/indx
	/is
	/k
	/kk
	/landscape
	/lb
	/len
	/llx
	/lly
	/m
	/magu
	/manualfeed
	/n
	/offbits
	/onbits
	/organgle
	/orgbangle
	/orgbfreq
	/orgbproc
	/orgbxfer
	/orgfreq
	/orggangle
	/orggfreq
	/orggproc
	/orggxfer
	/orgmatrix
	/orgproc
	/orgrangle
	/orgrfreq
	/orgrproc
	/orgrxfer
	/orgxfer
	/pagesave
	/paperheight
	/papersizedict
	/paperwidth
	/pos
	/pwid
	/r
	/rad
	/redt
	/sl
	/str
	/tran
	/u
	/urx
	/ury
	/val
	/width
	/width
	/ws
	/ww
	/x
	/x1
	/x2
	/xindex
	/xpoint
	/xscale
	/xx
	/y
	/y1
	/y2
	/yelu
	/yindex
	/ypoint
	/yscale
	/yy
] { 0 def } forall
/FmBD {bind def} bind def
systemdict /pdfmark known {
	/fMAcrobat true def
	
	/FmPD /pdfmark load def
	
	
	/FmPT /show load def
	
	
	currentdistillerparams /CoreDistVersion get 2000 ge {
	
		
		/FmPD2 /pdfmark load def
		
		
		
		
		
		/FmPA { mark exch /Dest exch 5 3 roll 
				/View [ /XYZ null 6 -2 roll FmDC exch pop null] /DEST FmPD 
		}FmBD
	} {
		
		/FmPD2 /cleartomark load def
		/FmPA {pop pop pop}FmBD
	} ifelse
} {
	
	/fMAcrobat false def
	/FmPD /cleartomark load def
	/FmPD2 /cleartomark load def
	/FmPT /pop load def
	/FmPA {pop pop pop}FmBD
} ifelse
/FmDC {
	transform fMDefaultMatrix itransform cvi exch cvi exch
}FmBD
/FmBx {
	dup 3 index lt {3 1 roll exch} if 
	1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/fMNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		RealSetrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
fMLevel1 { 
	
	
	
	/patScreenDict 7 dict dup begin
		<0f1e3c78f0e1c387> [ 45  { pop } {exch pop} 		.5   2 sqrt] FmBD
		<0f87c3e1f0783c1e> [ 135 { pop } {exch pop}			.5   2 sqrt] FmBD
		<cccccccccccccccc> [ 0   { pop } dup				.5   2	   ] FmBD
		<ffff0000ffff0000> [ 90  { pop } dup				.5   2	   ] FmBD
		<8142241818244281> [ 45  { 2 copy lt {exch} if pop}	dup .75  2 sqrt] FmBD
		<03060c183060c081> [ 45  { pop } {exch pop}			.875 2 sqrt] FmBD
		<8040201008040201> [ 135 { pop } {exch pop}			.875 2 sqrt] FmBD
	end def
} { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} ifelse
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				fMAcrobat not FMPColor graymode and and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not fMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/fMDefaultMatrix matrix defaultmatrix def
/fMatrix2 matrix def
/dpi    72 0 fMDefaultMatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 fMDefaultMatrix dtransform exch atan def
	sangle fMatrix2 rotate 
	fMDefaultMatrix fMatrix2 concatmatrix 
	dup 0 get /sflipx exch def
	    3 get /sflipy exch def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	fMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /fMNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	fMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{papersizefailure} if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{2 dict
		 dup /PageSize [paperwidth paperheight] put
		 manualfeed {dup /ManualFeed manualfeed put} if
		 {setpagedevice} stopped {papersizefailure} if
		}
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			fMNegative {
				1 1 4 { 
					pop { 1 exch sub } fmConcatProcs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		fMNegative {
			{ 1 exch sub } fmConcatProcs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/papersizefailure {
	FMAllowPaperSizeMismatch not
		{
(The requested paper size is not available in any currently-installed tray)
(Edit the PS file to "FMAllowPaperSizeMismatch true" to use default tray)
		 FMFAILURE } if
	} def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYK } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYKGRAY } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
fMLevel1 {
	/fmGetFlip {
		fMatrix2 exch get mul 0 lt { -1 } { 1 } ifelse
	} FmBD
} if
/setPatternMode {
	fMLevel1 {
		2 index patScreenDict exch known {
			pop pop
			patScreenDict exch get aload pop 
			freq 								
			mul									
			5 2 roll							
			fMatrix2 currentmatrix 1 get 0 ne {
				3 -1 roll 90 add 3 1 roll 		
				sflipx 1 fmGetFlip sflipy 2 fmGetFlip neg mul
			} {  								
				sflipx 0 fmGetFlip sflipy 3 fmGetFlip mul 
			} ifelse
			0 lt {exch pop} {pop} ifelse 		
			fMNegative { 
				{neg} fmConcatProcs 			
			} if
			bind
			
			
			
			systemdict /setscreen get exec		
			/FrameCurGray exch def
		} {
			/bwidth  exch def
			/bpside  exch def
			/bstring exch def
			/onbits 0 def  /offbits 0 def
			freq sangle landscape {90 add} if 
				{/ypoint exch def
				 /xpoint exch def
				 /xindex xpoint 1 add 2 div bpside mul cvi def
				 /yindex ypoint 1 add 2 div bpside mul cvi def
				 bstring yindex bwidth mul xindex 8 idiv add get
				 1 7 xindex 8 mod sub bitshift and 0 ne fMNegative {not} if
				 {/onbits  onbits  1 add def 1}
				 {/offbits offbits 1 add def 0}
				 ifelse
				}
				setscreen
			offbits offbits onbits add div fMNegative {1.0 exch sub} if
			/FrameCurGray exch def
		} ifelse
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		fMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode fMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode fMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/rip4 { 
	   
	  
	  kis cis copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  cis mis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  mis yis copy pop 
	  dup dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  yis kis copy pop 
	  3 mul is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
/wbytes { 
      dup dup
      8 gt { pop 8 idiv mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	cvtProc                
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def 
	cvtProc              
	/is width depth wbytes string def
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
fMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/kk cynu magu min yelu min def
		/u kk currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 kk currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch fmConcatProcs settransfer
} bind def
/BITMAPCOLOR { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def
	fMLevel1 {	
		colorsetup
		/is width depth wbytes string def
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is width depth wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	fMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {ip} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/depth 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip pop ris} {gis} {bis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCMYKc { 
	/depth 32 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip4 pop cis} {mis} {yis} {kis} true 4 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYK { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /mis width string def
        /yis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf mis readhexstring pop } 
        { cf yis readhexstring pop } 
        { cf kis readhexstring pop } 
        true 4 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/depth 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop ris gis bis width gray} image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAYc { 
	/depth 32 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop cis mis yis kis width cgray} image
        bitmapsave restore 
        grestore
        } bind def
/cgray { 
        /ww exch def
        /k exch def
        /y exch def
        /m exch def
        /c exch def
        0 1 ww 1 sub { /i exch def c i get m i get y i get k i get CMYKtoRGB
				.144 mul 3 1 roll .587 mul 3 1 roll .299 mul add add
				c i 3 -1 roll floor cvi put } for
        c
 		} bind def
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop width gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /yis width string def
        /mis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf mis readhexstring pop 
          cf yis readhexstring pop 
          cf kis readhexstring pop width cgray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
(5.0) FMVERSION
1 1 0 0 432 80.78 0 1 2 FMDOCUMENT
0 0 /Times-Roman FMFONTDEFINE
1 0 /Times-Bold FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
432 80.78 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
420.72 47.03 420.72 50.01 431.1 47.03 420.72 44.06 4 Y
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
420.72 47.03 420.72 50.01 431.1 47.03 420.72 44.06 4 Y
V
2.39 47.03 420.47 47.03 2 L
2 Z
N
2.39 57.03 2.39 39.03 2 L
N
36.76 57.28 36.76 39.28 2 L
N
71.12 57.03 71.12 39.03 2 L
N
105.49 56.28 105.49 38.28 2 L
N
139.86 56.03 139.86 38.03 2 L
N
174.23 55.28 174.23 37.28 2 L
N
208.6 57.03 208.6 39.03 2 L
N
242.97 56.28 242.97 38.28 2 L
N
277.33 56.03 277.33 38.03 2 L
N
311.7 55.28 311.7 37.28 2 L
N
346.07 57.03 346.07 39.03 2 L
N
0 10 Q
(0) 0 27.03 T
(1) 34.37 28.03 T
(2) 68.26 29.03 T
(3) 102.63 28.03 T
(4) 137 27.53 T
(5) 171.37 27.53 T
(6) 205.73 27.53 T
(7) 240.1 27.53 T
(8) 274.47 26.53 T
(9) 308.84 26.53 T
88.31 61.23 88.31 56.53 2 L
0 Z
N
90.88 60.98 88.31 56.53 85.74 60.98 3 L
N
53.94 11.03 53.94 65.03 88.31 65.03 88.31 61.23 4 L
2 Z
N
225.78 61.23 225.78 56.53 2 L
0 Z
N
228.35 60.98 225.78 56.53 223.21 60.98 3 L
N
157.04 56.03 157.04 65.03 225.78 65.03 225.78 61.23 4 L
2 Z
N
328.89 16.23 328.89 11.53 2 L
0 Z
N
331.45 15.98 328.89 11.53 326.32 15.98 3 L
N
294.52 56.03 294.52 65.03 328.89 65.03 328.89 16.23 4 L
2 Z
N
1 F
(a) 71.12 74.03 T
(a) 191.41 74.03 T
(a) 311.7 74.03 T
(5) 52.03 2.03 T
(7) 85.76 47.03 T
(7) 155.14 47.03 T
(8) 223.87 47.03 T
(8) 293.25 47.03 T
(6) 326.98 2.03 T
0 0 0 1 0 0 0 K
0 F
(Time Intervals) 369 30.39 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndDocument
 @endspecial 1328 976 a Ft(Figure)27 b(4:)36 b(Sc)n(hedule)28
b(of)f(a)g(migration.)150 1857 y @beginspecial 0 @llx
0 @lly 432 @urx 92.019997 @ury 4320 @rwi @setspecial
%%BeginDocument: migra.ps
%
% Frame ps_prolog 5.0, for use with Frame 5.0 products
% This ps_prolog file is Copyright (c) 1986-1995 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameMaker/SGML and FrameViewer as long as this 
% copyright notice is preserved.
%
% FrameMaker users specify the proper paper size for each print job in the
% "Print" dialog's "Printer Paper Size" "Width" and "Height~ fields.  If the
% printer that the PS file is sent to does not support the requested paper
% size, or if there is no paper tray of the proper size currently installed, 
% then the job will not be printed.  The following flag, if set to true, will
% cause the job to print on the default paper in such cases.
/FMAllowPaperSizeMismatch            true def
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to true, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% The following is a set of predefined optimal frequencies and angles for various
% common dpi settings. This is taken from "Advances in Color Separation Using
% PostScript Software Technology," from Adobe Systems (3/13/89 P.N. LPS 0043)
% and corrolated with information which is in various PPD (4.0) files.
%
% The "dpiranges" figure is the minimum dots per inch device resolution which
% can support this setting. The "low" and "high" values are controlled by the
% setting of the FMUseHighFrequencyScreens flag above. The "TDot" flags control
% the use of the "Yellow Triple Dot" feature whereby the frequency id divided by
% three, but the dot function is "trippled" giving a block of 3x3 dots per cell.
%
% PatFreq is a compromise pattern frequency for ps Level 2 printers which is close
% to the ideal WYSIWYG pattern frequency of 9 repetitions/inch but does not beat
% (too badly) against the screen frequencies of any separations for that DPI.
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (5.0) def 
/fMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	fMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto show
	72 220 moveto show
	FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!  Check installation;)
		(also check ~/fminit and ./fminit for old versions) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(Adobe's PostScript Language Reference Manual, 2nd Edition, section H.2.4)
	(says your EPS file is not valid, as it calls X              )
	dup dup (X) search pop exch pop exch pop length 
	5 -1 roll 
	putinterval 
	FMFAILURE
	} def
/fmConcatProcs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin [
	/ALDsave
	/FMdicttop
	/FMoptop
	/FMpointsize
	/FMsaveobject
	/b
	/bitmapsave
	/blut
	/bpside
	/bs
	/bstring
	/bwidth
	/c
	/cf
	/cs
	/cynu
	/depth
	/edown
	/fh
	/fillvals
	/fw
	/fx
	/fy
	/g
	/gfile
	/gindex
	/grnt
	/gryt
	/gstring
	/height
	/hh
	/i
	/im
	/indx
	/is
	/k
	/kk
	/landscape
	/lb
	/len
	/llx
	/lly
	/m
	/magu
	/manualfeed
	/n
	/offbits
	/onbits
	/organgle
	/orgbangle
	/orgbfreq
	/orgbproc
	/orgbxfer
	/orgfreq
	/orggangle
	/orggfreq
	/orggproc
	/orggxfer
	/orgmatrix
	/orgproc
	/orgrangle
	/orgrfreq
	/orgrproc
	/orgrxfer
	/orgxfer
	/pagesave
	/paperheight
	/papersizedict
	/paperwidth
	/pos
	/pwid
	/r
	/rad
	/redt
	/sl
	/str
	/tran
	/u
	/urx
	/ury
	/val
	/width
	/width
	/ws
	/ww
	/x
	/x1
	/x2
	/xindex
	/xpoint
	/xscale
	/xx
	/y
	/y1
	/y2
	/yelu
	/yindex
	/ypoint
	/yscale
	/yy
] { 0 def } forall
/FmBD {bind def} bind def
systemdict /pdfmark known {
	/fMAcrobat true def
	
	/FmPD /pdfmark load def
	
	
	/FmPT /show load def
	
	
	currentdistillerparams /CoreDistVersion get 2000 ge {
	
		
		/FmPD2 /pdfmark load def
		
		
		
		
		
		/FmPA { mark exch /Dest exch 5 3 roll 
				/View [ /XYZ null 6 -2 roll FmDC exch pop null] /DEST FmPD 
		}FmBD
	} {
		
		/FmPD2 /cleartomark load def
		/FmPA {pop pop pop}FmBD
	} ifelse
} {
	
	/fMAcrobat false def
	/FmPD /cleartomark load def
	/FmPD2 /cleartomark load def
	/FmPT /pop load def
	/FmPA {pop pop pop}FmBD
} ifelse
/FmDC {
	transform fMDefaultMatrix itransform cvi exch cvi exch
}FmBD
/FmBx {
	dup 3 index lt {3 1 roll exch} if 
	1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/fMNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		RealSetrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
fMLevel1 { 
	
	
	
	/patScreenDict 7 dict dup begin
		<0f1e3c78f0e1c387> [ 45  { pop } {exch pop} 		.5   2 sqrt] FmBD
		<0f87c3e1f0783c1e> [ 135 { pop } {exch pop}			.5   2 sqrt] FmBD
		<cccccccccccccccc> [ 0   { pop } dup				.5   2	   ] FmBD
		<ffff0000ffff0000> [ 90  { pop } dup				.5   2	   ] FmBD
		<8142241818244281> [ 45  { 2 copy lt {exch} if pop}	dup .75  2 sqrt] FmBD
		<03060c183060c081> [ 45  { pop } {exch pop}			.875 2 sqrt] FmBD
		<8040201008040201> [ 135 { pop } {exch pop}			.875 2 sqrt] FmBD
	end def
} { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} ifelse
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				fMAcrobat not FMPColor graymode and and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not fMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/fMDefaultMatrix matrix defaultmatrix def
/fMatrix2 matrix def
/dpi    72 0 fMDefaultMatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 fMDefaultMatrix dtransform exch atan def
	sangle fMatrix2 rotate 
	fMDefaultMatrix fMatrix2 concatmatrix 
	dup 0 get /sflipx exch def
	    3 get /sflipy exch def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	fMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /fMNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	fMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{papersizefailure} if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{2 dict
		 dup /PageSize [paperwidth paperheight] put
		 manualfeed {dup /ManualFeed manualfeed put} if
		 {setpagedevice} stopped {papersizefailure} if
		}
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			fMNegative {
				1 1 4 { 
					pop { 1 exch sub } fmConcatProcs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		fMNegative {
			{ 1 exch sub } fmConcatProcs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/papersizefailure {
	FMAllowPaperSizeMismatch not
		{
(The requested paper size is not available in any currently-installed tray)
(Edit the PS file to "FMAllowPaperSizeMismatch true" to use default tray)
		 FMFAILURE } if
	} def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYK } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYKGRAY } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
fMLevel1 {
	/fmGetFlip {
		fMatrix2 exch get mul 0 lt { -1 } { 1 } ifelse
	} FmBD
} if
/setPatternMode {
	fMLevel1 {
		2 index patScreenDict exch known {
			pop pop
			patScreenDict exch get aload pop 
			freq 								
			mul									
			5 2 roll							
			fMatrix2 currentmatrix 1 get 0 ne {
				3 -1 roll 90 add 3 1 roll 		
				sflipx 1 fmGetFlip sflipy 2 fmGetFlip neg mul
			} {  								
				sflipx 0 fmGetFlip sflipy 3 fmGetFlip mul 
			} ifelse
			0 lt {exch pop} {pop} ifelse 		
			fMNegative { 
				{neg} fmConcatProcs 			
			} if
			bind
			
			
			
			systemdict /setscreen get exec		
			/FrameCurGray exch def
		} {
			/bwidth  exch def
			/bpside  exch def
			/bstring exch def
			/onbits 0 def  /offbits 0 def
			freq sangle landscape {90 add} if 
				{/ypoint exch def
				 /xpoint exch def
				 /xindex xpoint 1 add 2 div bpside mul cvi def
				 /yindex ypoint 1 add 2 div bpside mul cvi def
				 bstring yindex bwidth mul xindex 8 idiv add get
				 1 7 xindex 8 mod sub bitshift and 0 ne fMNegative {not} if
				 {/onbits  onbits  1 add def 1}
				 {/offbits offbits 1 add def 0}
				 ifelse
				}
				setscreen
			offbits offbits onbits add div fMNegative {1.0 exch sub} if
			/FrameCurGray exch def
		} ifelse
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		fMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode fMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode fMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/rip4 { 
	   
	  
	  kis cis copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  cis mis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  mis yis copy pop 
	  dup dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  yis kis copy pop 
	  3 mul is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
/wbytes { 
      dup dup
      8 gt { pop 8 idiv mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	cvtProc                
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def 
	cvtProc              
	/is width depth wbytes string def
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
fMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/kk cynu magu min yelu min def
		/u kk currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 kk currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch fmConcatProcs settransfer
} bind def
/BITMAPCOLOR { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def
	fMLevel1 {	
		colorsetup
		/is width depth wbytes string def
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is width depth wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	fMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {ip} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/depth 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip pop ris} {gis} {bis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCMYKc { 
	/depth 32 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip4 pop cis} {mis} {yis} {kis} true 4 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYK { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /mis width string def
        /yis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf mis readhexstring pop } 
        { cf yis readhexstring pop } 
        { cf kis readhexstring pop } 
        true 4 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/depth 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop ris gis bis width gray} image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAYc { 
	/depth 32 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop cis mis yis kis width cgray} image
        bitmapsave restore 
        grestore
        } bind def
/cgray { 
        /ww exch def
        /k exch def
        /y exch def
        /m exch def
        /c exch def
        0 1 ww 1 sub { /i exch def c i get m i get y i get k i get CMYKtoRGB
				.144 mul 3 1 roll .587 mul 3 1 roll .299 mul add add
				c i 3 -1 roll floor cvi put } for
        c
 		} bind def
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop width gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /yis width string def
        /mis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf mis readhexstring pop 
          cf yis readhexstring pop 
          cf kis readhexstring pop width cgray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
(5.0) FMVERSION
1 1 0 0 432 92.02 0 1 12 FMDOCUMENT
0 0 /Times-Bold FMFONTDEFINE
1 0 /Times-Italic FMFONTDEFINE
2 0 /Times-Roman FMFONTDEFINE
3 0 /Times-BoldItalic FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
432 92.02 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.99 57.77 428.89 57.77 2 L
0.5 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
22.49 67.77 22.49 49.77 2 L
N
37.31 68.02 37.31 50.02 2 L
N
63.46 67.77 63.46 49.77 2 L
N
80.95 67.02 80.95 49.02 2 L
N
109.6 66.77 109.6 48.77 2 L
N
126.75 66.02 126.75 48.02 2 L
N
150.9 67.77 150.9 49.77 2 L
N
168.05 67.02 168.05 49.02 2 L
N
330.7 66.77 330.7 48.77 2 L
N
346.35 66.02 346.35 48.02 2 L
N
369 67.77 369 49.77 2 L
N
384.55 67.02 384.55 49.02 2 L
N
74.4 75.27 74.4 70.57 2 L
0 Z
N
76.97 75.02 74.4 70.57 71.83 75.02 3 L
N
29.92 17.27 29.92 80.63 74.4 80.63 74.4 75.27 4 L
2 Z
N
159.98 77.97 159.98 73.27 2 L
0 Z
N
162.54 77.72 159.98 73.27 157.41 77.72 3 L
N
117.17 72.77 117.17 81.77 159.98 81.77 159.98 77.97 4 L
2 Z
N
381.53 19.47 381.53 14.77 2 L
0 Z
N
384.1 19.22 381.53 14.77 378.96 19.22 3 L
N
335.28 71.77 335.28 83.27 381.53 83.27 381.53 19.47 4 L
2 Z
N
0 10 Q
(a) 51.9 84.77 T
(a) 137.83 85.27 T
(a) 352.85 84.77 T
(sour) 25.62 6.27 T
(ce) 44.33 6.27 T
1 F
(t) 17.94 36.63 T
2 8 Q
(0) 21.28 33.18 T
1 F
(i) 21.28 42.45 T
1 10 Q
(t) 59.12 36.63 T
2 8 Q
(1) 62.54 33.18 T
1 F
(i) 62.54 42.45 T
1 10 Q
(t) 105.02 36.98 T
2 8 Q
(2) 108.44 33.53 T
1 F
(i) 108.44 42.8 T
1 10 Q
(t) 146.58 36.63 T
2 8 Q
(3) 150 33.18 T
1 F
(i) 150 42.45 T
1 10 Q
(t) 364.67 37.13 T
2 8 Q
(2) 368.08 33.68 T
1 F
(k) 372.7 33.68 T
(i) 376.69 29.78 T
2 F
(1) 387.43 33.68 T
(+) 380.92 33.68 T
1 F
(i) 368.08 42.95 T
1 10 Q
(t) 326.37 36.13 T
2 8 Q
(2) 329.79 32.68 T
1 F
(k) 334.4 32.68 T
(i) 338.4 28.78 T
(i) 329.79 41.95 T
3 10 Q
(d) 66.55 61.63 T
0 8 Q
(1) 72.17 58.18 T
3 F
(i) 76.63 67.45 T
3 10 Q
(d) 153.27 61.63 T
0 8 Q
(2) 158.89 58.18 T
3 F
(i) 163.35 67.45 T
3 10 Q
(d) 333.14 65.63 T
3 8 Q
(k) 338.95 62.18 T
(i) 343.25 58.28 T
(i) 340.93 71.45 T
3 10 Q
(d) 111.94 61.63 T
0 8 Q
(1) 117.57 58.18 T
3 F
(i) 122.02 67.45 T
0 10 Q
(tar) 365.53 6.13 T
(get) 378.2 6.13 T
0 8 Q
(i) 391.81 8.13 T
(p) 391.81 1.63 T
2 10 Q
(.....) 132.7 62.3 T
(.....) 200.93 79.13 T
(.....) 201.26 62.3 T
(.....) 89.97 62.3 T
(.....) 44.75 62.3 T
(.....) 350.49 63.63 T
250.2 66.77 250.2 48.77 2 L
N
267.35 66.02 267.35 48.02 2 L
N
288.5 66.27 288.5 48.27 2 L
N
304.05 67.02 304.05 49.02 2 L
N
0 F
(a) 272.35 84.77 T
1 F
(t) 283.42 35.63 T
2 8 Q
(2) 286.84 32.18 T
1 F
(k) 291.46 32.18 T
(i) 295.45 28.28 T
2 F
(1) 305.67 32.18 T
(\320) 299.67 32.18 T
1 F
(i) 286.84 41.45 T
3 10 Q
(d) 290.64 65.63 T
3 8 Q
(k) 296.45 62.18 T
(i) 300.75 58.28 T
(i) 298.43 71.45 T
2 10 Q
(.....) 269.99 63.63 T
(.....) 309.97 64.8 T
296.48 77.97 296.48 73.27 2 L
0 Z
N
299.04 77.72 296.48 73.27 293.91 77.72 3 L
N
254.67 72.77 254.67 81.77 296.48 81.77 296.48 77.97 4 L
2 Z
N
3 F
(d) 250.59 65.13 T
3 7 Q
(k) 254.38 62.43 T
3 5 Q
(i) 258.14 60.48 T
2 F
(1) 264.53 60.48 T
(\320) 260.78 60.48 T
3 8 Q
(i) 257.48 70.95 T
1 10 Q
(t) 244.93 35.63 T
2 8 Q
(2) 248.34 32.18 T
1 F
(k) 252.96 32.18 T
(i) 256.95 28.28 T
2 F
(2) 267.17 32.18 T
(\320) 261.17 32.18 T
1 F
(i) 248.34 41.45 T
2 F
(T) 415.39 31.38 T
(ime) 420 31.38 T
1.99 67.27 1.99 49.27 2 L
N
429.39 68.88 429.39 50.88 2 L
N
2 10 Q
(N) 425.39 38.88 T
(0) -0.61 36.88 T
2 8 Q
(Interv) 405.39 23.38 T
(als) 424.29 23.38 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndDocument
 @endspecial 1298 2153 a(Figure)g(5:)37 b(Sc)n(hedule)27
b(of)h(migration)e Fo(m)2551 2165 y Fk(i)2579 2153 y
Ft(.)0 2415 y Fl(f)p Fo(tar)r(g)s(et)267 2385 y Fk(i)267
2436 y Fn(1)304 2415 y Fo(;)14 b(:)g(:)g(:)f(;)h(tar)r(g)s(et)713
2385 y Fk(i)713 2436 y(n)754 2444 y Ff(i)784 2415 y Fl(g)p
Ft(\))28 b(in)n(to)f(a)g(sequence)h(\(Figure)f(5\))g
Fl(f)p Ft(\()p Fo(sour)r(ce;)14 b(t)2245 2385 y Fk(i)2245
2436 y Fn(0)2282 2415 y Ft(\))p Fo(;)28 b Ft(\()p Fo(d)2440
2385 y Fk(i)2440 2436 y Fn(1)2478 2415 y Fo(;)14 b Ft([)p
Fo(t)2568 2385 y Fk(i)2568 2436 y Fn(1)2605 2415 y Fo(;)g(t)2672
2385 y Fk(i)2672 2436 y Fn(2)2709 2415 y Ft(]\))p Fo(;)28
b(:)14 b(:)g(:)g(;)28 b Ft(\()p Fo(d)3052 2385 y Fk(i)3052
2438 y(k)3087 2446 y Ff(i)3118 2415 y Fo(;)14 b Ft([)p
Fo(t)3208 2385 y Fk(i)3208 2438 y Fn(2)p Fk(k)3276 2446
y Ff(i)3303 2438 y Fg(\000)p Fn(1)3392 2415 y Fo(;)g(t)3459
2385 y Fk(i)3459 2438 y Fn(2)p Fk(k)3527 2446 y Ff(i)3558
2415 y Ft(]\))p Fo(;)0 2544 y Ft(\()p Fo(tar)r(g)s(et)257
2514 y Fk(i)257 2565 y(p)296 2544 y Fo(;)g(t)363 2514
y Fk(i)363 2568 y Fn(2)p Fk(k)431 2576 y Ff(i)457 2568
y Fn(+1)545 2544 y Ft(\))p Fl(g)28 b Ft(where)f Fo(k)930
2556 y Fk(i)985 2544 y Ft(is)h(the)g(n)n(um)n(b)r(er)f(of)h(in)n
(termediate)f(disks.)36 b(Suc)n(h)28 b(that:)78 2773
y(\(i\))43 b(There)27 b(is)g(disk)h(bandwidth)g(a)n(v)-5
b(ailable)26 b(in)i Fo(sour)r(ce)g Ft(during)f(in)n(terv)-5
b(al)27 b Fo(t)2420 2743 y Fk(i)2420 2794 y Fn(0)2485
2773 y Ft(to)g(read)g Fo(a)p Ft(.)55 2968 y(\(ii\))43
b(F)-7 b(or)33 b(eac)n(h)g Fo(j)38 b Fl(2)c Ft([1)p Fo(;)14
b(k)862 2980 y Fk(i)889 2968 y Ft(],)36 b(disk)e Fo(d)1194
2938 y Fk(i)1194 2989 y(j)1263 2968 y Ft(has)f(su\016cien)n(t)h
(bandwidth)g(to)g(write)f Fo(a)h Ft(during)g(in)n(terv)-5
b(al)33 b Fo(t)3203 2938 y Fk(i)3203 2989 y Fn(2)p Fk(j)s
Fg(\000)p Fn(1)3390 2968 y Ft(and)g(to)h(read)f Fo(a)208
3097 y Ft(during)27 b(in)n(terv)-5 b(al)27 b Fo(t)801
3067 y Fk(i)801 3119 y Fn(2)p Fk(j)869 3097 y Ft(.)32
3292 y(\(iii\))43 b(There)27 b(is)g(disk)h(bandwidth)g(a)n(v)-5
b(ailable)26 b(to)h(write)h Fo(a)f Ft(on)h(disk)f Fo(tar)r(g)s(et)2360
3262 y Fk(i)2360 3312 y(p)2426 3292 y Ft(during)g(in)n(terv)-5
b(al)27 b Fo(t)3019 3262 y Fk(i)3019 3315 y Fn(2)p Fk(k)3087
3323 y Ff(i)3114 3315 y Fn(+1)3202 3292 y Ft(.)35 3486
y(\(iv\))42 b(The)30 b(migrations)g(are)g(sc)n(heduled)g(within)i(the)f
(p)r(erio)r(d)g([0)p Fo(;)14 b(N)9 b Ft(])30 b(and)h(the)g(reads)f(and)
h(writes)f(are)g(sc)n(heduled)h(in)g(the)208 3616 y(righ)n(t)g(order:)
45 b(0)31 b Fl(\024)f Fo(t)870 3586 y Fk(i)870 3636 y
Fn(0)939 3616 y Fo(<)g(t)1064 3586 y Fk(i)1064 3639 y
Fn(2)p Fk(k)1132 3647 y Ff(i)1159 3639 y Fn(+1)1278 3616
y Fl(\024)h Fo(N)41 b Ft(and:)46 b(\(a\))33 b(for)f(eac)n(h)f
Fo(j)36 b Fl(2)c Ft([1)p Fo(;)14 b Ft(2)p Fo(k)2491 3628
y Fk(i)2518 3616 y Ft(],)33 b(0)e Fl(\024)g Fo(t)2796
3586 y Fk(i)2796 3636 y Fn(0)2864 3616 y Fo(<)f(t)2989
3586 y Fk(i)2989 3637 y(j)3055 3616 y Fo(<)h(t)3181 3586
y Fk(i)3181 3639 y Fn(2)p Fk(k)3249 3647 y Ff(i)3276
3639 y Fn(+1)3395 3616 y Fl(\024)g Fo(N)9 b Ft(,)33 b(and)f(\(b\))208
3745 y Fo(j)c(<)22 b(l)r Ft(,)27 b(for)g Fo(l)e Fl(2)e
Ft([1)p Fo(;)14 b Ft(2)p Fo(k)876 3757 y Fk(i)903 3745
y Ft(],)28 b(implies)g Fo(t)1289 3715 y Fk(i)1289 3767
y(j)1347 3745 y Fo(<)22 b(t)1464 3715 y Fk(i)1464 3769
y(l)1492 3745 y Ft(.)58 3940 y(\(v\))42 b(P)n(age)25
b Fo(a)j Ft(is)f(migrated)g(to)h(one)f(of)g(the)h(target)f(disks:)37
b Fo(p)22 b Fl(2)i Ft([1)p Fo(;)14 b(n)2185 3952 y Fk(i)2212
3940 y Ft(].)35 4134 y(\(vi\))42 b(There)34 b(is)h(memory)g(a)n(v)-5
b(ailable)34 b(to)h(ha)n(v)n(e)f(the)h(page)g(memory)f(residen)n(t)h
(during)g(the)g(follo)n(wing)f(p)r(erio)r(ds:)52 b(\()p
Fo(t)3712 4104 y Fk(i)3712 4155 y Fn(0)3750 4134 y Fo(;)14
b(t)3817 4104 y Fk(i)3817 4155 y Fn(1)3854 4134 y Ft(],)208
4264 y(\()p Fo(t)270 4234 y Fk(i)270 4285 y Fn(2)307
4264 y Fo(;)g(t)374 4234 y Fk(i)374 4285 y Fn(3)411 4264
y Ft(],)28 b Fo(:)14 b(:)g(:)p Ft(,)28 b(\()p Fo(t)695
4234 y Fk(i)695 4287 y Fn(2)p Fk(k)763 4295 y Ff(i)794
4264 y Fo(;)14 b(t)861 4234 y Fk(i)861 4287 y Fn(2)p
Fk(k)929 4295 y Ff(i)955 4287 y Fn(+1)1043 4264 y Ft(].)12
4458 y(\(vii\))42 b(The)24 b(in)n(termediate)g(driv)n(es)g(are)f
(di\013eren)n(t)i(from)f(the)h(source)e(and)h(target)g(driv)n(es,)g
(otherwise)g(the)g(system)h(w)n(ould)f(b)r(e)208 4588
y(p)r(erforming)i(w)n(asteful)i(w)n(ork:)35 b(for)27
b(eac)n(h)g Fo(j)h Fl(2)23 b Ft([1)p Fo(;)14 b(k)1790
4600 y Fk(i)1818 4588 y Ft(],)28 b Fo(d)1935 4558 y Fk(i)1935
4610 y(j)1993 4588 y Fl(62)23 b(f)p Fo(sour)r(ce;)14
b(tar)r(g)s(et)2616 4558 y Fk(i)2616 4609 y Fn(1)2653
4588 y Fo(;)g(:)g(:)g(:)f(;)h(tar)r(g)s(et)3062 4558
y Fk(i)3062 4608 y(n)3103 4616 y Ff(i)3134 4588 y Fl(g)0
5030 y Fp(3)135 b(Related)46 b(W)-11 b(ork)0 5278 y Ft(Sev)n(eral)20
b(researc)n(hers)f(ha)n(v)n(e)i(studied)h(the)g(complexit)n(y)f(of)g
(sc)n(heduling)h(problems)f([GJ75)n(,)h(GJS76)o(,)g(BGJ77)o(].)35
b(Their)21 b(studies)0 5407 y(assume)h(a)g(pre-de\014ned)g(n)n(um)n(b)r
(er)g(of)g(jobs)g(and)g(tasks)g(with)h(sp)r(eci\014c)f(resource)f
(requiremen)n(ts)g(and)h(duration.)35 b(In)22 b(con)n(trast,)1929
5656 y(7)p eop
%%Page: 8 9
8 8 bop 0 90 a Ft(the)24 b(resource)f(requiremen)n(ts)g(and)g(duration)
h(of)g(the)g(jobs)g(and)g(tasks)f(are)g(not)h(pre-de\014ned)g(for)f(a)h
(resource)e(sc)n(hedule)i(that)0 220 y(supp)r(orts)k(a)g(co)r
(ordinated)g(displa)n(y)-7 b(.)40 b(T)-7 b(o)28 b(render)g(an)g(ob)5
b(ject)28 b(memory)g(residen)n(t,)h(the)g(system)f(migh)n(t)h(either)f
(retriev)n(e)g(the)0 349 y(ob)5 b(ject)23 b(directly)f(from)g(the)h
(disk)g(con)n(taining)f(it)h(or)f(manipulate)g(the)i(placemen)n(t)e(of)
h(data)f(so)g(that)h(the)g(ob)5 b(ject)23 b(is)f(retriev)n(ed)0
479 y(from)k(another)f(disk.)36 b(The)27 b(placemen)n(t)f(of)g(data)f
(can)h(b)r(e)h(manipulated)f(with)h(either)f(replications)f(or)g
(migrations)g(of)h(disk)0 608 y(pages.)52 b(A)33 b(replication)f(or)g
(migration)g(of)g(a)h(page)f(migh)n(t)h(incur)f(sev)n(eral)f(I/Os)h(b)r
(efore)h(reac)n(hing)e(its)i(destination.)53 b(F)-7 b(or)0
738 y(instance,)27 b(consider)g(the)h(migration)e(of)i(an)f(ob)5
b(ject)27 b(from)h(disk)f Fo(d)2065 750 y Fn(1)2130 738
y Ft(to)h(disk)f Fo(d)2448 750 y Fn(3)2485 738 y Ft(.)37
b(The)28 b(system)f(migh)n(t)h(migrate)e(the)i(ob)5 b(ject)0
867 y(directly)21 b(from)h Fo(d)530 879 y Fn(1)589 867
y Ft(to)f Fo(d)727 879 y Fn(3)787 867 y Ft(\(one)g(step\),)j(or)c
(migrate)h(the)h(ob)5 b(ject)22 b(from)f Fo(d)2202 879
y Fn(1)2261 867 y Ft(to)h Fo(d)2400 879 y Fn(2)2437 867
y Ft(,)h(and)f(then)g(from)f Fo(d)3055 879 y Fn(2)3114
867 y Ft(to)h(its)g(\014nal)f(destination)0 997 y Fo(d)43
1009 y Fn(3)108 997 y Ft(\(t)n(w)n(o)28 b(steps\).)38
b(In)28 b(the)g(latter)g(case,)f(disk)h Fo(d)1462 1009
y Fn(2)1528 997 y Ft(is)f(used)h(as)g(an)f(in)n(termediate)h(disk.)38
b(F)-7 b(urthermore,)27 b(the)h(ob)5 b(ject)28 b(m)n(ust)g(b)r(e)0
1126 y(memory)f(residen)n(t)g(b)r(et)n(w)n(een)g(consecutiv)n(e)g
(reads)g(and)g(writes)g(during)g(either)h(a)f(migration)g(or)f(a)i
(replication)e(step)i(\(e.g.,)0 1256 y(b)r(et)n(w)n(een)33
b Fm(r)l(e)l(ad)h(fr)l(om)h Fo(d)753 1268 y Fn(1)823
1256 y Ft(and)e Fm(write)h(to)h Fo(d)1353 1268 y Fn(2)1390
1256 y Ft(\).)52 b(The)33 b(n)n(um)n(b)r(er)f(of)g(steps,)i(the)f(time)
g(elapsed)f(b)r(et)n(w)n(een)h(the)g(read)e(and)i(the)0
1385 y(write)f(of)g(eac)n(h)f(step,)j(and)e(whic)n(h)g(disk)g(driv)n
(es)f(are)g(used)i(at)f(eac)n(h)f(step)h(are)g(not)g(pre-de\014ned.)50
b(Whether)32 b(w)n(e)g(consider)0 1515 y(all)d(steps)h(required)e(to)h
(bring)g(a)g(page)g(in)n(to)g(memory)g(as)g(a)g(job)g(and)h(a)f(eac)n
(h)g(step)g(as)g(a)g(task)g(or)g(w)n(e)g(consider)f(eac)n(h)h(step)0
1644 y(as)i(a)f(job,)j(the)e(resource)f(requiremen)n(ts)g(and)h
(duration)g(of)g(the)h(jobs)f(and)g(tasks)f(are)g(not)i(pre-de\014ned.)
47 b(Moreo)n(v)n(er,)30 b(the)0 1774 y(sc)n(heduling)35
b(problems)g(in)g([GJ75)o(,)h(GJS76)o(])g(consider)e(an)h(o)n(v)n
(erall)f(deadline)h(as)g(opp)r(osed)g(to)g(individual)h(deadlines)f(as)
0 1903 y(in)d(the)h(case)e(of)g(our)h(resource)e(sc)n(heduling)h
(problem.)50 b(Also,)32 b(the)h(sc)n(heduling)e(problems)g(in)h([GJS76)
o(,)g(BGJ77)o(])g(are)f(not)0 2033 y(resource)26 b(constrained,)g
(while)i(our)f(sc)n(hedules)g(are)g(constrained)f(b)n(y)h(the)h(amoun)n
(t)f(of)h(memory)-7 b(.)177 2198 y(This)33 b(pap)r(er)f(studies)h
(resource)e(sc)n(hedules)h(that)h(ensure)f(a)g(co)r(ordinated)g(displa)
n(y)g(of)g(a)h(presen)n(tation)e(while)i(min-)0 2328
y(imizing)f(the)h(latency)-7 b(.)50 b(One)32 b(resource)e(managed)h(b)n
(y)h(this)g(sc)n(heduler)g(is)g(memory)-7 b(.)49 b(Sev)n(eral)31
b(cac)n(hing)g(studies)h(attempt)0 2457 y(to)c(minimize)g(the)g(n)n(um)
n(b)r(er)f(of)h(misses)f(scored)g(b)n(y)g(references)g(to)g(pages)g
(that)h(are)f(not)g(residen)n(t)g(in)h(a)g(\014xed-sized)f(cac)n(he.)0
2587 y(Optimal)k(strategies)f(ha)n(v)n(e)h(b)r(een)h(presen)n(ted)f
(for)f(the)i(case)f(where)g(the)h(en)n(tire)f(sc)n(hedule)g(of)g(page)g
(references)f(is)i(kno)n(wn)0 2716 y([CR93)o(];)27 b(and)e(comp)r
(etitiv)n(e)g(online)h(algorithms)e(ha)n(v)n(e)g(b)r(een)i(studied)g
(for)f(online)g(v)-5 b(arian)n(ts)24 b(of)i(this)f(problem)g(in)h(whic)
n(h)f(an)0 2846 y(unkno)n(wn)30 b(sequence)g(of)h(references)f(is)g
(generated)g(b)n(y)g(an)g(adv)n(ersary)e([ST85])i(or)g(b)n(y)h(a)f
(Mark)n(o)n(v)e(pro)r(cess.)45 b(In)31 b(addition,)0
2975 y(these)e(results)g(ha)n(v)n(e)f(b)r(een)h(generalized)f(and)h
(elab)r(orated)f(to)h(deal)g(with)h(data)f(placemen)n(t)f(in)i
(distributed)g(systems)e(and)0 3105 y(\014le)e(migration)e([MS91)o(].)
37 b(Ho)n(w)n(ev)n(er,)24 b(these)h(studies)h(ha)n(v)n(e)e(not)h
(considered)g(temp)r(oral)g(constrain)n(ts)f(suc)n(h)h(as)g(the)h(one)f
(that)0 3234 y(supp)r(orts)h(a)h(co)r(ordinated)f(displa)n(y)-7
b(.)35 b(The)27 b(resource)e(sc)n(hedulers)h(describ)r(ed)h(in)g(this)g
(study)g(do)f(not)h(aim)g(to)f(minimize)i(the)0 3364
y(n)n(um)n(b)r(er)34 b(of)g(page)f(faults.)57 b(Instead,)35
b(they)f(striv)n(e)g(to)g(assure)e(a)i(co)r(ordinated)f(displa)n(y)g
(while)h(minimizing)h(the)f(latency)0 3493 y(observ)n(ed)26
b(b)n(y)h(the)h(user.)177 3659 y(F)-7 b(or)39 b(a)g(single-disk)g(arc)n
(hitecture,)i(there)e(is)h(an)f(optimal)g(resource)f(sc)n(hedule)h
(that)h(supp)r(orts)f(the)h(co)r(ordinated)0 3788 y(displa)n(y)25
b(of)g(a)g(presen)n(tation)f([EMGI96)o(].)36 b(This)25
b(optimal)h(sc)n(hedule)f(minimizes)g(b)r(oth)h(the)g(memory)e
(requiremen)n(t)h(at)g(eac)n(h)0 3918 y(instan)n(t)j(and)f(the)h
(latency)f(and)h(can)f(b)r(e)h(computed)g(in)g(time)g
Fo(O)r Ft(\()p Fo(n)14 b Ft(lg)h Fo(n)p Ft(\).)177 4083
y(The)34 b(complexit)n(y)f(of)h(transferring)d(data)j(from)f(one)g
(site)h(to)f(another)g(has)g(b)r(een)h(studied)g(b)r(efore)g(in)f(the)h
(con)n(text)0 4212 y(of)j(net)n(w)n(orks.)63 b(Sev)n(eral)36
b(researc)n(hers)e([Whi90,)j(R)-9 b(VVN92,)37 b(JGJL85)n(])g(ha)n(v)n
(e)f(studied)i(the)f(problem)f(of)h(sc)n(heduling)g(\014le)0
4342 y(transfers)f(b)r(et)n(w)n(een)i(no)r(des)f(in)h(a)f(net)n(w)n
(ork)f(that)i(minimizes)g(o)n(v)n(erall)d(\014nishing)j(time.)67
b(W)-7 b(e)38 b(studied)g(the)g(problem)f(of)0 4471 y(sc)n(heduling)31
b(transfers)f(\(migrations/replications\))f(b)r(et)n(w)n(een)j(disks.)
48 b(In)31 b([JGJL85)o(],)h(forw)n(arding)e(is)h(not)h(allo)n(w)n(ed;)g
(eac)n(h)0 4601 y(\014le)25 b(is)g(transferred)f(directly)h(from)g(the)
g(source)f(no)r(de)h(to)g(the)h(target)e(no)r(de.)36
b(On)25 b(the)h(other)e(hand,)i(w)n(e)f(allo)n(w)f(a)g(migration)0
4730 y(sc)n(hedule)35 b(to)g(utilize)g(in)n(termediate)g(disks.)59
b(In)35 b([Whi90)o(,)h(R)-9 b(VVN92)o(],)37 b(a)e(transfer)f(migh)n(t)h
(utilize)h(in)n(termediate)e(no)r(des.)0 4860 y(Ho)n(w)n(ev)n(er,)f
(these)g(studies)h(assume)e(that)i(ev)n(ery)e(\014le)h(tak)n(es)g
(constan)n(t)f(time)i(to)f(mo)n(v)n(e)f(directly)h(\(without)h(in)n
(termediate)0 4989 y(no)r(des\))i(from)g(one)g(no)r(de)g(to)g(another;)
k(while,)e(in)f(our)e(case,)j(the)e(time)h(to)f(transfer)g(a)f(page)h
(directly)g(from)f(one)h(disk)0 5119 y(to)31 b(another)f(ma)n(y)g(v)-5
b(ary)e(.)45 b(The)31 b(time)g(elapsed)g(b)r(et)n(w)n(een)f(t)n(w)n(o)g
(consecutiv)n(e)g(read)g(and)h(write)f(op)r(erations)g(in)h(a)f
(migration)0 5249 y(sc)n(hedule)18 b(is)g(not)h(constan)n(t.)33
b(Moreo)n(v)n(er,)17 b(unlik)n(e)i(the)f(studies)h(in)f([Whi90,)h(R)-9
b(VVN92)o(,)19 b(JGJL85)n(],)i(the)d(migration)g(sc)n(heduling)0
5378 y(problem)27 b(is)h(constrained)e(b)n(y)h(a)h(cen)n(tral)e
(resource:)35 b(memory)-7 b(.)1929 5656 y(8)p eop
%%Page: 9 10
9 9 bop 159 1019 a @beginspecial 0 @llx 0 @lly 429.769989
@urx 121.459999 @ury 4297 @rwi @setspecial
%%BeginDocument: sat2mig.ps
%
% Frame ps_prolog 5.0, for use with Frame 5.0 products
% This ps_prolog file is Copyright (c) 1986-1995 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameMaker/SGML and FrameViewer as long as this 
% copyright notice is preserved.
%
% FrameMaker users specify the proper paper size for each print job in the
% "Print" dialog's "Printer Paper Size" "Width" and "Height~ fields.  If the
% printer that the PS file is sent to does not support the requested paper
% size, or if there is no paper tray of the proper size currently installed, 
% then the job will not be printed.  The following flag, if set to true, will
% cause the job to print on the default paper in such cases.
/FMAllowPaperSizeMismatch            true def
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to true, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% The following is a set of predefined optimal frequencies and angles for various
% common dpi settings. This is taken from "Advances in Color Separation Using
% PostScript Software Technology," from Adobe Systems (3/13/89 P.N. LPS 0043)
% and corrolated with information which is in various PPD (4.0) files.
%
% The "dpiranges" figure is the minimum dots per inch device resolution which
% can support this setting. The "low" and "high" values are controlled by the
% setting of the FMUseHighFrequencyScreens flag above. The "TDot" flags control
% the use of the "Yellow Triple Dot" feature whereby the frequency id divided by
% three, but the dot function is "trippled" giving a block of 3x3 dots per cell.
%
% PatFreq is a compromise pattern frequency for ps Level 2 printers which is close
% to the ideal WYSIWYG pattern frequency of 9 repetitions/inch but does not beat
% (too badly) against the screen frequencies of any separations for that DPI.
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (5.0) def 
/fMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	fMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto show
	72 220 moveto show
	FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!  Check installation;)
		(also check ~/fminit and ./fminit for old versions) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(Adobe's PostScript Language Reference Manual, 2nd Edition, section H.2.4)
	(says your EPS file is not valid, as it calls X              )
	dup dup (X) search pop exch pop exch pop length 
	5 -1 roll 
	putinterval 
	FMFAILURE
	} def
/fmConcatProcs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin [
	/ALDsave
	/FMdicttop
	/FMoptop
	/FMpointsize
	/FMsaveobject
	/b
	/bitmapsave
	/blut
	/bpside
	/bs
	/bstring
	/bwidth
	/c
	/cf
	/cs
	/cynu
	/depth
	/edown
	/fh
	/fillvals
	/fw
	/fx
	/fy
	/g
	/gfile
	/gindex
	/grnt
	/gryt
	/gstring
	/height
	/hh
	/i
	/im
	/indx
	/is
	/k
	/kk
	/landscape
	/lb
	/len
	/llx
	/lly
	/m
	/magu
	/manualfeed
	/n
	/offbits
	/onbits
	/organgle
	/orgbangle
	/orgbfreq
	/orgbproc
	/orgbxfer
	/orgfreq
	/orggangle
	/orggfreq
	/orggproc
	/orggxfer
	/orgmatrix
	/orgproc
	/orgrangle
	/orgrfreq
	/orgrproc
	/orgrxfer
	/orgxfer
	/pagesave
	/paperheight
	/papersizedict
	/paperwidth
	/pos
	/pwid
	/r
	/rad
	/redt
	/sl
	/str
	/tran
	/u
	/urx
	/ury
	/val
	/width
	/width
	/ws
	/ww
	/x
	/x1
	/x2
	/xindex
	/xpoint
	/xscale
	/xx
	/y
	/y1
	/y2
	/yelu
	/yindex
	/ypoint
	/yscale
	/yy
] { 0 def } forall
/FmBD {bind def} bind def
systemdict /pdfmark known {
	/fMAcrobat true def
	
	/FmPD /pdfmark load def
	
	
	/FmPT /show load def
	
	
	currentdistillerparams /CoreDistVersion get 2000 ge {
	
		
		/FmPD2 /pdfmark load def
		
		
		
		
		
		/FmPA { mark exch /Dest exch 5 3 roll 
				/View [ /XYZ null 6 -2 roll FmDC exch pop null] /DEST FmPD 
		}FmBD
	} {
		
		/FmPD2 /cleartomark load def
		/FmPA {pop pop pop}FmBD
	} ifelse
} {
	
	/fMAcrobat false def
	/FmPD /cleartomark load def
	/FmPD2 /cleartomark load def
	/FmPT /pop load def
	/FmPA {pop pop pop}FmBD
} ifelse
/FmDC {
	transform fMDefaultMatrix itransform cvi exch cvi exch
}FmBD
/FmBx {
	dup 3 index lt {3 1 roll exch} if 
	1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/fMNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		RealSetrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
fMLevel1 { 
	
	
	
	/patScreenDict 7 dict dup begin
		<0f1e3c78f0e1c387> [ 45  { pop } {exch pop} 		.5   2 sqrt] FmBD
		<0f87c3e1f0783c1e> [ 135 { pop } {exch pop}			.5   2 sqrt] FmBD
		<cccccccccccccccc> [ 0   { pop } dup				.5   2	   ] FmBD
		<ffff0000ffff0000> [ 90  { pop } dup				.5   2	   ] FmBD
		<8142241818244281> [ 45  { 2 copy lt {exch} if pop}	dup .75  2 sqrt] FmBD
		<03060c183060c081> [ 45  { pop } {exch pop}			.875 2 sqrt] FmBD
		<8040201008040201> [ 135 { pop } {exch pop}			.875 2 sqrt] FmBD
	end def
} { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} ifelse
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				fMAcrobat not FMPColor graymode and and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not fMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/fMDefaultMatrix matrix defaultmatrix def
/fMatrix2 matrix def
/dpi    72 0 fMDefaultMatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 fMDefaultMatrix dtransform exch atan def
	sangle fMatrix2 rotate 
	fMDefaultMatrix fMatrix2 concatmatrix 
	dup 0 get /sflipx exch def
	    3 get /sflipy exch def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	fMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /fMNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	fMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{papersizefailure} if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{2 dict
		 dup /PageSize [paperwidth paperheight] put
		 manualfeed {dup /ManualFeed manualfeed put} if
		 {setpagedevice} stopped {papersizefailure} if
		}
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			fMNegative {
				1 1 4 { 
					pop { 1 exch sub } fmConcatProcs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		fMNegative {
			{ 1 exch sub } fmConcatProcs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/papersizefailure {
	FMAllowPaperSizeMismatch not
		{
(The requested paper size is not available in any currently-installed tray)
(Edit the PS file to "FMAllowPaperSizeMismatch true" to use default tray)
		 FMFAILURE } if
	} def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYK } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYKGRAY } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
fMLevel1 {
	/fmGetFlip {
		fMatrix2 exch get mul 0 lt { -1 } { 1 } ifelse
	} FmBD
} if
/setPatternMode {
	fMLevel1 {
		2 index patScreenDict exch known {
			pop pop
			patScreenDict exch get aload pop 
			freq 								
			mul									
			5 2 roll							
			fMatrix2 currentmatrix 1 get 0 ne {
				3 -1 roll 90 add 3 1 roll 		
				sflipx 1 fmGetFlip sflipy 2 fmGetFlip neg mul
			} {  								
				sflipx 0 fmGetFlip sflipy 3 fmGetFlip mul 
			} ifelse
			0 lt {exch pop} {pop} ifelse 		
			fMNegative { 
				{neg} fmConcatProcs 			
			} if
			bind
			
			
			
			systemdict /setscreen get exec		
			/FrameCurGray exch def
		} {
			/bwidth  exch def
			/bpside  exch def
			/bstring exch def
			/onbits 0 def  /offbits 0 def
			freq sangle landscape {90 add} if 
				{/ypoint exch def
				 /xpoint exch def
				 /xindex xpoint 1 add 2 div bpside mul cvi def
				 /yindex ypoint 1 add 2 div bpside mul cvi def
				 bstring yindex bwidth mul xindex 8 idiv add get
				 1 7 xindex 8 mod sub bitshift and 0 ne fMNegative {not} if
				 {/onbits  onbits  1 add def 1}
				 {/offbits offbits 1 add def 0}
				 ifelse
				}
				setscreen
			offbits offbits onbits add div fMNegative {1.0 exch sub} if
			/FrameCurGray exch def
		} ifelse
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		fMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode fMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode fMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/rip4 { 
	   
	  
	  kis cis copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  cis mis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  mis yis copy pop 
	  dup dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  yis kis copy pop 
	  3 mul is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
/wbytes { 
      dup dup
      8 gt { pop 8 idiv mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	cvtProc                
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def 
	cvtProc              
	/is width depth wbytes string def
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
fMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/kk cynu magu min yelu min def
		/u kk currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 kk currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch fmConcatProcs settransfer
} bind def
/BITMAPCOLOR { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def
	fMLevel1 {	
		colorsetup
		/is width depth wbytes string def
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is width depth wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	fMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {ip} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/depth 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip pop ris} {gis} {bis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCMYKc { 
	/depth 32 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip4 pop cis} {mis} {yis} {kis} true 4 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYK { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /mis width string def
        /yis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf mis readhexstring pop } 
        { cf yis readhexstring pop } 
        { cf kis readhexstring pop } 
        true 4 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/depth 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop ris gis bis width gray} image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAYc { 
	/depth 32 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop cis mis yis kis width cgray} image
        bitmapsave restore 
        grestore
        } bind def
/cgray { 
        /ww exch def
        /k exch def
        /y exch def
        /m exch def
        /c exch def
        0 1 ww 1 sub { /i exch def c i get m i get y i get k i get CMYKtoRGB
				.144 mul 3 1 roll .587 mul 3 1 roll .299 mul add add
				c i 3 -1 roll floor cvi put } for
        c
 		} bind def
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop width gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /yis width string def
        /mis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf mis readhexstring pop 
          cf yis readhexstring pop 
          cf kis readhexstring pop width cgray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
(5.0) FMVERSION
1 1 0 0 429.77 121.46 0 1 13 FMDOCUMENT
0 0 /Times-Roman FMFONTDEFINE
1 0 /Times-Bold FMFONTDEFINE
2 0 /Times-Italic FMFONTDEFINE
3 1 /Symbol FMFONTDEFINE
4 0 /Times-BoldItalic FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
429.77 121.46 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 0 0 0 1 1 1]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
191.47 88.45 374.77 121.45 R
5 X
0 0 0 1 0 0 0 K
V
0.5 H
2 Z
7 X
N
1.68 88.45 184.97 121.45 R
5 X
V
7 X
N
418.63 65.01 418.63 67.58 423.08 65.01 418.63 62.45 4 Y
0 Z
0 X
N
418.63 65.01 418.63 67.58 423.08 65.01 418.63 62.45 4 Y
V
2.4 65.01 418.38 65.01 2 L
2 Z
N
18 70.35 18 59.01 2 L
N
49.2 70.85 49.2 59.51 2 L
N
64.8 70.85 64.8 59.51 2 L
3 H
N
80.4 70.35 80.4 59.01 2 L
0.5 H
N
96 70.35 96 59.01 2 L
3 H
N
143.23 69.85 143.23 58.51 2 L
0.5 H
N
158.83 69.85 158.83 58.51 2 L
3 H
N
174.43 70.35 174.43 59.01 2 L
0.5 H
N
190.03 70.35 190.03 59.01 2 L
3 H
N
25.58 87.06 25.58 82.36 2 L
0.5 H
0 Z
N
28.15 86.81 25.58 82.36 23.01 86.81 3 L
N
8.25 48.26 8.25 96.26 25.58 96.26 25.58 87.06 4 L
2 Z
N
57.43 79.8 57.43 75.1 2 L
0 Z
N
60 79.55 57.43 75.1 54.86 79.55 3 L
N
41.83 72.51 41.83 95.51 57.43 95.51 57.43 79.8 4 L
2 Z
N
88.63 79.87 88.63 75.17 2 L
0 Z
N
91.2 79.62 88.63 75.17 86.06 79.62 3 L
N
73.03 72.51 73.03 96.26 88.63 96.26 88.63 79.87 4 L
2 Z
N
151.9 78.16 151.9 73.46 2 L
0 Z
N
154.46 77.91 151.9 73.46 149.33 77.91 3 L
N
136.3 70.51 136.3 97.45 151.9 97.45 151.9 78.16 4 L
2 Z
N
104.66 59.01 120.7 70.51 R
7 X
V
0 10 Q
0 X
(.....) 106.83 65.26 T
205.2 70.35 205.2 59.01 2 L
N
220.79 70.35 220.79 59.01 2 L
3 H
N
236.39 70.85 236.39 59.51 2 L
0.5 H
N
251.99 70.85 251.99 59.51 2 L
3 H
N
267.59 70.35 267.59 59.01 2 L
0.5 H
N
283.19 70.35 283.19 59.01 2 L
3 H
N
314.83 70.35 314.83 59.01 2 L
N
330.43 69.85 330.43 58.51 2 L
0.5 H
N
346.03 69.85 346.03 58.51 2 L
3 H
N
361.63 70.35 361.63 59.01 2 L
0.5 H
N
377.23 70.35 377.23 59.01 2 L
3 H
N
369.43 51.71 369.43 47.01 2 L
0.5 H
0 Z
N
371.99 51.46 369.43 47.01 366.86 51.46 3 L
N
353.83 80.58 353.83 96.95 369.43 96.95 369.43 51.71 4 L
2 Z
N
291.86 59.01 307.89 70.51 R
7 X
V
0 X
(.....) 294.03 65.26 T
1 F
(v) 13.88 100.76 T
1 8 Q
(i) 18.88 98.26 T
1 10 Q
(v) 45.73 100.51 T
1 8 Q
(i) 50.73 98.01 T
1 10 Q
(v) 78.66 101.01 T
1 8 Q
(i) 83.66 98.51 T
1 10 Q
(v) 139.76 101.51 T
1 8 Q
(i) 144.76 99.01 T
1 10 Q
(q+2\050n+1\051) 169.59 37.93 T
(q+4\050n+1\051) 358.32 37.68 T
2.4 70.35 2.4 59.01 2 L
3 H
N
33.6 70.35 33.6 59.01 2 L
N
127.19 70.35 127.19 59.01 2 L
N
21.17 35.7 21.17 31.01 2 L
0.5 H
0 Z
N
23.74 35.45 21.17 31.01 18.61 35.45 3 L
N
12.29 29.7 12.29 75.95 21.17 75.95 21.17 35.7 4 L
2 Z
N
(C) 12.58 79.76 T
1 8 Q
(1) 19.8 77.26 T
1 10 Q
(C) 44.65 80.01 T
1 8 Q
(2) 51.87 77.51 T
53.89 35.7 53.89 31.01 2 L
0 Z
N
56.46 35.45 53.89 31.01 51.33 35.45 3 L
N
45.01 29.7 45.01 75.95 53.89 75.95 53.89 35.7 4 L
2 Z
N
85.31 35.72 85.31 31.02 2 L
0 Z
N
87.88 35.47 85.31 31.02 82.74 35.47 3 L
N
76.43 29.7 76.43 76.95 85.31 76.95 85.31 35.72 4 L
2 Z
N
1 10 Q
(C) 77.07 80.69 T
1 8 Q
(3) 84.29 78.19 T
1 10 Q
(C) 140.34 79.69 T
1 8 Q
(n) 147.56 77.19 T
148.14 35.71 148.14 31.01 2 L
0 Z
N
150.71 35.46 148.14 31.01 145.57 35.46 3 L
N
139.26 29.7 139.26 76.2 148.14 76.2 148.14 35.71 4 L
2 Z
N
213.79 87.14 213.79 82.44 2 L
0 Z
N
216.36 86.89 213.79 82.44 211.22 86.89 3 L
N
196.46 46.94 196.46 96.94 213.79 96.94 213.79 87.14 4 L
2 Z
N
245.64 78.66 245.64 73.97 2 L
0 Z
N
248.21 78.41 245.64 73.97 243.07 78.41 3 L
N
230.04 71.19 230.04 96.19 245.64 96.19 245.64 78.66 4 L
2 Z
N
276.84 78.68 276.84 73.99 2 L
0 Z
N
279.4 78.43 276.84 73.99 274.27 78.43 3 L
N
261.24 71.19 261.24 96.44 276.84 96.44 276.84 78.68 4 L
2 Z
N
340.1 76.93 340.1 72.23 2 L
0 Z
N
342.67 76.68 340.1 72.23 337.54 76.68 3 L
N
324.5 69.19 324.5 97.13 340.1 97.13 340.1 76.93 4 L
2 Z
N
1 10 Q
(v) 202.09 100.94 T
1 8 Q
(i) 207.09 98.44 T
1 10 Q
(v) 233.94 100.69 T
1 8 Q
(i) 238.94 98.19 T
1 10 Q
(v) 266.87 101.19 T
1 8 Q
(i) 271.87 98.69 T
1 10 Q
(v) 327.97 101.69 T
1 8 Q
(i) 332.97 99.19 T
209.38 35.36 209.38 30.67 2 L
0 Z
N
211.95 35.11 209.38 30.67 206.82 35.11 3 L
N
200.5 29.38 200.5 74.63 209.38 74.63 209.38 35.36 4 L
2 Z
N
1 10 Q
(C) 200.79 78.44 T
1 8 Q
(1) 208.01 75.94 T
1 10 Q
(C) 232.85 78.69 T
1 8 Q
(2) 240.07 76.19 T
242.1 34.94 242.1 30.25 2 L
0 Z
N
244.67 34.69 242.1 30.25 239.53 34.69 3 L
N
233.22 28.95 233.22 74.63 242.1 74.63 242.1 34.94 4 L
2 Z
N
273.52 34.96 273.52 30.26 2 L
0 Z
N
276.08 34.71 273.52 30.26 270.95 34.71 3 L
N
264.63 28.95 264.63 75.63 273.52 75.63 273.52 34.96 4 L
2 Z
N
1 10 Q
(C) 265.28 79.37 T
1 8 Q
(3) 272.5 76.87 T
1 10 Q
(C) 328.55 78.37 T
1 8 Q
(n) 335.77 75.87 T
336.35 34.95 336.35 30.25 2 L
0 Z
N
338.92 34.7 336.35 30.25 333.78 34.7 3 L
N
327.46 28.95 327.46 74.88 336.35 74.88 336.35 34.95 4 L
2 Z
N
181.94 52.15 181.94 47.45 2 L
0 Z
N
184.51 51.9 181.94 47.45 179.37 51.9 3 L
N
166.34 80.38 166.34 96.45 181.94 96.45 181.94 52.15 4 L
2 Z
N
1 10 Q
(v) 359.6 101.19 T
1 8 Q
(i) 364.6 98.69 T
1 10 Q
(v) 171.54 100.19 T
1 8 Q
(i) 176.54 97.69 T
2 10 Q
(v) 8.28 19.95 T
2 7 Q
(i) 13.1 17.25 T
2 10 Q
(C) 23.17 19.95 T
0 0 0 1 0 0 0 K
0 7 Q
(1) 30.44 17.25 T
0 0 0 1 0 0 0 K
3 10 Q
(\316) 15.54 19.95 T
0 F
(if) 0.01 19.26 T
2 F
(v) 71.04 18.95 T
2 7 Q
(i) 75.86 16.25 T
2 10 Q
(C) 85.94 18.95 T
0 0 0 1 0 0 0 K
0 9 Q
(3) 93.21 14.75 T
0 0 0 1 0 0 0 K
3 10 Q
(\316) 78.31 18.95 T
0 F
(if) 63.28 18.26 T
2 F
(v) 39.84 7.45 T
2 7 Q
(i) 44.66 4.75 T
2 10 Q
(C) 54.74 7.45 T
0 0 0 1 0 0 0 K
0 9 Q
(2) 62.01 3.25 T
0 0 0 1 0 0 0 K
3 10 Q
(\316) 47.11 7.45 T
0 F
(if) 32.08 6.76 T
2 F
(v) 135.99 21.2 T
2 7 Q
(i) 140.81 18.5 T
2 10 Q
(C) 152.88 21.2 T
2 9 Q
(n) 160.15 17 T
3 10 Q
(\316) 145.26 21.2 T
0 F
(if) 127.73 20.51 T
2 F
(v) 195.97 19.95 T
2 7 Q
(i) 200.79 17.25 T
3 F
(\330) 190.98 19.95 T
2 10 Q
(C) 212.86 19.95 T
0 0 0 1 0 0 0 K
0 7 Q
(1) 220.13 17.25 T
0 0 0 1 0 0 0 K
3 10 Q
(\316) 205.23 19.95 T
0 F
(if) 182.46 19.26 T
2 F
(v) 228.55 7.7 T
2 7 Q
(i) 233.37 5 T
3 F
(\330) 223.56 7.7 T
2 10 Q
(C) 245.45 7.7 T
0 0 0 1 0 0 0 K
0 9 Q
(2) 252.72 3.5 T
0 0 0 1 0 0 0 K
3 10 Q
(\316) 237.82 7.7 T
0 F
(if) 215.54 7.01 T
2 F
(v) 259.75 19.9 T
2 7 Q
(i) 264.57 17.2 T
3 F
(\330) 254.76 19.9 T
2 10 Q
(C) 276.64 19.9 T
0 0 0 1 0 0 0 K
0 9 Q
(3) 283.92 15.7 T
0 0 0 1 0 0 0 K
3 10 Q
(\316) 269.02 19.9 T
0 F
(if) 246.24 19.21 T
2 F
(v) 321.72 20.4 T
2 7 Q
(i) 326.54 17.7 T
3 F
(\330) 316.73 20.4 T
2 10 Q
(C) 338.61 20.4 T
2 9 Q
(n) 345.88 16.2 T
3 10 Q
(\316) 330.98 20.4 T
0 F
(if) 309.71 19.71 T
4 F
(v) 264.29 112.45 T
4 7 Q
(i) 269.11 109.75 T
4 10 Q
(v) 80.12 112.45 T
4 7 Q
(i) 84.94 109.75 T
0 0 0 1 0 0 0 K
0 12 Q
(is false) 90.51 110.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(is true) 274.24 110.45 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(Time intervals) 371.7 49.45 T
0 0 0 1 0 0 0 K
1 F
(q) -0.62 37.47 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndDocument
 @endspecial 0 1315 a Ft(Figure)30 b(6:)43 b(Alternativ)n(e)31
b(sc)n(hedules)f(for)h(the)g(migration)f(asso)r(ciated)f(with)j
Fo(v)2469 1327 y Fk(i)2528 1315 y Ft(and)f(sc)n(hedules)f(asso)r
(ciated)g(with)h(clauses)0 1444 y Fo(C)59 1456 y Fn(1)97
1444 y Fo(;)14 b(:)g(:)g(:)f(;)h(C)340 1456 y Fk(n)413
1444 y Ft(that)28 b(con\015ict)g(with)g(those)f(for)g
Fo(v)1457 1456 y Fk(i)1485 1444 y Ft(.)0 1710 y Fp(4)180
b(Data)46 b(Placemen)l(t)g(Manipulation)0 1957 y Ft(T)-7
b(o)28 b(sho)n(w)g(that)h(deciding)g(whether)f(there)h(is)g(a)f(sc)n
(hedule)g(of)h(migrations)e(for)h(a)h(set)f Fo(M)38 b
Ft(of)29 b(requests)e(based)i(on)f(a)g(system)0 2087
y(load)h Fo(A)i Ft(de\014ned)f(o)n(v)n(er)e(a)h(p)r(erio)r(d)h([0)p
Fo(;)14 b(N)9 b Ft(])30 b(is)g(NP-Complete,)g(w)n(e)f(reduce)h(SA)-7
b(T)30 b(to)g(this)g(decision)g(problem.)43 b(An)30 b(instance)0
2216 y(of)g(SA)-7 b(T)31 b(is)f(de\014ned)g(as)g(a)g(collection)f
Fl(f)p Fo(C)1312 2228 y Fn(1)1349 2216 y Fo(;)14 b(:)g(:)g(:)g(;)g(C)
1593 2228 y Fk(n)1638 2216 y Fl(g)30 b Ft(of)g Fo(n)g
Ft(clauses)f(o)n(v)n(er)g(a)g(set)i Fl(f)p Fo(v)2634
2228 y Fn(1)2671 2216 y Fo(;)14 b(:)g(:)g(:)f(;)h(v)2895
2228 y Fk(k)2936 2216 y Fl(g)30 b Ft(of)g Fo(k)j Ft(v)-5
b(ariables.)43 b(The)31 b(SA)-7 b(T)0 2346 y(problem)36
b(is)g(deciding)g(whether)g(there)g(is)g(a)g(v)-5 b(ariable)35
b(assignmen)n(t)g(that)h(mak)n(es)f(all)h(clauses)f(true.)63
b(Without)37 b(loss)e(of)0 2475 y(generalit)n(y)23 b(assume)h(that)h
(there)f(is)h(not)g(a)f(clause)g(in)h(the)g(SA)-7 b(T)25
b(instance)f(with)h(b)r(oth)g Fo(v)2743 2487 y Fk(i)2796
2475 y Ft(and)f Fl(:)p Fo(v)3049 2487 y Fk(i)3102 2475
y Ft(as)g(its)h(disjuncts)g(\(if)h(this)0 2605 y(is)h(the)h(case,)f
(remo)n(v)n(e)f(suc)n(h)h(clauses)g(b)r(ecause)g(they)h(are)f(true)g
(for)g(an)n(y)g(truth)h(assignmen)n(t\).)177 2770 y(W)-7
b(e)19 b(\014rst)f(in)n(tro)r(duce)g(a)g(p)r(olynomial)g(algorithm)f
Fm(SA)-6 b(T2MigSc)19 b Ft(that)g(transforms)e(an)n(y)g(instance)i
Fo(C)3224 2782 y Fn(1)3261 2770 y Fo(;)14 b(:)g(:)g(:)g(;)g(C)3505
2782 y Fk(n)3550 2770 y Fo(;)19 b(v)3632 2782 y Fn(1)3669
2770 y Fo(;)14 b(:)g(:)g(:)g(;)g(v)3894 2782 y Fk(k)0
2899 y Ft(of)25 b(SA)-7 b(T)25 b(in)n(to)g(an)g(instance)f
Fo(M)t(;)14 b(A;)g(N)34 b Ft(of)25 b(the)g(migrations)f(sc)n(heduling)g
(problem,)h(i.e.,)h(is)f(there)f(a)h(sc)n(hedule)g(of)f(migrations)0
3029 y(for)f(requests)g Fo(M)32 b Ft(on)23 b(a)g(system)g(load)g
Fo(A)h Ft(de\014ned)g(o)n(v)n(er)e([0)p Fo(;)14 b(N)9
b Ft(]?)35 b(This)23 b(algorithm)f(asso)r(ciates)g(one)h(migration)g
(request)g(with)0 3158 y(eac)n(h)g(v)-5 b(ariable)24
b(and)g(eac)n(h)f(clause)h(in)g(the)h(instance)f(of)g(SA)-7
b(T,)25 b(resulting)e(in)i(a)e(set)i Fo(M)33 b Ft(of)24
b Fo(k)14 b Ft(+)e Fo(n)24 b Ft(requests.)35 b(In)24
b(addition,)h(this)0 3288 y(algorithm)31 b(computes)g(a)g(system)h
(load)f Fo(A)h Ft(suc)n(h)f(that)h(the)h(migration)d(request)h(asso)r
(ciated)g(with)h(v)-5 b(ariable)31 b Fo(v)3534 3300 y
Fk(i)3593 3288 y Ft(has)g(only)0 3417 y(t)n(w)n(o)24
b(alternativ)n(e)g(sc)n(hedules)h(on)g Fo(A)g Ft(and)g(the)h(migration)
e(request)g(asso)r(ciated)g(with)i(clause)e Fo(C)2971
3429 y Fk(j)3032 3417 y Ft(has)g(exactly)h Fo(l)h Ft(alternativ)n(e)0
3547 y(sc)n(hedules)e(on)f Fo(A)p Ft(,)j(where)d Fo(l)j
Ft(is)e(the)h(n)n(um)n(b)r(er)f(of)g(disjuncts)h(in)f
Fo(C)1977 3559 y Fk(j)2012 3547 y Ft(.)36 b(F)-7 b(urthermore,)24
b(the)h(system)f(load)f Fo(A)i Ft(is)f(de\014ned)g(o)n(v)n(er)f(the)0
3677 y(p)r(erio)r(d)29 b([0)p Fo(;)14 b(N)9 b Ft(])29
b(whic)n(h)g(is)h(divided)f(in)n(to)g Fo(k)k Ft(sub-p)r(erio)r(ds)28
b(of)i(4)19 b Fl(\001)g Ft(\()p Fo(n)h Ft(+)f(1\))30
b(time)f(in)n(terv)-5 b(als.)42 b(Eac)n(h)28 b(sub-p)r(erio)r(d)h
(corresp)r(onds)0 3806 y(to)e(the)h(time)h(when)e(the)h(replication)f
(asso)r(ciated)f(with)i(a)g(v)-5 b(ariable)26 b(can)h(b)r(e)h(sc)n
(heduled.)177 3971 y(Figure)33 b(6)h(sho)n(ws)f(the)h(sub-p)r(erio)r(d)
g(asso)r(ciated)e(with)j(v)-5 b(ariable)33 b Fo(v)2288
3983 y Fk(i)2316 3971 y Ft(.)56 b(Thic)n(k)33 b(lines)h(represen)n(t)f
(time)h(instan)n(ts)g(when)0 4101 y(the)c(memory)g(capacit)n(y)f(is)h
(exhausted)f(\(0)h(memory)g(frames)f(a)n(v)-5 b(ailable)29
b(at)h(that)g(instan)n(t\).)45 b(While)30 b(thin)h(lines)f(represen)n
(t)0 4230 y(time)k(instan)n(ts)g(when)f(the)i(memory)d(has)i(1)f
(memory)g(frame)g(a)n(v)-5 b(ailable)33 b(at)g(that)h(instan)n(t.)55
b(The)34 b(migration)f(for)g Fo(v)3714 4242 y Fk(i)3775
4230 y Ft(can)0 4360 y(b)r(e)h(sc)n(heduled)f(either)g(during)g(the)h
(\014rst)f(2)22 b Fl(\001)g Ft(\()p Fo(n)h Ft(+)f(1\))33
b(time)h(in)n(terv)-5 b(als)32 b(or)h(during)g(the)h(last)f(2)22
b Fl(\001)g Ft(\()p Fo(n)g Ft(+)g(1\))34 b(in)n(terv)-5
b(als.)53 b(The)0 4489 y(\014rst)27 b(alternativ)n(e)f(corresp)r(onds)f
(to)i(assigning)f Fm(false)j Ft(to)e Fo(v)1828 4501 y
Fk(i)1883 4489 y Ft(in)g(SA)-7 b(T)28 b(and)f(the)h(second)e(to)h
(assigning)f Fm(true)h Ft(to)g Fo(v)3510 4501 y Fk(i)3538
4489 y Ft(.)37 b(If)27 b Fo(v)3720 4501 y Fk(i)3775 4489
y Ft(is)g(a)0 4619 y(disjunct)c(in)g Fo(C)462 4631 y
Fk(j)497 4619 y Ft(,)g(then)g(one)f(p)r(ossible)g(sc)n(hedule)g(for)g
Fo(C)1687 4631 y Fk(j)1744 4619 y Ft(w)n(ould)g(b)r(e)h(during)e(t)n(w)
n(o)h(consecutiv)n(e)f(time)i(in)n(terv)-5 b(als)21 b(\()p
Fo(q)11 b Ft(+)d(2)g Fl(\001)g Ft(\()p Fo(j)13 b Fl(\000)8
b Ft(1\))0 4748 y(and)23 b Fo(q)12 b Ft(+)d(2)g Fl(\001)g
Ft(\()p Fo(j)14 b Fl(\000)9 b Ft(1\))g(+)g(1\))20 b(in)j(the)g(\014rst)
g(half)g(of)f(the)i(sub-p)r(erio)r(d.)35 b(This)22 b(sc)n(hedule)h(for)
f Fo(C)2685 4760 y Fk(j)2743 4748 y Ft(con\015icts)h(with)g(the)g(sc)n
(hedule)g(for)f Fo(v)3872 4760 y Fk(i)0 4878 y Ft(during)j(the)g
(\014rst)g(half)g(b)r(ecause)f(there)h(is)g(only)f(one)h(memory)f
(frame)h(a)n(v)-5 b(ailable)23 b(at)i(the)h(time)f(instan)n(t)g(\()p
Fo(q)17 b Ft(+)c(2)g Fl(\001)g Ft(\()p Fo(j)18 b Fl(\000)13
b Ft(1\))g(+)g(1\))0 5007 y(b)r(et)n(w)n(een)38 b(the)g(t)n(w)n(o)f
(consecutiv)n(e)f(time)i(in)n(terv)-5 b(als)37 b(of)h(the)g(sc)n
(hedule)f(for)g Fo(C)2435 5019 y Fk(j)2508 5007 y Ft(and)h(t)n(w)n(o)f
(memory)f(frames)h(are)g(required)0 5137 y(\(one)29 b(for)g
Fo(v)355 5149 y Fk(i)413 5137 y Ft(and)g(the)h(other)f(for)g
Fo(C)1128 5149 y Fk(j)1163 5137 y Ft(\).)43 b(This)30
b(con\015ict)f(corresp)r(onds)f(to)h(assigning)f(false)h(to)h
Fo(v)2997 5149 y Fk(i)3025 5137 y Ft(,)g(whic)n(h)f(w)n(ould)g(not)h
(mak)n(e)0 5266 y Fo(C)59 5278 y Fk(j)126 5266 y Ft(true.)49
b(Symmetrically)-7 b(,)32 b(if)g Fl(:)p Fo(v)1091 5278
y Fk(i)1151 5266 y Ft(is)g(a)f(disjunct)h(in)g Fo(C)1792
5278 y Fk(j)1828 5266 y Ft(,)g(then)h(one)e(p)r(ossible)g(sc)n(hedule)g
(for)g Fo(C)3073 5278 y Fk(j)3140 5266 y Ft(w)n(ould)h(b)r(e)g(during)f
(t)n(w)n(o)0 5396 y(consecutiv)n(e)26 b(time)h(in)n(terv)-5
b(als)27 b(in)g(the)g(second)f(half;)i(whic)n(h)f(con\015icts)f(with)i
(the)f(sc)n(hedule)g(for)f Fo(v)3037 5408 y Fk(i)3092
5396 y Ft(during)g(the)i(second)e(half)1929 5656 y(9)p
eop
%%Page: 10 11
10 10 bop 150 1181 a @beginspecial 0 @llx 0 @lly 432
@urx 140.830002 @ury 4320 @rwi @setspecial
%%BeginDocument: sat2migex.ps
%
% Frame ps_prolog 5.0, for use with Frame 5.0 products
% This ps_prolog file is Copyright (c) 1986-1995 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameMaker/SGML and FrameViewer as long as this 
% copyright notice is preserved.
%
% FrameMaker users specify the proper paper size for each print job in the
% "Print" dialog's "Printer Paper Size" "Width" and "Height~ fields.  If the
% printer that the PS file is sent to does not support the requested paper
% size, or if there is no paper tray of the proper size currently installed, 
% then the job will not be printed.  The following flag, if set to true, will
% cause the job to print on the default paper in such cases.
/FMAllowPaperSizeMismatch            true def
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to true, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% The following is a set of predefined optimal frequencies and angles for various
% common dpi settings. This is taken from "Advances in Color Separation Using
% PostScript Software Technology," from Adobe Systems (3/13/89 P.N. LPS 0043)
% and corrolated with information which is in various PPD (4.0) files.
%
% The "dpiranges" figure is the minimum dots per inch device resolution which
% can support this setting. The "low" and "high" values are controlled by the
% setting of the FMUseHighFrequencyScreens flag above. The "TDot" flags control
% the use of the "Yellow Triple Dot" feature whereby the frequency id divided by
% three, but the dot function is "trippled" giving a block of 3x3 dots per cell.
%
% PatFreq is a compromise pattern frequency for ps Level 2 printers which is close
% to the ideal WYSIWYG pattern frequency of 9 repetitions/inch but does not beat
% (too badly) against the screen frequencies of any separations for that DPI.
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (5.0) def 
/fMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	fMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto show
	72 220 moveto show
	FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!  Check installation;)
		(also check ~/fminit and ./fminit for old versions) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(Adobe's PostScript Language Reference Manual, 2nd Edition, section H.2.4)
	(says your EPS file is not valid, as it calls X              )
	dup dup (X) search pop exch pop exch pop length 
	5 -1 roll 
	putinterval 
	FMFAILURE
	} def
/fmConcatProcs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin [
	/ALDsave
	/FMdicttop
	/FMoptop
	/FMpointsize
	/FMsaveobject
	/b
	/bitmapsave
	/blut
	/bpside
	/bs
	/bstring
	/bwidth
	/c
	/cf
	/cs
	/cynu
	/depth
	/edown
	/fh
	/fillvals
	/fw
	/fx
	/fy
	/g
	/gfile
	/gindex
	/grnt
	/gryt
	/gstring
	/height
	/hh
	/i
	/im
	/indx
	/is
	/k
	/kk
	/landscape
	/lb
	/len
	/llx
	/lly
	/m
	/magu
	/manualfeed
	/n
	/offbits
	/onbits
	/organgle
	/orgbangle
	/orgbfreq
	/orgbproc
	/orgbxfer
	/orgfreq
	/orggangle
	/orggfreq
	/orggproc
	/orggxfer
	/orgmatrix
	/orgproc
	/orgrangle
	/orgrfreq
	/orgrproc
	/orgrxfer
	/orgxfer
	/pagesave
	/paperheight
	/papersizedict
	/paperwidth
	/pos
	/pwid
	/r
	/rad
	/redt
	/sl
	/str
	/tran
	/u
	/urx
	/ury
	/val
	/width
	/width
	/ws
	/ww
	/x
	/x1
	/x2
	/xindex
	/xpoint
	/xscale
	/xx
	/y
	/y1
	/y2
	/yelu
	/yindex
	/ypoint
	/yscale
	/yy
] { 0 def } forall
/FmBD {bind def} bind def
systemdict /pdfmark known {
	/fMAcrobat true def
	
	/FmPD /pdfmark load def
	
	
	/FmPT /show load def
	
	
	currentdistillerparams /CoreDistVersion get 2000 ge {
	
		
		/FmPD2 /pdfmark load def
		
		
		
		
		
		/FmPA { mark exch /Dest exch 5 3 roll 
				/View [ /XYZ null 6 -2 roll FmDC exch pop null] /DEST FmPD 
		}FmBD
	} {
		
		/FmPD2 /cleartomark load def
		/FmPA {pop pop pop}FmBD
	} ifelse
} {
	
	/fMAcrobat false def
	/FmPD /cleartomark load def
	/FmPD2 /cleartomark load def
	/FmPT /pop load def
	/FmPA {pop pop pop}FmBD
} ifelse
/FmDC {
	transform fMDefaultMatrix itransform cvi exch cvi exch
}FmBD
/FmBx {
	dup 3 index lt {3 1 roll exch} if 
	1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/fMNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		RealSetrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
fMLevel1 { 
	
	
	
	/patScreenDict 7 dict dup begin
		<0f1e3c78f0e1c387> [ 45  { pop } {exch pop} 		.5   2 sqrt] FmBD
		<0f87c3e1f0783c1e> [ 135 { pop } {exch pop}			.5   2 sqrt] FmBD
		<cccccccccccccccc> [ 0   { pop } dup				.5   2	   ] FmBD
		<ffff0000ffff0000> [ 90  { pop } dup				.5   2	   ] FmBD
		<8142241818244281> [ 45  { 2 copy lt {exch} if pop}	dup .75  2 sqrt] FmBD
		<03060c183060c081> [ 45  { pop } {exch pop}			.875 2 sqrt] FmBD
		<8040201008040201> [ 135 { pop } {exch pop}			.875 2 sqrt] FmBD
	end def
} { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} ifelse
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				fMAcrobat not FMPColor graymode and and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not fMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/fMDefaultMatrix matrix defaultmatrix def
/fMatrix2 matrix def
/dpi    72 0 fMDefaultMatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 fMDefaultMatrix dtransform exch atan def
	sangle fMatrix2 rotate 
	fMDefaultMatrix fMatrix2 concatmatrix 
	dup 0 get /sflipx exch def
	    3 get /sflipy exch def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	fMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /fMNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	fMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{papersizefailure} if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{2 dict
		 dup /PageSize [paperwidth paperheight] put
		 manualfeed {dup /ManualFeed manualfeed put} if
		 {setpagedevice} stopped {papersizefailure} if
		}
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			fMNegative {
				1 1 4 { 
					pop { 1 exch sub } fmConcatProcs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		fMNegative {
			{ 1 exch sub } fmConcatProcs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/papersizefailure {
	FMAllowPaperSizeMismatch not
		{
(The requested paper size is not available in any currently-installed tray)
(Edit the PS file to "FMAllowPaperSizeMismatch true" to use default tray)
		 FMFAILURE } if
	} def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYK } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYKGRAY } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
fMLevel1 {
	/fmGetFlip {
		fMatrix2 exch get mul 0 lt { -1 } { 1 } ifelse
	} FmBD
} if
/setPatternMode {
	fMLevel1 {
		2 index patScreenDict exch known {
			pop pop
			patScreenDict exch get aload pop 
			freq 								
			mul									
			5 2 roll							
			fMatrix2 currentmatrix 1 get 0 ne {
				3 -1 roll 90 add 3 1 roll 		
				sflipx 1 fmGetFlip sflipy 2 fmGetFlip neg mul
			} {  								
				sflipx 0 fmGetFlip sflipy 3 fmGetFlip mul 
			} ifelse
			0 lt {exch pop} {pop} ifelse 		
			fMNegative { 
				{neg} fmConcatProcs 			
			} if
			bind
			
			
			
			systemdict /setscreen get exec		
			/FrameCurGray exch def
		} {
			/bwidth  exch def
			/bpside  exch def
			/bstring exch def
			/onbits 0 def  /offbits 0 def
			freq sangle landscape {90 add} if 
				{/ypoint exch def
				 /xpoint exch def
				 /xindex xpoint 1 add 2 div bpside mul cvi def
				 /yindex ypoint 1 add 2 div bpside mul cvi def
				 bstring yindex bwidth mul xindex 8 idiv add get
				 1 7 xindex 8 mod sub bitshift and 0 ne fMNegative {not} if
				 {/onbits  onbits  1 add def 1}
				 {/offbits offbits 1 add def 0}
				 ifelse
				}
				setscreen
			offbits offbits onbits add div fMNegative {1.0 exch sub} if
			/FrameCurGray exch def
		} ifelse
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		fMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode fMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode fMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/rip4 { 
	   
	  
	  kis cis copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  cis mis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  mis yis copy pop 
	  dup dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  yis kis copy pop 
	  3 mul is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
/wbytes { 
      dup dup
      8 gt { pop 8 idiv mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	cvtProc                
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def 
	cvtProc              
	/is width depth wbytes string def
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
fMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/kk cynu magu min yelu min def
		/u kk currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 kk currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch fmConcatProcs settransfer
} bind def
/BITMAPCOLOR { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def
	fMLevel1 {	
		colorsetup
		/is width depth wbytes string def
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is width depth wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	fMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {ip} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/depth 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip pop ris} {gis} {bis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCMYKc { 
	/depth 32 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip4 pop cis} {mis} {yis} {kis} true 4 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYK { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /mis width string def
        /yis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf mis readhexstring pop } 
        { cf yis readhexstring pop } 
        { cf kis readhexstring pop } 
        true 4 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/depth 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop ris gis bis width gray} image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAYc { 
	/depth 32 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop cis mis yis kis width cgray} image
        bitmapsave restore 
        grestore
        } bind def
/cgray { 
        /ww exch def
        /k exch def
        /y exch def
        /m exch def
        /c exch def
        0 1 ww 1 sub { /i exch def c i get m i get y i get k i get CMYKtoRGB
				.144 mul 3 1 roll .587 mul 3 1 roll .299 mul add add
				c i 3 -1 roll floor cvi put } for
        c
 		} bind def
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop width gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /yis width string def
        /mis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf mis readhexstring pop 
          cf yis readhexstring pop 
          cf kis readhexstring pop width cgray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
(5.0) FMVERSION
1 1 0 0 432 140.83 0 1 7 FMDOCUMENT
0 0 /Times-Roman FMFONTDEFINE
1 0 /Times-Italic FMFONTDEFINE
2 0 /Times-Bold FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
432 140.83 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 0 0 0 1 1 1]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
256.93 103.82 270.72 103.82 271.17 61 341.71 61 341.71 45.33 257.15 45.85 6 Y
6 X
0 0 0 1 0 0 0 K
V
0.5 H
2 Z
7 X
N
342.43 103.82 357 103.82 357.48 41.96 432 41.96 432 19.33 342.67 20.08 6 Y
6 X
V
7 X
N
317.07 106.32 377.83 140.32 R
5 X
V
7 X
N
255.92 106.32 315.73 140.32 R
5 X
V
7 X
N
193.35 106.32 254.11 140.32 R
5 X
V
7 X
N
195.78 99.82 210.35 99.82 210.83 44.18 285.35 44.18 285.35 23.83 196.02 24.51 6 Y
6 X
V
7 X
N
152.79 101.32 169.99 101.32 170.71 22.87 242.83 23.52 242.83 0.82 153.03 0.82 6 Y
6 X
V
7 X
N
130.49 106.82 191.72 140.82 R
5 X
V
7 X
N
28.6 100.32 43.17 100.32 43.64 57.5 118.16 57.5 118.16 41.83 28.83 42.35 6 Y
6 X
V
7 X
N
6.62 101.32 23.82 101.32 24.54 40.83 96.67 41.33 96.67 23.83 6.86 23.83 6 Y
6 X
V
7 X
N
68.2 106.82 128.96 140.82 R
5 X
V
7 X
N
5.62 106.32 66.86 140.32 R
5 X
V
7 X
N
3.89 76.63 378.29 76.63 2 L
0 X
N
15.48 72.61 15.48 80.65 2 L
N
26.09 72.17 26.09 80.2 2 L
2 H
N
35.56 71.72 35.56 79.76 2 L
0.5 H
N
45.88 72.17 45.88 80.2 2 L
2 H
N
56.78 72.61 56.78 80.65 2 L
0.5 H
N
67.11 72.17 67.11 80.2 2 L
2 H
N
77.14 72.61 77.14 80.65 2 L
0.5 H
N
2.84 73.19 2.84 81.23 2 L
11 X
N
0 10 Q
0 X
(0) 0 63.71 T
88.04 72.54 88.04 80.58 2 L
2 H
N
203.18 72.09 203.18 80.13 2 L
0.5 H
N
213.51 72.54 213.51 80.57 2 L
2 H
N
224.41 72.98 224.41 81.02 2 L
0.5 H
N
234.73 72.54 234.73 80.57 2 L
2 H
N
244.77 72.98 244.77 81.02 2 L
0.5 H
N
255.67 72.91 255.67 80.95 2 L
2 H
N
109.78 72.09 109.78 80.13 2 L
N
130.18 72.54 130.18 80.57 2 L
N
140.12 72.98 140.12 81.02 2 L
0.5 H
N
150.45 72.54 150.45 80.57 2 L
2 H
N
160.48 72.98 160.48 81.02 2 L
0.5 H
N
171.38 72.91 171.38 80.95 2 L
2 H
N
274.98 72.09 274.98 80.13 2 L
N
285.3 72.54 285.3 80.57 2 L
0.5 H
N
296.2 72.98 296.2 81.02 2 L
2 H
N
306.53 72.54 306.53 80.57 2 L
0.5 H
N
316.57 72.98 316.57 81.02 2 L
2 H
N
327.46 72.91 327.46 80.95 2 L
0.5 H
N
347.8 72.54 347.8 80.58 2 L
N
358.13 72.99 358.13 81.02 2 L
2 H
N
369.99 72.44 369.99 80.47 2 L
0.5 H
N
264.62 72.18 264.62 80.22 2 L
N
337.26 72.71 337.26 80.75 2 L
2 H
N
180.73 72.18 180.73 80.22 2 L
0.5 H
N
98.8 72.68 98.8 80.72 2 L
N
192.12 72.71 192.12 80.75 2 L
2 H
N
119.5 72.56 119.5 80.6 2 L
0.5 H
N
380.55 72.44 380.55 80.47 2 L
2 H
N
(Time intervals) 368.46 54.33 T
(2) 24.54 62.83 T
(6) 63.5 62.08 T
(12) 127 60.08 T
( 18) 184.5 60.08 T
(24) 248 60.58 T
(30) 313.5 60.58 T
(36) 376.5 61.58 T
43.64 86.48 43.64 81.79 2 L
0.5 H
0 Z
N
46.21 86.23 43.64 81.79 41.08 86.23 3 L
N
29.07 78.57 29.07 113.83 43.64 113.83 43.64 86.48 4 L
2 Z
N
64.66 73.02 64.66 68.32 2 L
0 Z
N
67.23 72.77 64.66 68.32 62.09 72.77 3 L
N
48.18 86.14 48.18 113.83 64.66 113.83 64.66 73.02 4 L
2 Z
N
1 12 Q
(v) 17.55 131 T
0 9 Q
(1) 23.33 127.4 T
106.7 86.46 106.7 81.77 2 L
0 Z
N
109.26 86.21 106.7 81.77 104.13 86.21 3 L
N
92.13 78.57 92.13 113.58 106.7 113.58 106.7 86.46 4 L
2 Z
N
127.71 73.02 127.71 68.33 2 L
0 Z
N
130.28 72.77 127.71 68.33 125.15 72.77 3 L
N
111.24 86.04 111.24 113.58 127.71 113.58 127.71 73.02 4 L
2 Z
N
21.67 73.02 21.67 68.33 2 L
0 Z
N
24.24 72.77 21.67 68.33 19.1 72.77 3 L
N
9.49 67.33 9.49 84.82 21.67 84.82 21.67 73.02 4 L
2 Z
N
355.09 74.77 355.09 70.08 2 L
0 Z
N
357.65 74.52 355.09 70.08 352.52 74.52 3 L
N
342.91 69.08 342.91 86.57 355.09 86.57 355.09 74.77 4 L
2 Z
N
41.73 73.02 41.73 68.33 2 L
0 Z
N
44.3 72.77 41.73 68.33 39.17 72.77 3 L
N
31.22 67.33 31.22 84.82 41.73 84.82 41.73 73.02 4 L
2 Z
N
168.56 87.29 168.56 82.59 2 L
0 Z
N
171.12 87.04 168.56 82.59 165.99 87.04 3 L
N
153.99 79.57 153.99 112.33 168.56 112.33 168.56 87.29 4 L
2 Z
N
189.57 74.02 189.57 69.33 2 L
0 Z
N
192.14 73.77 189.57 69.33 187.01 73.77 3 L
N
173.09 86.15 173.09 112.33 189.57 112.33 189.57 74.02 4 L
2 Z
N
166.41 72.77 166.41 68.08 2 L
0 Z
N
168.97 72.52 166.41 68.08 163.84 72.52 3 L
N
155.9 67.08 155.9 84.57 166.41 84.57 166.41 72.77 4 L
2 Z
N
231.85 87.29 231.85 82.59 2 L
0 Z
N
234.41 87.04 231.85 82.59 229.28 87.04 3 L
N
217.28 79.57 217.28 112.33 231.85 112.33 231.85 87.29 4 L
2 Z
N
252.87 74.02 252.87 69.33 2 L
0 Z
N
255.43 73.77 252.87 69.33 250.3 73.77 3 L
N
236.39 86.15 236.39 112.33 252.87 112.33 252.87 74.02 4 L
2 Z
N
23.82 91.87 23.82 87.17 2 L
0 Z
N
26.39 91.62 23.82 87.17 21.25 91.62 3 L
N
6.62 67.33 6.62 112.58 23.82 112.58 23.82 91.87 4 L
2 Z
N
86.39 92.83 86.39 88.13 2 L
0 Z
N
88.96 92.58 86.39 88.13 83.83 92.58 3 L
N
69.2 68.08 69.2 113.83 86.39 113.83 86.39 92.83 4 L
2 Z
N
149.21 92.47 149.21 87.78 2 L
0 Z
N
151.78 92.22 149.21 87.78 146.64 92.22 3 L
N
132.01 68.58 132.01 112.33 149.21 112.33 149.21 92.47 4 L
2 Z
N
211.79 92.33 211.79 87.63 2 L
0 Z
N
214.35 92.08 211.79 87.63 209.22 92.08 3 L
N
194.59 68.33 194.59 112.33 211.79 112.33 211.79 92.33 4 L
2 Z
N
208.92 73.02 208.92 68.33 2 L
0 Z
N
211.49 72.77 208.92 68.33 206.35 72.77 3 L
N
196.74 67.33 196.74 84.82 208.92 84.82 208.92 73.02 4 L
2 Z
N
313.77 74.02 313.77 69.33 2 L
0 Z
N
316.34 73.77 313.77 69.33 311.2 73.77 3 L
N
297.29 86.15 297.29 112.33 313.77 112.33 313.77 74.02 4 L
2 Z
N
356.04 87.29 356.04 82.59 2 L
0 Z
N
358.61 87.04 356.04 82.59 353.48 87.04 3 L
N
341.48 79.57 341.48 112.33 356.04 112.33 356.04 87.29 4 L
2 Z
N
377.06 74.02 377.06 69.33 2 L
0 Z
N
379.63 73.77 377.06 69.33 374.49 73.77 3 L
N
360.58 86.15 360.58 112.33 377.06 112.33 377.06 74.02 4 L
2 Z
N
272.93 92.47 272.93 87.78 2 L
0 Z
N
275.49 92.22 272.93 87.78 270.36 92.22 3 L
N
257.64 68.58 257.64 112.33 272.93 112.33 272.93 92.47 4 L
2 Z
N
335.98 92.33 335.98 87.63 2 L
0 Z
N
338.55 92.08 335.98 87.63 333.41 92.08 3 L
N
318.79 68.33 318.79 112.33 335.98 112.33 335.98 92.33 4 L
2 Z
N
1 12 Q
(v) 267.81 130.6 T
0 9 Q
(3) 273.6 127 T
271.49 72.52 271.49 67.83 2 L
0 Z
N
274.06 72.27 271.49 67.83 268.93 72.27 3 L
N
259.31 66.83 259.31 84.32 271.49 84.32 271.49 72.52 4 L
2 Z
N
293.71 92.33 293.71 87.63 2 L
0 Z
N
296.27 92.08 293.71 87.63 291.14 92.08 3 L
N
276.51 68.33 276.51 112.33 293.71 112.33 293.71 92.33 4 L
2 Z
N
2 10 Q
(v) 10.76 115.64 T
2 8 Q
(1) 15.76 113.14 T
2 10 Q
(v) 31.3 117.14 T
2 8 Q
(1) 36.3 114.64 T
2 10 Q
(v) 95.31 116.64 T
2 8 Q
(1) 100.31 114.14 T
2 10 Q
(v) 52.32 117.14 T
2 8 Q
(1) 57.32 114.64 T
2 10 Q
(v) 74.29 117.14 T
2 8 Q
(1) 79.29 114.64 T
2 10 Q
(v) 116.81 116.64 T
2 8 Q
(1) 121.81 114.14 T
0 10 Q
(is f) 31.22 129.82 T
(alse) 43.62 129.82 T
2 F
(C) 10.39 90.84 T
2 8 Q
(1) 17.61 88.34 T
2 10 Q
(C) 31.3 89.89 T
2 8 Q
(2) 38.52 87.39 T
1 10 Q
(C) 9.14 28.6 T
0 F
(1) 16.41 23.5 T
(is true if) 23.1 29.83 T
1 12 Q
(v) 57.68 30.5 T
0 9 Q
(1) 63.46 26.9 T
0 10 Q
(is true) 71.35 29.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(C) 29.68 51.1 T
0 F
(2) 36.95 46 T
(is true if) 43.64 50.33 T
1 12 Q
(v) 78.22 51 T
0 9 Q
(1) 84 47.4 T
0 10 Q
(is true) 91.89 49.83 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(v) 136.31 116.07 T
2 8 Q
(2) 141.31 113.57 T
2 10 Q
(v) 157.33 116.07 T
2 8 Q
(2) 162.33 113.57 T
2 10 Q
(v) 176.91 116.07 T
2 8 Q
(2) 181.91 113.57 T
2 10 Q
(v) 198.89 116.07 T
2 8 Q
(2) 203.89 113.57 T
2 10 Q
(v) 220.38 116.07 T
2 8 Q
(2) 225.38 113.57 T
2 10 Q
(v) 240.92 116.07 T
2 8 Q
(2) 245.92 113.57 T
1 12 Q
(v) 140.79 130.5 T
0 9 Q
(2) 146.57 126.9 T
0 10 Q
(is f) 154.46 129.32 T
(alse) 166.86 129.32 T
1 F
(C) 154.35 8.6 T
0 F
(2) 161.62 3.5 T
(is true if) 168.79 9.82 T
1 12 Q
(v) 204.39 10.5 T
0 9 Q
(2) 210.17 6.9 T
0 10 Q
(is true) 216.56 9.32 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(C) 196.84 30.6 T
0 12 Q
(1) 204.11 24 T
0 10 Q
(is true if) 209.88 31.83 T
1 12 Q
(v) 244.51 32.5 T
0 9 Q
(2) 250.3 28.9 T
0 10 Q
(is f) 256.69 31.33 T
(alse) 269.09 31.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(v) 81.56 130 T
0 9 Q
(1) 87.34 126.4 T
0 10 Q
(is true) 95.23 128.82 T
1 12 Q
(v) 204.8 130.5 T
0 9 Q
(2) 210.58 126.9 T
0 10 Q
(is true) 218.47 129.32 T
(is f) 281.05 129.32 T
(alse) 293.45 129.32 T
2 F
(v) 260.99 116.07 T
2 8 Q
(3) 265.99 113.57 T
2 10 Q
(v) 280.57 116.57 T
2 8 Q
(3) 285.57 114.07 T
2 10 Q
(v) 299.68 116.07 T
2 8 Q
(3) 304.68 113.57 T
1 10 Q
(C) 258.96 51.1 T
0 F
(1) 266.23 46 T
(is true if) 270.54 51.33 T
1 12 Q
(v) 304.64 52 T
0 9 Q
(3) 310.42 48.4 T
0 10 Q
(is true) 318.31 50.83 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(v) 323.08 116.57 T
2 8 Q
(3) 328.08 114.07 T
2 10 Q
(v) 344.58 117.07 T
2 8 Q
(3) 349.58 114.57 T
2 10 Q
(v) 364.64 116.57 T
2 8 Q
(3) 369.64 114.07 T
1 12 Q
(v) 326.57 130.6 T
0 9 Q
(3) 332.35 127 T
0 10 Q
(is true) 339.8 129.32 T
1 F
(C) 344.46 28.1 T
0 F
(2) 351.73 23 T
(is true if) 357 29.33 T
1 12 Q
(v) 392.14 30 T
0 9 Q
(3) 397.92 26.4 T
0 10 Q
(is f) 403.81 28.83 T
(alse) 416.21 28.83 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(C) 155.3 89.39 T
2 8 Q
(2) 162.52 86.89 T
2 10 Q
(C) 196.89 89.34 T
2 8 Q
(1) 204.11 86.84 T
2 10 Q
(C) 259.39 88.84 T
2 8 Q
(1) 266.61 86.34 T
2 10 Q
(C) 342.3 90.39 T
2 8 Q
(2) 349.52 87.89 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndDocument
 @endspecial 0 1476 a Ft(Figure)23 b(7:)35 b(Example)23
b(of)h(reduction)g(of)g(SA)-7 b(T)25 b(instance:)34 b
Fo(C)1845 1488 y Fn(1)1906 1476 y Ft(=)23 b Fo(v)2034
1488 y Fn(1)2083 1476 y Fl(_)11 b(:)p Fo(v)2244 1488
y Fn(2)2293 1476 y Fl(_)g Fo(v)2399 1488 y Fn(3)2462
1476 y Ft(and)24 b Fo(C)2679 1488 y Fn(2)2739 1476 y
Ft(=)f Fo(v)2867 1488 y Fn(1)2916 1476 y Fl(_)11 b Fo(v)3022
1488 y Fn(2)3071 1476 y Fl(_)g(:)p Fo(v)3232 1488 y Fn(3)3271
1476 y Ft(,)25 b(in)n(to)f(a)f(migration)0 1606 y(sc)n(heduling)k
(instance.)37 b(Dashed)27 b(time)h(instan)n(t)g(0)f(represen)n(ts)f(a)h
(memory)g(with)h(one)f(or)g(more)g(a)n(v)-5 b(ailable)26
b(frames.)0 1871 y(of)i(the)g(sub-p)r(erio)r(d.)177 2036
y(T)-7 b(o)28 b(illustrate,)h(consider)e(the)i(example)f(sho)n(wn)g(in)
g(Figure)g(7.)39 b Fm(SA)-6 b(T2MigSc)30 b Ft(will)f(output)g(\014v)n
(e)f(migration)f(requests)0 2166 y(\(one)38 b(for)g(eac)n(h)f(v)-5
b(ariable)37 b(and)h(one)g(for)f(eac)n(h)h(clause\).)68
b(Eac)n(h)37 b(migration)g(request)g(has)h(more)f(than)i(one)e
(alternativ)n(e)0 2295 y(sc)n(hedule)25 b(on)g(A.)h(There)e(are)h(t)n
(w)n(o)f(alternativ)n(es)g(to)h(sc)n(hedule)g(a)g(migration)f(for)h
Fo(v)2561 2307 y Fn(1)2598 2295 y Ft(:)36 b(the)26 b(\014rst)f(one)g
(spans)f(time)i(in)n(terv)-5 b(als)24 b(0)0 2425 y(to)29
b(5)f(and)g(the)i(second)e(one)g(time)h(in)n(terv)-5
b(als)28 b(6)g(to)h(11.)39 b(Similarly)-7 b(,)29 b(alternativ)n(e)e(sc)
n(hedules)h(for)h Fo(v)3065 2437 y Fn(2)3131 2425 y Ft(and)f
Fo(v)3333 2437 y Fn(3)3400 2425 y Ft(span)g(in)n(terv)-5
b(als)0 2554 y(12)33 b(to)h(17)g(and)g(18)f(to)h(23,)h(and)f(in)n(terv)
-5 b(als)33 b(24)g(to)h(29)g(and)g(30)f(to)h(35,)h(resp)r(ectiv)n(ely)
-7 b(.)56 b(There)33 b(are)h(three)g(alternativ)n(es)e(to)0
2684 y(sc)n(hedule)26 b(a)f(migration)g(for)h Fo(C)958
2696 y Fn(1)996 2684 y Ft(:)36 b(the)26 b(\014rst)g(one)g(spans)g(time)
g(in)n(terv)-5 b(als)25 b(0)h(and)g(1,)g(the)h(second)e(one)h(spans)f
(18)h(and)g(19,)f(and)0 2813 y(the)32 b(third)f(one)g(24)f(and)h(25.)47
b(Similarly)-7 b(,)32 b(alternativ)n(e)e(sc)n(hedules)h(for)f
Fo(C)2296 2825 y Fn(2)2365 2813 y Ft(span)h(in)n(terv)-5
b(als)30 b(2)h(and)g(3,)h(14)f(and)g(15,)g(and)g(32)0
2943 y(and)c(33.)177 3108 y(A)h(p)r(ossible)g(sc)n(hedule)f(for)h(all)f
(the)h(requests)f(is)h(to)g(migrate)e Fo(v)2148 3120
y Fn(1)2214 3108 y Ft(during)h(in)n(terv)-5 b(als)27
b(6)h(to)f(11,)g Fo(v)3155 3120 y Fn(2)3221 3108 y Ft(during)g(in)n
(terv)-5 b(als)27 b(12)0 3238 y(to)k(17)e(\(or)h(18)g(to)h(23\),)f
Fo(v)783 3250 y Fn(3)852 3238 y Ft(during)g(in)n(terv)-5
b(als)30 b(24)f(to)i(29)f(\(or)g(30)f(to)i(35\),)g Fo(C)2370
3250 y Fn(1)2438 3238 y Ft(during)f(in)n(terv)-5 b(als)30
b(0)g(and)h(1,)g(and)f Fo(C)3596 3250 y Fn(2)3665 3238
y Ft(during)0 3367 y(in)n(terv)-5 b(als)28 b(2)h(and)g(3.)40
b(Another)29 b(p)r(ossible)g(sc)n(hedule)f(is)h(to)g(migrate)f
Fo(v)2179 3379 y Fn(1)2246 3367 y Ft(during)g(in)n(terv)-5
b(als)28 b(0)h(to)g(5,)g Fo(v)3152 3379 y Fn(2)3218 3367
y Ft(during)g(in)n(terv)-5 b(als)28 b(12)0 3497 y(to)e(17,)f
Fo(v)272 3509 y Fn(3)335 3497 y Ft(during)g(in)n(terv)-5
b(als)25 b(24)g(to)g(29,)h Fo(C)1327 3509 y Fn(1)1390
3497 y Ft(during)f(in)n(terv)-5 b(als)25 b(18)g(and)g(19,)h(and)f
Fo(C)2601 3509 y Fn(2)2664 3497 y Ft(during)h(in)n(terv)-5
b(als)24 b(32)h(and)h(33.)35 b(Notice)0 3626 y(that)28
b(the)g(spans)f(of)g(the)h(sc)n(hedules)f(are)g(disjoin)n(t.)177
3791 y(F)-7 b(ormally)g(,)27 b(the)h(algorithm)e(SA)-7
b(T2MigSc)28 b(is)f(de\014ned)h(as)f(follo)n(ws:)50 3942
y Fu(SA)-8 b(T2MigSc)50 4072 y(Input:)195 b Fo(C)563
4084 y Fn(1)601 4072 y Fo(;)14 b(:)g(:)g(:)f(;)h(C)844
4084 y Fk(n)890 4072 y Fo(;)27 b(v)980 4084 y Fn(1)1018
4072 y Fo(;)14 b(:)g(:)g(:)f(;)h(v)1242 4084 y Fk(k)50
4201 y Fu(Output:)122 b Fo(M)t(;)14 b(A;)g(N)50 4331
y Fu(Metho)s(d:)98 b Fo(N)36 b Ft(=)28 b(\(2)18 b Fl(\001)g
Fo(n)h Ft(+)f(2\))g Fl(\001)g Ft(2)g Fl(\001)h Fo(k)504
4460 y Ft(Let)28 b Fo(A)g Ft(b)r(e)g(as)f(describ)r(ed)g(b)r(elo)n(w.)
504 4590 y Fm(Cr)l(e)l(ate)j(one)g(migr)l(ation)h(r)l(e)l(quest)d(for)j
(e)l(ach)g(variable)h(and)e(e)l(ach)h(clause:)554 4719
y Fo(M)108 b Ft(=)99 b Fl(f)p Ft(\()p Fo(v)1021 4731
y Fk(i)1049 4719 y Fo(;)14 b(s)1125 4731 y Fk(i)1175
4719 y Fl(!)23 b(f)p Fo(t)1353 4731 y Fk(i)1381 4719
y Fo(;)14 b(u)1466 4731 y Fk(i)1493 4719 y Fl(g)p Ft(\))23
b Fl(j)g Ft(1)f Fl(\024)h Fo(i)g Fl(\024)f Fo(k)s Fl(g)h([)907
4849 y(f)p Ft(\()p Fo(C)1040 4861 y Fk(j)1075 4849 y
Fo(;)14 b(d)1155 4861 y Fk(j)1213 4849 y Fl(!)24 b Ft(\()p
Fl(f)p Fo(d)1437 4861 y Fk(j)s(i)1518 4849 y Fl(j)f Fo(v)1604
4861 y Fk(i)1655 4849 y Fl(2)h Fo(C)1793 4861 y Fk(j)1828
4849 y Fl(g)18 b([)h(f)p Fo(e)2043 4861 y Fk(j)s(i)2123
4849 y Fl(j)k(:)p Fo(v)2264 4861 y Fk(i)2316 4849 y Fl(2)g
Fo(C)2453 4861 y Fk(j)2488 4849 y Fl(g)p Ft(\)\))h Fl(j)f
Ft(1)f Fl(\024)h Fo(j)28 b Fl(\024)23 b Fo(n)p Fl(g)p
Ft(,)907 4978 y(where)k(pages)g Fo(v)1414 4990 y Fk(i)1469
4978 y Ft(and)h Fo(C)1690 4990 y Fk(j)1753 4978 y Ft(are)e(distinct)j
(and)e(di\013eren)n(t)h(from)f(those)g(in)h(memory)f(at)907
5108 y(instan)n(ts)g(0)p Fo(;)14 b Ft(1)p Fo(;)g(:)g(:)g(:)f(;)h(N)177
5249 y Ft(The)29 b(system)g(load)f Fo(A)h Ft(computed)g(b)n(y)g
Fo(S)5 b(AT)12 b Ft(2)p Fo(M)d(ig)s(S)c(c)26 b Ft(is)j(de\014ned)g(in)g
(Figure)f(8.)41 b(Thic)n(k)28 b(time)h(instan)n(ts)g(denote)g(that)1908
5656 y(10)p eop
%%Page: 11 12
11 11 bop 150 3996 a @beginspecial 0 @llx 0 @lly 432
@urx 346.609985 @ury 4320 @rwi @setspecial
%%BeginDocument: sat2rep.ps
%
% Frame ps_prolog 5.0, for use with Frame 5.0 products
% This ps_prolog file is Copyright (c) 1986-1995 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameMaker/SGML and FrameViewer as long as this 
% copyright notice is preserved.
%
% FrameMaker users specify the proper paper size for each print job in the
% "Print" dialog's "Printer Paper Size" "Width" and "Height~ fields.  If the
% printer that the PS file is sent to does not support the requested paper
% size, or if there is no paper tray of the proper size currently installed, 
% then the job will not be printed.  The following flag, if set to true, will
% cause the job to print on the default paper in such cases.
/FMAllowPaperSizeMismatch            true def
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to true, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% The following is a set of predefined optimal frequencies and angles for various
% common dpi settings. This is taken from "Advances in Color Separation Using
% PostScript Software Technology," from Adobe Systems (3/13/89 P.N. LPS 0043)
% and corrolated with information which is in various PPD (4.0) files.
%
% The "dpiranges" figure is the minimum dots per inch device resolution which
% can support this setting. The "low" and "high" values are controlled by the
% setting of the FMUseHighFrequencyScreens flag above. The "TDot" flags control
% the use of the "Yellow Triple Dot" feature whereby the frequency id divided by
% three, but the dot function is "trippled" giving a block of 3x3 dots per cell.
%
% PatFreq is a compromise pattern frequency for ps Level 2 printers which is close
% to the ideal WYSIWYG pattern frequency of 9 repetitions/inch but does not beat
% (too badly) against the screen frequencies of any separations for that DPI.
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (5.0) def 
/fMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	fMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto show
	72 220 moveto show
	FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!  Check installation;)
		(also check ~/fminit and ./fminit for old versions) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(Adobe's PostScript Language Reference Manual, 2nd Edition, section H.2.4)
	(says your EPS file is not valid, as it calls X              )
	dup dup (X) search pop exch pop exch pop length 
	5 -1 roll 
	putinterval 
	FMFAILURE
	} def
/fmConcatProcs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin [
	/ALDsave
	/FMdicttop
	/FMoptop
	/FMpointsize
	/FMsaveobject
	/b
	/bitmapsave
	/blut
	/bpside
	/bs
	/bstring
	/bwidth
	/c
	/cf
	/cs
	/cynu
	/depth
	/edown
	/fh
	/fillvals
	/fw
	/fx
	/fy
	/g
	/gfile
	/gindex
	/grnt
	/gryt
	/gstring
	/height
	/hh
	/i
	/im
	/indx
	/is
	/k
	/kk
	/landscape
	/lb
	/len
	/llx
	/lly
	/m
	/magu
	/manualfeed
	/n
	/offbits
	/onbits
	/organgle
	/orgbangle
	/orgbfreq
	/orgbproc
	/orgbxfer
	/orgfreq
	/orggangle
	/orggfreq
	/orggproc
	/orggxfer
	/orgmatrix
	/orgproc
	/orgrangle
	/orgrfreq
	/orgrproc
	/orgrxfer
	/orgxfer
	/pagesave
	/paperheight
	/papersizedict
	/paperwidth
	/pos
	/pwid
	/r
	/rad
	/redt
	/sl
	/str
	/tran
	/u
	/urx
	/ury
	/val
	/width
	/width
	/ws
	/ww
	/x
	/x1
	/x2
	/xindex
	/xpoint
	/xscale
	/xx
	/y
	/y1
	/y2
	/yelu
	/yindex
	/ypoint
	/yscale
	/yy
] { 0 def } forall
/FmBD {bind def} bind def
systemdict /pdfmark known {
	/fMAcrobat true def
	
	/FmPD /pdfmark load def
	
	
	/FmPT /show load def
	
	
	currentdistillerparams /CoreDistVersion get 2000 ge {
	
		
		/FmPD2 /pdfmark load def
		
		
		
		
		
		/FmPA { mark exch /Dest exch 5 3 roll 
				/View [ /XYZ null 6 -2 roll FmDC exch pop null] /DEST FmPD 
		}FmBD
	} {
		
		/FmPD2 /cleartomark load def
		/FmPA {pop pop pop}FmBD
	} ifelse
} {
	
	/fMAcrobat false def
	/FmPD /cleartomark load def
	/FmPD2 /cleartomark load def
	/FmPT /pop load def
	/FmPA {pop pop pop}FmBD
} ifelse
/FmDC {
	transform fMDefaultMatrix itransform cvi exch cvi exch
}FmBD
/FmBx {
	dup 3 index lt {3 1 roll exch} if 
	1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/fMNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		RealSetrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
fMLevel1 { 
	
	
	
	/patScreenDict 7 dict dup begin
		<0f1e3c78f0e1c387> [ 45  { pop } {exch pop} 		.5   2 sqrt] FmBD
		<0f87c3e1f0783c1e> [ 135 { pop } {exch pop}			.5   2 sqrt] FmBD
		<cccccccccccccccc> [ 0   { pop } dup				.5   2	   ] FmBD
		<ffff0000ffff0000> [ 90  { pop } dup				.5   2	   ] FmBD
		<8142241818244281> [ 45  { 2 copy lt {exch} if pop}	dup .75  2 sqrt] FmBD
		<03060c183060c081> [ 45  { pop } {exch pop}			.875 2 sqrt] FmBD
		<8040201008040201> [ 135 { pop } {exch pop}			.875 2 sqrt] FmBD
	end def
} { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} ifelse
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				fMAcrobat not FMPColor graymode and and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not fMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/fMDefaultMatrix matrix defaultmatrix def
/fMatrix2 matrix def
/dpi    72 0 fMDefaultMatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 fMDefaultMatrix dtransform exch atan def
	sangle fMatrix2 rotate 
	fMDefaultMatrix fMatrix2 concatmatrix 
	dup 0 get /sflipx exch def
	    3 get /sflipy exch def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	fMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /fMNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	fMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{papersizefailure} if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{2 dict
		 dup /PageSize [paperwidth paperheight] put
		 manualfeed {dup /ManualFeed manualfeed put} if
		 {setpagedevice} stopped {papersizefailure} if
		}
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			fMNegative {
				1 1 4 { 
					pop { 1 exch sub } fmConcatProcs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		fMNegative {
			{ 1 exch sub } fmConcatProcs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/papersizefailure {
	FMAllowPaperSizeMismatch not
		{
(The requested paper size is not available in any currently-installed tray)
(Edit the PS file to "FMAllowPaperSizeMismatch true" to use default tray)
		 FMFAILURE } if
	} def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYK } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYKGRAY } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
fMLevel1 {
	/fmGetFlip {
		fMatrix2 exch get mul 0 lt { -1 } { 1 } ifelse
	} FmBD
} if
/setPatternMode {
	fMLevel1 {
		2 index patScreenDict exch known {
			pop pop
			patScreenDict exch get aload pop 
			freq 								
			mul									
			5 2 roll							
			fMatrix2 currentmatrix 1 get 0 ne {
				3 -1 roll 90 add 3 1 roll 		
				sflipx 1 fmGetFlip sflipy 2 fmGetFlip neg mul
			} {  								
				sflipx 0 fmGetFlip sflipy 3 fmGetFlip mul 
			} ifelse
			0 lt {exch pop} {pop} ifelse 		
			fMNegative { 
				{neg} fmConcatProcs 			
			} if
			bind
			
			
			
			systemdict /setscreen get exec		
			/FrameCurGray exch def
		} {
			/bwidth  exch def
			/bpside  exch def
			/bstring exch def
			/onbits 0 def  /offbits 0 def
			freq sangle landscape {90 add} if 
				{/ypoint exch def
				 /xpoint exch def
				 /xindex xpoint 1 add 2 div bpside mul cvi def
				 /yindex ypoint 1 add 2 div bpside mul cvi def
				 bstring yindex bwidth mul xindex 8 idiv add get
				 1 7 xindex 8 mod sub bitshift and 0 ne fMNegative {not} if
				 {/onbits  onbits  1 add def 1}
				 {/offbits offbits 1 add def 0}
				 ifelse
				}
				setscreen
			offbits offbits onbits add div fMNegative {1.0 exch sub} if
			/FrameCurGray exch def
		} ifelse
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		fMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode fMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode fMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/rip4 { 
	   
	  
	  kis cis copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  cis mis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  mis yis copy pop 
	  dup dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  yis kis copy pop 
	  3 mul is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
/wbytes { 
      dup dup
      8 gt { pop 8 idiv mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	cvtProc                
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def 
	cvtProc              
	/is width depth wbytes string def
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
fMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/kk cynu magu min yelu min def
		/u kk currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 kk currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch fmConcatProcs settransfer
} bind def
/BITMAPCOLOR { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def
	fMLevel1 {	
		colorsetup
		/is width depth wbytes string def
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is width depth wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	fMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {ip} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/depth 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip pop ris} {gis} {bis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCMYKc { 
	/depth 32 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip4 pop cis} {mis} {yis} {kis} true 4 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYK { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /mis width string def
        /yis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf mis readhexstring pop } 
        { cf yis readhexstring pop } 
        { cf kis readhexstring pop } 
        true 4 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/depth 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop ris gis bis width gray} image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAYc { 
	/depth 32 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop cis mis yis kis width cgray} image
        bitmapsave restore 
        grestore
        } bind def
/cgray { 
        /ww exch def
        /k exch def
        /y exch def
        /m exch def
        /c exch def
        0 1 ww 1 sub { /i exch def c i get m i get y i get k i get CMYKtoRGB
				.144 mul 3 1 roll .587 mul 3 1 roll .299 mul add add
				c i 3 -1 roll floor cvi put } for
        c
 		} bind def
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop width gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /yis width string def
        /mis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf mis readhexstring pop 
          cf yis readhexstring pop 
          cf kis readhexstring pop width cgray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
(5.0) FMVERSION
1 1 0 0 432 379.66 0 1 13 FMDOCUMENT
0 0 /Times-Roman FMFONTDEFINE
1 0 /Times-Italic FMFONTDEFINE
2 1 /Symbol FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
432 379.66 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 0 0 0 1 1 1]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(If              then       has bandwidth to retrieve/write one page during interval 0) 93.19 272.1 T
0 0 0 1 0 0 0 K
1 10 Q
(d) 24.58 350.3 T
1 8 Q
(2) 29.65 347.85 T
(c) 30.15 356.13 T
1 10 Q
(e) 358.94 340.78 T
1 7 Q
(1) 362.19 338.08 T
(k) 366.23 338.08 T
0.12 327.58 97.39 327.32 2 L
0.5 H
2 Z
N
12.43 321.79 12.43 333.19 2 L
N
24.62 320.53 24.62 331.92 2 L
2 H
N
62.8 321.16 62.8 332.55 2 L
0.5 H
N
74.62 321.16 74.62 332.55 2 L
2 H
N
86.67 321.79 86.67 333.19 2 L
0.5 H
N
1 10 Q
(d) 13.12 340.29 T
1 7 Q
(11) 17.69 337.59 T
1 10 Q
(d) 74.53 340.97 T
1 7 Q
(n) 80.11 338.27 T
(1) 83.64 338.27 T
98.88 323.01 98.88 334.4 2 L
2 H
N
1 10 Q
(d) 248.82 341.32 T
1 7 Q
(1) 253.39 338.62 T
(k) 256.43 338.62 T
1 10 Q
(d) 309.54 341.84 T
1 7 Q
(n) 315.11 339.14 T
(k) 319.15 339.14 T
1 10 Q
(d) 296.49 341.84 T
1 7 Q
(n) 302.06 339.14 T
(k) 306.1 339.14 T
1 10 Q
(t) 89.83 341.09 T
1 7 Q
(1) 93.09 338.39 T
1 10 Q
(t) 325.46 340.97 T
1 7 Q
(k) 328.72 338.27 T
0.12 321.79 0.12 333.18 2 L
0.5 H
11 X
N
0 0 0 1 0 0 0 K
0 F
0 X
(0) 0 -180 2.97 313.01 TF
0 0 0 1 0 0 0 K
1 F
(N) 426.77 310.71 T
235.55 327.62 331.64 327.62 2 L
N
248.77 322.64 248.77 334.03 2 L
N
273.8 322.38 273.8 333.77 2 L
N
309.27 322.38 309.27 333.77 2 L
2 H
N
321.23 323.01 321.23 334.4 2 L
0.5 H
N
261.61 322.38 261.61 333.78 2 L
2 H
N
236.97 322.65 236.97 334.05 2 L
N
333.11 323.03 333.11 334.42 2 L
N
0 F
(4) 182.21 309.74 T
1 F
(n) 193.78 309.74 T
0 F
(1) 204.72 309.74 T
(+) 199.03 309.74 T
2 F
(\050) 190.95 309.74 T
(\051) 208.72 309.74 T
(\327) 187.46 309.74 T
37.06 320.73 37.06 332.13 2 L
0.5 H
N
0 F
(2) 84.03 311.11 T
1 F
(n) 95.6 311.11 T
0 F
(1) 106.54 311.11 T
(+) 100.85 311.11 T
2 F
(\050) 92.77 311.11 T
(\051) 110.54 311.11 T
(\327) 89.28 311.11 T
37.77 322.79 37.77 336.41 48.47 336.41 48.47 322.79 4 Y
7 X
V
1 10 Q
0 X
(s) 239.1 343.05 T
1 8 Q
(k) 243.3 339.6 T
274.65 323.12 274.65 336.75 285.36 336.75 285.36 323.12 4 Y
7 X
V
297.45 323.48 297.45 334.88 2 L
0 X
N
1 10 Q
(w) 0.78 365.88 T
0 7 Q
(1) 7.98 363.03 T
(+) 8.8 369.37 T
1 10 Q
(w) 12.6 365.19 T
0 7 Q
(2) 19.8 362.34 T
(+) 19.17 369.68 T
1 10 Q
(w) 419.1 367.38 T
1 7 Q
(N) 426.44 364.53 T
0 F
(+) 427.53 374.87 T
1 10 Q
(w) 181.92 369.41 T
1 7 Q
(N) 187.9 365.56 T
(k) 188.76 356.99 T
0 F
(-) 187.76 361.68 T
(-) 188.93 361.68 T
(-) 190.09 361.68 T
(-) 190.66 361.68 T
1 10 Q
(s) 2.93 341.38 T
1 7 Q
(1) 7.12 338.78 T
1 10 Q
(d) 24.9 340.11 T
1 7 Q
(11) 30.47 337.42 T
99.59 327.74 197.65 327.33 2 L
N
111.67 322.21 111.67 333.6 2 L
N
123.86 320.95 123.86 332.34 2 L
2 H
N
160.04 321.58 160.04 332.97 2 L
0.5 H
N
148.4 320.96 148.4 332.35 2 L
2 H
N
171.86 321.58 171.86 332.97 2 L
N
183.91 322.21 183.91 333.6 2 L
0.5 H
N
1 10 Q
(e) 172.19 341.39 T
1 7 Q
(n) 176.93 338.69 T
(1) 180.97 338.69 T
1 10 Q
(e) 159 340.89 T
1 7 Q
(n) 163.75 338.19 T
(1) 167.79 338.19 T
197.65 321.38 197.65 332.77 2 L
2 H
N
1 10 Q
(u) 186.05 341.51 T
1 7 Q
(1) 191.35 338.81 T
135.8 321.15 135.8 332.55 2 L
0.5 H
N
136.51 323.2 136.51 336.83 147.21 336.83 147.21 323.2 4 Y
7 X
V
1 10 Q
0 X
(s) 102.2 339.7 T
1 7 Q
(1) 106.39 337.1 T
1 10 Q
(e) 124.11 340.28 T
1 7 Q
(11) 128.85 337.58 T
1 10 Q
(e) 407.99 341.9 T
1 7 Q
(n) 410.74 339.2 T
(k) 414.77 339.2 T
1 10 Q
(e) 394.76 341.9 T
1 7 Q
(n) 398.5 339.2 T
(k) 402.54 339.2 T
1 10 Q
(s) 335.29 340.3 T
1 7 Q
(k) 339.48 337.6 T
1 10 Q
(u) 421.04 342.03 T
1 7 Q
(k) 425.34 339.33 T
331.64 328.12 430.55 327.58 2 L
N
345.24 323.07 345.24 334.46 2 L
N
369.88 322.44 369.88 333.83 2 L
N
406.35 322.44 406.35 333.83 2 L
2 H
N
418.31 323.07 418.31 334.46 2 L
0.5 H
N
357.69 322.44 357.69 333.84 2 L
2 H
N
430.19 323.09 430.19 334.48 2 L
N
370.73 323.18 370.73 336.81 381.44 336.81 381.44 323.18 4 Y
7 X
V
394.54 322.04 394.54 333.44 2 L
0.5 H
0 X
N
0 0 0 1 0 0 0 K
0 F
(1) 11.07 309.56 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(2) 23.62 309.56 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(Time intervals) 373.82 299.02 T
0 0 0 1 0 0 0 K
0 7 Q
(+) 189.32 374.85 T
1 10 Q
(d) 334.77 350.35 T
1 7 Q
(1) 340.35 347.65 T
1 9 Q
(c) 340.35 356.42 T
1 10 Q
(d) 360.11 350.35 T
1 7 Q
(2) 365.68 347.65 T
1 9 Q
(c) 365.68 356.42 T
1 10 Q
(e) 345.56 340.78 T
1 7 Q
(1) 348.8 338.08 T
(k) 352.84 338.08 T
1 10 Q
(d) 262.58 341.7 T
1 7 Q
(1) 267.15 338.99 T
(k) 270.19 338.99 T
1 10 Q
(d) 238.64 351.3 T
1 7 Q
(1) 244.21 348.6 T
1 9 Q
(c) 244.21 357.37 T
1 10 Q
(d) 264.02 352.3 T
1 7 Q
(2) 269.59 349.6 T
1 9 Q
(c) 269.59 358.37 T
1 10 Q
(e) 112.25 339.85 T
1 7 Q
(11) 116.99 337.15 T
1 10 Q
(d) 102.08 349.85 T
1 8 Q
(1) 107.65 346.4 T
(c) 107.65 355.67 T
1 10 Q
(d) 125.54 350.6 T
1 8 Q
(2) 131.18 347.15 T
(c) 131.18 356.42 T
1 10 Q
(d) 1.78 350.8 T
1 8 Q
(1) 7.35 347.35 T
(c) 7.35 356.62 T
(v) 102.58 273.07 T
1 7 Q
(1) 105.43 269.77 T
1 8 Q
(C) 114.14 273.07 T
1 7 Q
(1) 119.95 269.77 T
2 8 Q
(\316) 108.93 273.07 T
1 10 Q
(w) 24.07 364.19 T
0 7 Q
(3) 31.27 361.34 T
(+) 33.51 368.18 T
0 0 0 1 0 0 0 K
(3) 34.32 310.1 T
0 0 0 1 0 0 0 K
1 8 Q
(d) 141.15 271.57 T
(1) 145.67 267.52 T
0 0 0 1 0 0 0 K
0 F
(If              then       has bandwidth to retrieve/write one page during interval 2) 93.15 257.6 T
0 0 0 1 0 0 0 K
1 F
(v) 102.29 258.57 T
1 7 Q
(1) 105.15 255.27 T
1 8 Q
(C) 113.85 258.57 T
0 F
(2) 119.66 254.52 T
2 F
(\316) 108.64 258.57 T
1 F
(d) 142.54 257.07 T
0 F
(2) 147.06 253.02 T
0 0 0 1 0 0 0 K
(If) 93.63 213.6 T
0 0 0 1 0 0 0 K
1 F
(v) 109.22 215.07 T
1 7 Q
(1) 112.07 211.77 T
2 8 Q
(\330) 100.51 215.07 T
1 F
(C) 120.78 215.07 T
1 7 Q
(1) 126.59 211.77 T
2 8 Q
(\316) 115.57 215.07 T
1 F
(d) 148.42 214.07 T
(1) 152.94 210.02 T
0 0 0 1 0 0 0 K
0 F
(If) 93.63 198.6 T
0 0 0 1 0 0 0 K
1 F
(v) 109.73 199.07 T
1 7 Q
(1) 112.58 195.77 T
2 8 Q
(\330) 101.02 199.07 T
1 F
(C) 121.28 199.07 T
0 F
(2) 127.1 195.02 T
2 F
(\316) 116.08 199.07 T
1 F
(d) 148.94 198.57 T
0 F
(2) 153.46 194.52 T
0 0 0 1 0 0 0 K
(then       has bandwidth for one page during interval 2.\050n+1\051) 131.24 214.25 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( then       has bandwidth for one page during interval 2.\050n+2\051) 130.22 198.15 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(If             then) 93.53 113.1 T
0 0 0 1 0 0 0 K
1 F
(v) 101.87 113.07 T
(k) 104.73 109.02 T
(C) 113.62 113.07 T
1 7 Q
(1) 119.43 109.77 T
2 8 Q
(\316) 108.41 113.07 T
1 F
(d) 139.98 113.57 T
(1) 144.5 109.52 T
0 0 0 1 0 0 0 K
0 F
(If) 93.53 100.29 T
(then) 124.36 100.29 T
0 0 0 1 0 0 0 K
1 F
(v) 100.94 100.88 T
(k) 103.79 96.83 T
(C) 112.68 100.88 T
0 F
(2) 118.5 96.83 T
2 F
(\316) 107.48 100.88 T
1 F
(d) 138.29 100.38 T
0 F
(2) 142.8 96.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(     has bandwidth for one page during interval 4.\050n+1\051.\050k-1\051) 139.29 113.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( has bandwidth for one page during interval) 146.14 100.35 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.\050n+1\051.\050k-1\051+2) 290.66 100.8 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(If) 93.63 55.1 T
0 0 0 1 0 0 0 K
1 F
(v) 109.12 55.57 T
(k) 111.98 51.52 T
2 F
(\330) 100.42 55.57 T
1 F
(C) 120.87 55.57 T
1 7 Q
(1) 126.69 52.27 T
2 8 Q
(\316) 115.67 55.57 T
1 F
(d) 147.94 54.57 T
(1) 152.46 50.52 T
0 0 0 1 0 0 0 K
0 F
(If) 92.79 38.6 T
0 0 0 1 0 0 0 K
1 F
(d) 147.37 38.38 T
0 F
(2) 151.89 34.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(then       has bandwidth for one page during interval 4.\050n+1\051.\050k-1\051+2.\050n+1\051) 133.53 54.07 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( then       has bandwidth for one page during interval 4.\050n+1\051.\050k-1\051+2.\050n+2\051) 129.38 38.15 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(.....) 0 -270 197.8 237.52 TF
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.....) 0 -270 198.28 179.52 TF
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.....) 0 -270 198.46 79.02 TF
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.....) 0 -270 199.42 16.52 TF
0 0 0 1 0 0 0 K
0 14 Q
(. . . . . . . . . . . . . . . . . . . . .   . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 41.06 364.09 T
(. .) 37.41 351.59 T
(           . . . . .) 161.95 349.09 T
(.........) 203.31 326.59 T
(...) 136.51 327.2 T
(...) 38.34 326.79 T
(...) 274.36 327.44 T
0 7 Q
(4) 218.29 310.33 T
1 F
(n) 229.86 310.33 T
0 F
(1) 240.8 310.33 T
(+) 235.1 310.33 T
2 F
(\050) 227.03 310.33 T
(\051) 244.8 310.33 T
1 F
(k) 255.2 310.33 T
0 F
(1) 265.42 310.33 T
(\320) 260.17 310.33 T
2 F
(\050) 252.37 310.33 T
(\051) 269.42 310.33 T
(\327) 223.53 310.33 T
(\327) 248.88 310.33 T
51.62 321.03 51.62 332.42 2 L
2 H
N
1 10 Q
(d) 47.38 337.03 T
1 6 Q
(n) 53.11 335.08 T
(11) 58.86 335.08 T
0 F
(\320) 56.36 335.08 T
1 10 Q
(d) 49.33 350.3 T
1 9 Q
(n) 54.9 346.1 T
1 8 Q
(c) 54.9 356.13 T
1 10 Q
(d) 63.53 339.72 T
1 7 Q
(n) 67.86 336.27 T
(1) 71.39 336.27 T
1 10 Q
(d) 145.13 337.03 T
1 6 Q
(n) 150.86 335.08 T
(11) 156.61 335.08 T
0 F
(\320) 154.11 335.08 T
0 14 Q
(. .) 135.66 351.59 T
286.36 322.88 286.36 334.28 2 L
N
1 10 Q
(d) 146.08 349.55 T
1 9 Q
(n) 151.65 345.35 T
1 8 Q
(c) 151.65 355.38 T
1 10 Q
(d) 285.08 352.3 T
1 9 Q
(n) 290.65 348.1 T
1 8 Q
(c) 290.65 358.13 T
1 10 Q
(d) 282.49 341.03 T
1 6 Q
(n) 288.21 336.83 T
(1) 293.96 336.83 T
(k) 297.24 336.83 T
0 F
(\320) 291.46 336.83 T
0 14 Q
(. .) 273.91 352.09 T
382.44 322.69 382.44 334.09 2 L
N
(...) 370.61 327.69 T
1 10 Q
(d) 382.83 350.8 T
1 9 Q
(n) 388.4 346.6 T
1 8 Q
(c) 388.4 356.63 T
1 10 Q
(e) 380.65 339.53 T
1 6 Q
(n) 385.55 335.33 T
(1) 391.3 335.33 T
(k) 394.58 335.33 T
0 F
(\320) 388.8 335.33 T
0 14 Q
(. .) 372.16 351.59 T
0 0 0 1 0 0 0 K
0 8 Q
(If              then       has bandwidth to retrieve/write one page during interval 2.\050n-1\051) 93.15 229.6 T
0 0 0 1 0 0 0 K
1 F
(v) 102.29 230.57 T
1 7 Q
(1) 105.15 227.27 T
1 8 Q
(C) 113.85 230.57 T
(n) 119.66 226.52 T
2 F
(\316) 108.64 230.57 T
1 F
(d) 142.54 230.57 T
(n) 147.06 226.52 T
0 0 0 1 0 0 0 K
0 F
(If) 93.63 173.1 T
0 0 0 1 0 0 0 K
1 F
(v) 109.73 173.57 T
1 7 Q
(1) 112.58 170.27 T
2 8 Q
(\330) 101.02 173.57 T
1 F
(C) 121.28 173.57 T
(n) 127.1 169.52 T
2 F
(\316) 116.08 173.57 T
0 0 0 1 0 0 0 K
0 F
( then       has bandwidth for one page during interval 4.n) 130.22 172.65 T
0 0 0 1 0 0 0 K
1 F
(d) 149.54 172.57 T
(n) 154.06 168.52 T
0 0 0 1 0 0 0 K
0 12 Q
(...............) 0 -90 198.28 167.02 TF
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
(If              then       has bandwidth for one page during interval 4.\050n+1\051.\050k-1\051+2.\050n-1\051) 93.15 70.1 T
0 0 0 1 0 0 0 K
1 F
(v) 102.2 71.07 T
(k) 105.05 67.02 T
(C) 113.94 71.07 T
(n) 119.76 67.02 T
2 F
(\316) 108.74 71.07 T
1 F
(d) 142.54 71.07 T
(n) 147.06 67.02 T
0 0 0 1 0 0 0 K
0 F
(If) 93.63 7.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( then       has bandwidth for one page during interval 4.\050n+1\051.\050k-1\051+4.n) 131.72 7.15 T
0 0 0 1 0 0 0 K
1 F
(d) 151.04 7.07 T
(n) 155.56 3.02 T
(v) 108.8 39.07 T
(k) 111.65 35.02 T
2 F
(\330) 100.1 39.07 T
1 F
(C) 120.54 39.07 T
0 F
(2) 126.36 35.02 T
2 F
(\316) 115.34 39.07 T
1 F
(v) 110.3 8.32 T
(k) 113.15 4.27 T
2 F
(\330) 101.6 8.32 T
1 F
(C) 122.04 8.32 T
(n) 127.86 4.27 T
2 F
(\316) 116.84 8.32 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndDocument
 @endspecial 1110 4291 a Ft(Figure)27 b(8:)36 b(System)28
b(load)f(yielded)g(b)n(y)h(SA)-7 b(T2MigSc.)1908 5656
y(11)p eop
%%Page: 12 13
12 12 bop 0 90 a Ft(the)28 b(system)f(has)g(0)h(memory)e(frames)h(a)n
(v)-5 b(ailable)27 b(at)g(that)h(instan)n(t:)1379 277
y(F)-7 b(or)27 b Fo(i)c Fl(2)h(f)p Ft(2)p Fo(;)14 b Ft(4)p
Fo(;)g Ft(6)p Fo(;)g(:)g(:)g(:)d(;)j(N)9 b Fl(g)p Fo(;)36
b(M)2341 289 y Fk(i)2391 277 y Ft(=)23 b(0)0 463 y(Dashed)f(time)g
(instan)n(ts)g(denote)f(that)i(the)f(system)f(has)h(at)f(least)h(one)f
(memory)g(frame)h(a)n(v)-5 b(ailable)20 b(at)i(that)g(instan)n(t)g
(\(instan)n(t)0 592 y(0)27 b(in)h(Figure)f(8\):)1815
722 y Fo(M)1896 734 y Fn(0)1956 722 y Fo(>)22 b Ft(0)0
886 y(Thin)28 b(time)g(instan)n(ts)f(\(Figure)h(8\))f(denote)h(that)f
(the)h(system)g(has)f(only)g(1)g(memory)g(frame)g(a)n(v)-5
b(ailable)26 b(at)i(that)g(instan)n(t:)1308 1072 y(F)-7
b(or)27 b Fo(i)c Fl(2)g(f)p Ft(1)p Fo(;)14 b Ft(3)p Fo(;)g
Ft(5)p Fo(;)g(:)g(:)g(:)d(;)j(N)28 b Fl(\000)18 b Ft(1)p
Fl(g)p Fo(;)36 b(M)2413 1084 y Fk(i)2463 1072 y Ft(=)22
b(1)0 1258 y(Lab)r(els)g Fo(w)316 1270 y Fk(i)344 1258
y Fo(;)14 b(s)420 1270 y Fk(i)448 1258 y Fo(;)g(d)528
1270 y Fk(i)556 1258 y Fo(;)g(t)623 1270 y Fk(i)650 1258
y Fo(;)g(u)735 1270 y Fk(i)762 1258 y Fo(;)g(d)842 1270
y Fk(ij)901 1258 y Fo(;)g(e)977 1270 y Fk(ij)1058 1258
y Ft(on)22 b(time)h(in)n(terv)-5 b(als)22 b(\(Figure)h(8\))g(denote)f
(disk)h(driv)n(es)e(with)j(a)n(v)-5 b(ailable)21 b(bandwidth)j(during)0
1388 y(the)32 b(in)n(terv)-5 b(al.)47 b(A)31 b(sup)r(erscript)g(+)g
(denotes)g(that)g(the)h(disk)f(has)g(a)n(v)-5 b(ailable)30
b(bandwidth)h(to)g(retriev)n(e/write)f(at)h(least)f(one)0
1517 y(page.)62 b(A)37 b(lab)r(el)f(without)h(a)f(sup)r(erscript)g
(denotes)g(bandwidth)h(a)n(v)-5 b(ailabilit)n(y)35 b(for)h(exactly)f
(one)h(page)g(retriev)-5 b(al/write.)0 1647 y(A)35 b(sup)r(erscript)g
Fo(c)f Ft(indicates)h(that)g(the)g(bandwidth)h(a)n(v)-5
b(ailabilit)n(y)33 b(dep)r(ends)j(on)e(a)h(condition)f(of)h(the)h(form)
e Fo(v)3543 1659 y Fk(i)3606 1647 y Fl(2)i Fo(C)3756
1659 y Fk(j)3826 1647 y Ft(or)0 1776 y Fl(:)p Fo(v)95
1788 y Fk(i)164 1776 y Fl(2)42 b Fo(C)320 1788 y Fk(j)355
1776 y Ft(,)f(whic)n(h)e(denotes)f(that)h Fo(v)1210 1788
y Fk(i)1276 1776 y Ft(and)f Fl(:)p Fo(v)1543 1788 y Fk(i)1610
1776 y Ft(are)f(disjuncts)i(of)g Fo(C)2284 1788 y Fk(j)2358
1776 y Ft(resp)r(ectiv)n(ely)-7 b(.)68 b(If)39 b(the)g(condition)f(is)g
(satis\014ed,)0 1906 y(then)28 b(the)h(disk)f(has)f(su\016cien)n(t)h
(bandwidth)g(for)g(one)f(retriev)-5 b(al/write;)27 b(otherwise,)g(the)h
(disk)g(do)r(es)g(not)g(ha)n(v)n(e)f(bandwidth)0 2035
y(a)n(v)-5 b(ailable)24 b(during)i(the)g(in)n(terv)-5
b(al.)35 b(T)-7 b(o)26 b(illustrate)f(consider)g(in)n(terv)-5
b(al)25 b(2,)h(there)f(is)h(disk)f(bandwidth)h(a)n(v)-5
b(ailable)25 b(in)h(driv)n(es)e Fo(w)3862 2047 y Fn(3)0
2165 y Ft(and)h Fo(d)202 2177 y Fn(11)273 2165 y Ft(.)36
b(If)26 b Fo(v)453 2177 y Fn(1)514 2165 y Fl(2)d Fo(C)651
2177 y Fn(2)689 2165 y Ft(,)j(then)g(disk)g Fo(d)1140
2177 y Fn(2)1203 2165 y Ft(also)e(has)h(bandwidth)i(a)n(v)-5
b(ailable)24 b(during)h(this)h(in)n(terv)-5 b(al.)36
b(The)25 b(other)g(disk)h(driv)n(es)e(do)0 2294 y(not)k(ha)n(v)n(e)f
(bandwidth)i(a)n(v)-5 b(ailable)27 b(during)h(this)g(in)n(terv)-5
b(al.)38 b(The)29 b(system)f(load)f(for)h(in)n(terv)-5
b(al)27 b(2)h(is)g(as)g(follo)n(ws:)37 b Fo(M)3558 2306
y Fn(2)3619 2294 y Ft(=)23 b(0;)29 b(for)0 2424 y(eac)n(h)24
b Fo(j)k Fl(62)23 b(f)p Fo(w)425 2436 y Fn(3)462 2424
y Fo(;)14 b(d)542 2436 y Fn(11)613 2424 y Fo(;)g(d)693
2436 y Fn(2)730 2424 y Fl(g)p Ft(,)25 b Fo(B)887 2384
y Fk(j)883 2446 y Fn(2)945 2424 y Ft(=)e(0;)i Fo(B)1190
2387 y Fk(w)1238 2395 y Fe(3)1186 2446 y Fn(2)1298 2424
y Fo(>)e Ft(0;)i Fo(B)1543 2387 y Fk(d)1578 2395 y Fe(11)1539
2446 y Fn(2)1666 2424 y Ft(=)d(1;)k(if)f Fo(v)1957 2436
y Fn(1)2019 2424 y Ft(is)g(a)f(disjunct)h(in)g Fo(C)2632
2436 y Fn(2)2695 2424 y Ft(then)g Fo(B)2948 2387 y Fk(d)2983
2395 y Fe(2)2944 2446 y Fn(2)3042 2424 y Ft(=)e(1,)i(otherwise)e
Fo(B)3653 2387 y Fk(d)3688 2395 y Fe(2)3649 2446 y Fn(2)3748
2424 y Ft(=)f(0.)177 2589 y(The)31 b(set)g(of)f(pages)g(to)g(migrate)g
(\(in)h Fo(M)9 b Ft(\))31 b(and)f(the)h(set)g(of)g(pages)e(in)i(memory)
f(that)h(yield)g(the)g(system)f(load)g Fo(A)h Ft(are)0
2719 y(disjoin)n(t.)k(Also,)22 b(all)f(requests)f(in)h
Fo(M)30 b Ft(are)20 b(for)h(di\013eren)n(t)g(pages.)34
b(Therefore,)21 b(the)g(iden)n(tit)n(y)g(of)h(the)f(disk)g(page)f(in)i
(a)e(migration)0 2848 y(sc)n(hedule)27 b(is)h(irrelev)-5
b(an)n(t.)35 b(W)-7 b(e)28 b(th)n(us)g(omit)g(it)g(to)f(simplify)h(the)
g(notation.)p 0 2989 47 4 v 0 3038 4 50 v 43 3038 V 0
3041 47 4 v 177 3336 a(T)-7 b(o)37 b(illustrate)f(the)h(transformation)
f(consider)g(the)h(example)f(in)h(Figure)g(9.)64 b(Note)37
b(that)g(the)g(driv)n(es)f Fo(w)3583 3348 y Fk(j)3656
3336 y Ft(cannot)0 3466 y(participate)c(in)g(an)n(y)g(sc)n(hedule)g
(for)f(a)h(migration)f(b)r(ecause)h(they)h(are)e(neither)h(a)g(source)f
(nor)h(a)g(target)f(of)h(a)g(migration.)0 3595 y(Moreo)n(v)n(er,)26
b(they)j(cannot)g(b)r(e)g(in)n(termediate)f(driv)n(es)g(b)r(ecause)g
(they)h(ha)n(v)n(e)f(bandwidth)h(a)n(v)-5 b(ailable)28
b(only)g(during)g(one)h(time)0 3725 y(in)n(terv)-5 b(al.)65
b(Sc)n(hedules)37 b(of)g(migrations)f(comp)r(ete)h(with)h(eac)n(h)e
(other)g(for)h(disk)g(bandwidth)h(and)f(memory)-7 b(.)64
b(F)-7 b(or)37 b(exam-)0 3854 y(ple,)30 b Fl(f)p Ft(\()p
Fo(d)276 3866 y Fn(1)313 3854 y Fo(;)14 b Ft(0\))p Fo(;)g
Ft(\()p Fo(d)536 3866 y Fn(11)606 3854 y Fo(;)g Ft(1\))p
Fl(g)29 b Ft(\(an)g(alternativ)n(e)f(migration)g(sc)n(hedule)g(for)h
(the)h(request)e(asso)r(ciated)g(with)h Fo(C)3275 3866
y Fn(1)3313 3854 y Ft(\))h(comp)r(etes)f(with)0 3984
y Fl(f)p Ft(\()p Fo(s)113 3996 y Fn(1)150 3984 y Fo(;)14
b Ft(0\))p Fo(;)g Ft(\()p Fo(d)373 3996 y Fn(11)443 3984
y Fo(;)g Ft([1)p Fo(;)g Ft(2]\))p Fo(;)g Ft(\()p Fo(d)791
3996 y Fn(21)861 3984 y Fo(;)g Ft([3)p Fo(;)g Ft(4]\))p
Fo(;)g Ft(\()p Fo(t)1196 3996 y Fn(1)1233 3984 y Fo(;)g
Ft(5\))p Fl(g)23 b Ft(\(an)h(alternativ)n(e)f(migration)f(sc)n(hedule)i
(for)f(the)h(request)f(asso)r(ciated)g(with)h Fo(v)3830
3996 y Fn(1)3868 3984 y Ft(\))0 4113 y(for)f(bandwidth)h(of)f
Fo(d)667 4125 y Fn(11)762 4113 y Ft(at)g(in)n(terv)-5
b(al)23 b(1)g(and)g(for)g(memory)g(at)g(instan)n(t)h(1.)35
b(In)n(tuitiv)n(ely)-7 b(,)24 b(a)f(v)-5 b(ariable)23
b(assignmen)n(t)f(that)i(mak)n(es)0 4243 y Fo(v)40 4255
y Fn(1)105 4243 y Ft(true)k(is)f(equiv)-5 b(alen)n(t)27
b(to)h(sc)n(hedule)f(the)h(migration)f(asso)r(ciated)f(with)i
Fo(v)2336 4255 y Fn(1)2401 4243 y Ft(during)f(in)n(terv)-5
b(als)27 b(6)g(to)h(11.)36 b(This)27 b(assignmen)n(t)0
4372 y(also)c(mak)n(es)h Fo(C)469 4384 y Fn(1)531 4372
y Ft(true.)36 b(Moreo)n(v)n(er,)22 b(the)j(migration)f(asso)r(ciated)f
(with)i Fo(C)2276 4384 y Fn(1)2338 4372 y Ft(can)f(b)r(e)h(sc)n
(heduled)f(during)g(the)h(in)n(terv)-5 b(als)24 b(0)g(and)0
4502 y(1)j(b)r(ecause)g(it)h(w)n(ould)g(neither)f(comp)r(ete)h(for)f
(disk)g(bandwidth)i(nor)d(for)h(memory)g(with)h(the)g(sc)n(hedule)g
(for)f Fo(v)3454 4514 y Fn(1)3491 4502 y Ft(.)177 4667
y(T)-7 b(o)35 b(pro)n(v)n(e)f(that)h(the)h(reduction)f(from)f(SA)-7
b(T)36 b(to)f(the)h(migrations)e(sc)n(heduling)g(problem)h(is)g
(correct,)h(w)n(e)f(start)f(b)n(y)0 4797 y(sho)n(wing)23
b(that)i(if)g(an)f(instance)g(of)h(SA)-7 b(T)25 b(has)e(a)h(solution)g
(then)h(the)g(corresp)r(onding)e(migrations)g(sc)n(heduling)g(instance)
i(has)0 4926 y(a)i(solution.)0 5148 y Fu(Lemma)j(4.1)-7
b(:)72 b Ft(Let)26 b Fo(M)t(;)14 b(A;)g(N)35 b Ft(b)r(e)26
b(the)g(output)g(of)f Fo(S)5 b(AT)12 b Ft(2)p Fo(M)d(ig)s(S)c(c)p
Ft(\()p Fo(C)2204 5160 y Fn(1)2239 5148 y Fo(;)14 b(:)g(:)g(:)g(;)g(C)
2483 5160 y Fk(n)2528 5148 y Fo(;)g(v)2605 5160 y Fn(1)2642
5148 y Fo(;)g(:)g(:)g(:)g(;)g(v)2867 5160 y Fk(k)2908
5148 y Ft(\).)37 b(If)26 b(there)f(is)g(a)h(truth)g(assign-)0
5278 y(men)n(t)g(for)f(v)-5 b(ariables)24 b Fl(f)p Fo(v)757
5290 y Fn(1)794 5278 y Fo(;)14 b(:)g(:)g(:)g(;)g(v)1019
5290 y Fk(k)1060 5278 y Fl(g)25 b Ft(that)h(mak)n(es)e(all)i(clauses)e
Fo(C)2000 5290 y Fn(1)2038 5278 y Fo(;)14 b(:)g(:)g(:)g(;)g(C)2282
5290 y Fk(n)2353 5278 y Ft(true,)26 b(then)g(there)f(is)h(a)f(sc)n
(hedule)g(of)g(migrations)0 5407 y(for)i Fo(M)36 b Ft(on)28
b Fo(A)g Ft(during)f(in)n(terv)-5 b(al)27 b([0)p Fo(;)14
b(N)9 b Ft(].)1908 5656 y(12)p eop
%%Page: 13 14
13 13 bop 122 3802 a @beginspecial 0 @llx 0 @lly 438.700012
@urx 316.149994 @ury 4386 @rwi @setspecial
%%BeginDocument: sera.ps
%
% Frame ps_prolog 5.0, for use with Frame 5.0 products
% This ps_prolog file is Copyright (c) 1986-1995 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameMaker/SGML and FrameViewer as long as this 
% copyright notice is preserved.
%
% FrameMaker users specify the proper paper size for each print job in the
% "Print" dialog's "Printer Paper Size" "Width" and "Height~ fields.  If the
% printer that the PS file is sent to does not support the requested paper
% size, or if there is no paper tray of the proper size currently installed, 
% then the job will not be printed.  The following flag, if set to true, will
% cause the job to print on the default paper in such cases.
/FMAllowPaperSizeMismatch            true def
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to true, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% The following is a set of predefined optimal frequencies and angles for various
% common dpi settings. This is taken from "Advances in Color Separation Using
% PostScript Software Technology," from Adobe Systems (3/13/89 P.N. LPS 0043)
% and corrolated with information which is in various PPD (4.0) files.
%
% The "dpiranges" figure is the minimum dots per inch device resolution which
% can support this setting. The "low" and "high" values are controlled by the
% setting of the FMUseHighFrequencyScreens flag above. The "TDot" flags control
% the use of the "Yellow Triple Dot" feature whereby the frequency id divided by
% three, but the dot function is "trippled" giving a block of 3x3 dots per cell.
%
% PatFreq is a compromise pattern frequency for ps Level 2 printers which is close
% to the ideal WYSIWYG pattern frequency of 9 repetitions/inch but does not beat
% (too badly) against the screen frequencies of any separations for that DPI.
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (5.0) def 
/fMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	fMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto show
	72 220 moveto show
	FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!  Check installation;)
		(also check ~/fminit and ./fminit for old versions) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(Adobe's PostScript Language Reference Manual, 2nd Edition, section H.2.4)
	(says your EPS file is not valid, as it calls X              )
	dup dup (X) search pop exch pop exch pop length 
	5 -1 roll 
	putinterval 
	FMFAILURE
	} def
/fmConcatProcs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin [
	/ALDsave
	/FMdicttop
	/FMoptop
	/FMpointsize
	/FMsaveobject
	/b
	/bitmapsave
	/blut
	/bpside
	/bs
	/bstring
	/bwidth
	/c
	/cf
	/cs
	/cynu
	/depth
	/edown
	/fh
	/fillvals
	/fw
	/fx
	/fy
	/g
	/gfile
	/gindex
	/grnt
	/gryt
	/gstring
	/height
	/hh
	/i
	/im
	/indx
	/is
	/k
	/kk
	/landscape
	/lb
	/len
	/llx
	/lly
	/m
	/magu
	/manualfeed
	/n
	/offbits
	/onbits
	/organgle
	/orgbangle
	/orgbfreq
	/orgbproc
	/orgbxfer
	/orgfreq
	/orggangle
	/orggfreq
	/orggproc
	/orggxfer
	/orgmatrix
	/orgproc
	/orgrangle
	/orgrfreq
	/orgrproc
	/orgrxfer
	/orgxfer
	/pagesave
	/paperheight
	/papersizedict
	/paperwidth
	/pos
	/pwid
	/r
	/rad
	/redt
	/sl
	/str
	/tran
	/u
	/urx
	/ury
	/val
	/width
	/width
	/ws
	/ww
	/x
	/x1
	/x2
	/xindex
	/xpoint
	/xscale
	/xx
	/y
	/y1
	/y2
	/yelu
	/yindex
	/ypoint
	/yscale
	/yy
] { 0 def } forall
/FmBD {bind def} bind def
systemdict /pdfmark known {
	/fMAcrobat true def
	
	/FmPD /pdfmark load def
	
	
	/FmPT /show load def
	
	
	currentdistillerparams /CoreDistVersion get 2000 ge {
	
		
		/FmPD2 /pdfmark load def
		
		
		
		
		
		/FmPA { mark exch /Dest exch 5 3 roll 
				/View [ /XYZ null 6 -2 roll FmDC exch pop null] /DEST FmPD 
		}FmBD
	} {
		
		/FmPD2 /cleartomark load def
		/FmPA {pop pop pop}FmBD
	} ifelse
} {
	
	/fMAcrobat false def
	/FmPD /cleartomark load def
	/FmPD2 /cleartomark load def
	/FmPT /pop load def
	/FmPA {pop pop pop}FmBD
} ifelse
/FmDC {
	transform fMDefaultMatrix itransform cvi exch cvi exch
}FmBD
/FmBx {
	dup 3 index lt {3 1 roll exch} if 
	1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/fMNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		RealSetrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
fMLevel1 { 
	
	
	
	/patScreenDict 7 dict dup begin
		<0f1e3c78f0e1c387> [ 45  { pop } {exch pop} 		.5   2 sqrt] FmBD
		<0f87c3e1f0783c1e> [ 135 { pop } {exch pop}			.5   2 sqrt] FmBD
		<cccccccccccccccc> [ 0   { pop } dup				.5   2	   ] FmBD
		<ffff0000ffff0000> [ 90  { pop } dup				.5   2	   ] FmBD
		<8142241818244281> [ 45  { 2 copy lt {exch} if pop}	dup .75  2 sqrt] FmBD
		<03060c183060c081> [ 45  { pop } {exch pop}			.875 2 sqrt] FmBD
		<8040201008040201> [ 135 { pop } {exch pop}			.875 2 sqrt] FmBD
	end def
} { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} ifelse
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				fMAcrobat not FMPColor graymode and and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not fMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/fMDefaultMatrix matrix defaultmatrix def
/fMatrix2 matrix def
/dpi    72 0 fMDefaultMatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 fMDefaultMatrix dtransform exch atan def
	sangle fMatrix2 rotate 
	fMDefaultMatrix fMatrix2 concatmatrix 
	dup 0 get /sflipx exch def
	    3 get /sflipy exch def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	fMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /fMNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	fMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{papersizefailure} if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{2 dict
		 dup /PageSize [paperwidth paperheight] put
		 manualfeed {dup /ManualFeed manualfeed put} if
		 {setpagedevice} stopped {papersizefailure} if
		}
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			fMNegative {
				1 1 4 { 
					pop { 1 exch sub } fmConcatProcs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		fMNegative {
			{ 1 exch sub } fmConcatProcs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/papersizefailure {
	FMAllowPaperSizeMismatch not
		{
(The requested paper size is not available in any currently-installed tray)
(Edit the PS file to "FMAllowPaperSizeMismatch true" to use default tray)
		 FMFAILURE } if
	} def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYK } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYKGRAY } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
fMLevel1 {
	/fmGetFlip {
		fMatrix2 exch get mul 0 lt { -1 } { 1 } ifelse
	} FmBD
} if
/setPatternMode {
	fMLevel1 {
		2 index patScreenDict exch known {
			pop pop
			patScreenDict exch get aload pop 
			freq 								
			mul									
			5 2 roll							
			fMatrix2 currentmatrix 1 get 0 ne {
				3 -1 roll 90 add 3 1 roll 		
				sflipx 1 fmGetFlip sflipy 2 fmGetFlip neg mul
			} {  								
				sflipx 0 fmGetFlip sflipy 3 fmGetFlip mul 
			} ifelse
			0 lt {exch pop} {pop} ifelse 		
			fMNegative { 
				{neg} fmConcatProcs 			
			} if
			bind
			
			
			
			systemdict /setscreen get exec		
			/FrameCurGray exch def
		} {
			/bwidth  exch def
			/bpside  exch def
			/bstring exch def
			/onbits 0 def  /offbits 0 def
			freq sangle landscape {90 add} if 
				{/ypoint exch def
				 /xpoint exch def
				 /xindex xpoint 1 add 2 div bpside mul cvi def
				 /yindex ypoint 1 add 2 div bpside mul cvi def
				 bstring yindex bwidth mul xindex 8 idiv add get
				 1 7 xindex 8 mod sub bitshift and 0 ne fMNegative {not} if
				 {/onbits  onbits  1 add def 1}
				 {/offbits offbits 1 add def 0}
				 ifelse
				}
				setscreen
			offbits offbits onbits add div fMNegative {1.0 exch sub} if
			/FrameCurGray exch def
		} ifelse
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		fMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode fMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode fMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/rip4 { 
	   
	  
	  kis cis copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  cis mis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  mis yis copy pop 
	  dup dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  yis kis copy pop 
	  3 mul is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
/wbytes { 
      dup dup
      8 gt { pop 8 idiv mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	cvtProc                
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def 
	cvtProc              
	/is width depth wbytes string def
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
fMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/kk cynu magu min yelu min def
		/u kk currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 kk currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch fmConcatProcs settransfer
} bind def
/BITMAPCOLOR { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def
	fMLevel1 {	
		colorsetup
		/is width depth wbytes string def
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is width depth wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	fMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {ip} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/depth 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip pop ris} {gis} {bis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCMYKc { 
	/depth 32 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip4 pop cis} {mis} {yis} {kis} true 4 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYK { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /mis width string def
        /yis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf mis readhexstring pop } 
        { cf yis readhexstring pop } 
        { cf kis readhexstring pop } 
        true 4 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/depth 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop ris gis bis width gray} image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAYc { 
	/depth 32 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop cis mis yis kis width cgray} image
        bitmapsave restore 
        grestore
        } bind def
/cgray { 
        /ww exch def
        /k exch def
        /y exch def
        /m exch def
        /c exch def
        0 1 ww 1 sub { /i exch def c i get m i get y i get k i get CMYKtoRGB
				.144 mul 3 1 roll .587 mul 3 1 roll .299 mul add add
				c i 3 -1 roll floor cvi put } for
        c
 		} bind def
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop width gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /yis width string def
        /mis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf mis readhexstring pop 
          cf yis readhexstring pop 
          cf kis readhexstring pop width cgray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
(5.0) FMVERSION
1 1 0 0 438.7 316.15 0 1 10 FMDOCUMENT
0 0 /Times-Italic FMFONTDEFINE
1 0 /Times-Roman FMFONTDEFINE
2 1 /Symbol FMFONTDEFINE
3 0 /Times-Bold FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
438.7 316.15 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 0 0 0 1 1 1]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(d) 19.07 68.26 T
1 7 Q
(11) 23.59 64.96 T
0 8 Q
(d) 46.07 122.76 T
1 7 Q
(21) 50.59 119.46 T
0 8 Q
(e) 91.24 127.26 T
1 7 Q
(11) 95.09 123.96 T
0 8 Q
(e) 79.59 127.26 T
1 7 Q
(11) 83.45 123.96 T
0 8 Q
(d) 142.59 126.76 T
1 7 Q
(12) 147.11 123.46 T
0 8 Q
(d) 172.89 123.53 T
1 7 Q
(22) 177.41 120.23 T
0 8 Q
(d) 161.75 68.53 T
1 7 Q
(22) 166.27 65.23 T
0 8 Q
(e) 214.35 125.03 T
1 7 Q
(12) 218.2 121.73 T
0 8 Q
(e) 205.29 69.17 T
1 7 Q
(12) 209.15 65.88 T
0 8 Q
(e) 236.34 125.22 T
1 7 Q
(22) 240.2 121.92 T
0 8 Q
(e) 226.4 125.17 T
1 7 Q
(22) 230.26 121.87 T
0 8 Q
(d) 267.8 68.42 T
1 7 Q
(13) 271.82 65.12 T
0 8 Q
(d) 341.23 66.66 T
1 7 Q
(2) 345.75 63.36 T
0 8 Q
(e) 327.95 125.36 T
1 7 Q
(13) 331.81 122.07 T
0 8 Q
(s) 6.18 50.26 T
1 F
(1) 9.59 46.21 T
0 F
(t) 59.59 49.26 T
1 F
(1) 62.26 45.21 T
0 F
(s) 133.43 50.76 T
1 7 Q
(2) 136.84 47.46 T
0 8 Q
(t) 186.19 50.2 T
1 7 Q
(2) 188.87 46.9 T
0 8 Q
(d) 259.43 67.16 T
1 7 Q
(1) 263.95 63.86 T
0 8 Q
(t) 310.23 50.51 T
1 7 Q
(3) 312.9 47.21 T
0 8 Q
(s) 70.68 50.26 T
1 F
(1) 74.09 46.21 T
0 F
(u) 122.29 50.76 T
1 F
(1) 126.59 46.71 T
0 F
(d) 196.98 68.16 T
1 F
(1) 201.5 64.11 T
0 F
(u) 247.15 50.79 T
1 F
(2) 251.46 46.74 T
0 F
(s) 318.37 51.23 T
1 7 Q
(3) 321.79 47.93 T
0 8 Q
(u) 372.74 51.82 T
1 7 Q
(3) 377.05 48.52 T
0 10 Q
(C) 72.9 276.49 T
1 F
(1) 80.17 271.39 T
0 F
(v) 100.8 276.49 T
1 F
(1) 105.62 271.39 T
0 F
(v) 128.78 276.49 T
1 F
(2) 133.6 271.39 T
2 F
(\330) 121.65 276.49 T
0 F
(v) 149.63 276.49 T
1 F
(3) 154.45 271.39 T
2 F
(\332) 113.12 276.49 T
(\332) 141.1 276.49 T
1 F
(=) 90.17 276.49 T
0 F
(C) 72.9 252.8 T
1 F
(2) 80.17 247.7 T
0 F
(v) 100.8 252.8 T
1 F
(1) 105.62 247.7 T
0 F
(v) 121.65 252.8 T
1 F
(2) 126.47 247.7 T
0 F
(v) 149.63 252.8 T
1 F
(3) 154.45 247.7 T
2 F
(\330) 142.5 252.8 T
(\332) 113.12 252.8 T
(\332) 133.97 252.8 T
1 F
(=) 90.17 252.8 T
0 F
(d) 250.14 222.22 T
1 F
(2) 255.79 217.12 T
0 F
(d) 281.17 222.22 T
1 F
(21) 286.82 217.12 T
0 F
(d) 301.82 222.22 T
1 F
(22) 307.47 217.12 T
0 F
(e) 322.47 222.22 T
1 F
(23) 327.29 217.12 T
2 F
(,) 296.82 222.22 T
(,) 317.47 222.22 T
({) 275.66 222.22 T
(}) 338 222.22 T
(\256) 263.29 222.22 T
0 F
(d) 249.21 243.88 T
1 F
(1) 254.85 238.78 T
0 F
(d) 280.23 243.88 T
1 F
(11) 285.88 238.78 T
0 F
(e) 300.88 243.88 T
1 F
(12) 305.7 238.78 T
0 F
(d) 320.7 243.88 T
1 F
(13) 326.35 238.78 T
2 F
(,) 295.88 243.88 T
(,) 315.7 243.88 T
({) 274.72 243.88 T
(}) 337.06 243.88 T
(\256) 262.35 243.88 T
0 F
(s) 266.26 308.66 T
1 F
(1) 270.53 303.56 T
0 F
(t) 295.91 308.66 T
1 F
(1) 299.25 303.56 T
0 F
(u) 309.24 308.66 T
1 F
(1) 314.62 303.56 T
2 F
(,) 304.25 308.66 T
({) 290.4 308.66 T
(}) 320.33 308.66 T
(\256) 278.03 308.66 T
1 12 Q
(\050a\051) 111.36 193.32 T
(\050b\051) 272.04 192.6 T
0 8 Q
(w) 17.59 34.26 T
1 5 Q
(2) 23.23 32.31 T
(+) 23.34 37.3 T
0 8 Q
(w) 27.76 34.21 T
1 5 Q
(3) 33.4 32.26 T
(+) 34.01 37.73 T
0 8 Q
(w) 36.78 34.71 T
1 5 Q
(4) 42.42 32.76 T
(+) 43.53 38.23 T
0 8 Q
(w) 70.18 34.64 T
1 5 Q
(7) 75.82 32.69 T
(+) 75.43 37.68 T
0 8 Q
(w) 80 34.36 T
1 5 Q
(8) 85.64 32.41 T
(+) 85.75 37.4 T
0 8 Q
(w) 49.77 34.17 T
1 5 Q
(5) 54.91 32.22 T
(+) 56.27 38.56 T
0 8 Q
(w) 58.95 34.26 T
1 5 Q
(6) 64.59 32.31 T
(+) 64.2 37.3 T
0 8 Q
(w) 91.33 34.19 T
1 5 Q
(9) 96.97 32.24 T
0 8 Q
(w) 99.75 34.11 T
1 5 Q
(10) 104.39 32.16 T
(+) 106.75 37.15 T
0 8 Q
(w) 111.51 34.37 T
1 5 Q
(11) 116.15 32.42 T
(+) 117.51 37.89 T
0 8 Q
(w) 120.54 34.37 T
1 5 Q
(12) 125.18 32.42 T
(+) 127.04 37.89 T
0 8 Q
(w) 152.77 34.03 T
1 5 Q
(15) 156.91 32.08 T
(+) 0 -270 161 35.21 TF
0 8 Q
(w) 162.31 34.31 T
1 5 Q
(16) 166.45 32.36 T
(+) 0 -270 169.47 37.31 TF
0 8 Q
(w) 130.85 34.14 T
1 5 Q
(13) 136.49 32.19 T
(+) 137.35 37.66 T
0 8 Q
(w) 141.17 34.39 T
1 5 Q
(14) 145.81 32.44 T
(+) 0 -270 149 35.71 TF
0 8 Q
(w) 173.27 34.24 T
1 5 Q
(17) 177.41 32.29 T
0 8 Q
(w) 182.59 34.31 T
1 5 Q
(18) 187.23 32.36 T
(+) 0 -270 190.51 36.21 TF
0 8 Q
(w) 194.09 34.31 T
1 5 Q
(19) 199.73 32.36 T
(+) 200.09 37.4 T
0 8 Q
(w) 203.59 34.31 T
1 5 Q
(20) 209.23 32.36 T
(+) 210.09 37.83 T
0 8 Q
(w) 235.59 34.31 T
1 5 Q
(23) 241.23 32.36 T
(+) 242.09 37.35 T
0 8 Q
(w) 244.35 34.05 T
1 5 Q
(24) 249.99 32.1 T
(+) 250.59 37.3 T
0 8 Q
(w) 215.59 34.31 T
1 5 Q
(21) 221.23 32.36 T
(+) 222.09 37.83 T
0 8 Q
(w) 224.09 34.31 T
1 5 Q
(22) 229.73 32.36 T
(+) 230.59 37.35 T
0 8 Q
(w) 255.58 34.32 T
1 5 Q
(25) 260.72 32.37 T
0 8 Q
(w) 265.09 34.31 T
1 5 Q
(26) 270.23 32.36 T
(+) 271.59 37.35 T
0 8 Q
(w) 276.59 34.31 T
1 5 Q
(27) 282.23 32.36 T
(+) 282.59 37.83 T
0 8 Q
(w) 285.59 34.31 T
1 5 Q
(28) 291.23 32.36 T
(+) 292.09 37.83 T
0 8 Q
(w) 318.59 34.81 T
1 5 Q
(31) 324.23 32.86 T
(+) 324.09 38.97 T
0 8 Q
(w) 326.95 34.31 T
1 5 Q
(32) 332.59 32.36 T
(+) 333.19 37.35 T
0 8 Q
(w) 297.59 34.31 T
1 5 Q
(29) 303.23 32.36 T
(+) 304.09 37.83 T
0 8 Q
(w) 306.59 34.31 T
1 5 Q
(30) 312.23 32.36 T
(+) 313.09 37.35 T
(+) 97.01 37.57 T
(+) 0 -270 180.5 36.89 TF
(+) 261.9 37.93 T
0 8 Q
(w) 338.95 34.31 T
1 5 Q
(33) 344.59 32.36 T
0 8 Q
(w) 348.09 34.31 T
1 5 Q
(34) 353.23 32.36 T
(+) 355.09 37.35 T
0 8 Q
(w) 360.45 34.31 T
1 5 Q
(35) 366.09 32.36 T
(+) 366.26 37.83 T
0 8 Q
(w) 370.09 34.81 T
1 5 Q
(36) 375.73 32.86 T
(+) 375.49 38.19 T
(+) 345.77 37.93 T
0 10 Q
(s) 265.26 287.63 T
1 F
(2) 269.53 282.53 T
0 F
(t) 294.91 287.63 T
1 F
(2) 298.25 282.53 T
0 F
(u) 308.24 287.63 T
1 F
(2) 313.62 282.53 T
2 F
(,) 303.25 287.63 T
({) 289.4 287.63 T
(}) 319.33 287.63 T
(\256) 277.03 287.63 T
0 F
(s) 265.26 265.65 T
1 F
(3) 269.53 260.55 T
0 F
(t) 294.91 265.65 T
1 F
(3) 298.25 260.55 T
0 F
(u) 308.24 265.65 T
1 F
(3) 313.62 260.55 T
2 F
(,) 303.25 265.65 T
({) 289.4 265.65 T
(}) 319.33 265.65 T
(\256) 277.03 265.65 T
0 F
(v) 218.19 307.14 T
1 F
(1) 223.01 302.04 T
(:) 235.83 306.38 T
0 F
(v) 216.06 267.57 T
1 F
(3) 220.88 262.47 T
(:) 233.7 266.81 T
0 F
(C) 215.9 244.89 T
1 F
(1) 223.17 239.79 T
(:) 232.74 243.88 T
0 F
(C) 215.9 219.09 T
1 F
(2) 223.17 213.99 T
(:) 231.48 221.39 T
0 F
(v) 217.06 287.64 T
1 F
(2) 221.88 282.54 T
(:) 234.7 286.88 T
0 8 Q
(w) 6.26 33.71 T
1 5 Q
(1) 11.9 31.76 T
(+) 12.01 36.76 T
0 8 Q
(d) 9.09 68.26 T
1 F
(1) 13.61 64.21 T
0 F
(d) 31.82 68.26 T
1 7 Q
(2) 36.34 64.96 T
0 8 Q
(d) 153.73 66.66 T
1 7 Q
(2) 158.25 63.36 T
0 8 Q
(s) 195.09 50.16 T
1 F
(2) 198.51 46.11 T
0 F
(s) 258.09 50.66 T
1 F
(3) 261.51 46.61 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4.98 96.34 379.38 96.34 2 L
0.5 H
2 Z
N
16.57 92.32 16.57 100.36 2 L
N
27.18 91.88 27.18 99.91 2 L
2 H
N
36.65 91.43 36.65 99.47 2 L
0.5 H
N
46.97 91.88 46.97 99.91 2 L
2 H
N
57.87 92.32 57.87 100.36 2 L
0.5 H
N
68.2 91.88 68.2 99.91 2 L
2 H
N
78.24 92.32 78.24 100.36 2 L
0.5 H
N
3.93 92.9 3.93 100.94 2 L
11 X
N
1 10 Q
0 X
(0) 1.09 83.42 T
(36) 378.54 83.09 T
89.14 92.25 89.14 100.29 2 L
2 H
N
204.27 91.8 204.27 99.84 2 L
0.5 H
N
214.6 92.25 214.6 100.28 2 L
2 H
N
225.5 92.69 225.5 100.73 2 L
0.5 H
N
235.82 92.25 235.82 100.28 2 L
2 H
N
245.86 92.69 245.86 100.73 2 L
0.5 H
N
256.76 92.62 256.76 100.66 2 L
2 H
N
110.87 91.8 110.87 99.84 2 L
N
131.27 92.25 131.27 100.28 2 L
N
141.21 92.69 141.21 100.73 2 L
0.5 H
N
151.54 92.25 151.54 100.28 2 L
2 H
N
161.57 92.69 161.57 100.73 2 L
0.5 H
N
172.48 92.62 172.48 100.66 2 L
2 H
N
276.07 91.8 276.07 99.84 2 L
N
286.39 92.25 286.39 100.28 2 L
0.5 H
N
297.29 92.69 297.29 100.73 2 L
2 H
N
307.62 92.25 307.62 100.28 2 L
0.5 H
N
317.66 92.69 317.66 100.73 2 L
2 H
N
328.56 92.62 328.56 100.66 2 L
0.5 H
N
348.89 92.25 348.89 100.29 2 L
N
359.72 93.7 359.72 101.74 2 L
2 H
N
371.08 92.15 371.08 100.18 2 L
0.5 H
N
265.72 91.89 265.72 99.93 2 L
N
338.35 92.42 338.35 100.46 2 L
2 H
N
181.82 91.89 181.82 99.93 2 L
0.5 H
N
99.89 92.39 99.89 100.43 2 L
N
193.21 92.42 193.21 100.46 2 L
2 H
N
(12) 128.45 82.09 T
(24) 254 84 T
120.6 92.27 120.6 100.31 2 L
0.5 H
N
381.64 92.15 381.64 100.18 2 L
2 H
N
(Time intervals) 379.55 73.04 T
(2) 25.63 82.54 T
(6) 65.75 82.54 T
22.76 79.79 22.76 75.09 2 L
0.5 H
0 Z
N
25.33 79.54 22.76 75.09 20.19 79.54 3 L
N
10.58 73.71 10.58 104.54 22.76 104.54 22.76 79.79 4 L
2 Z
N
42.82 79.79 42.82 75.09 2 L
0 Z
N
45.39 79.54 42.82 75.09 40.26 79.54 3 L
N
32.31 73.71 32.31 104.54 42.82 104.54 42.82 79.79 4 L
2 Z
N
210.01 80.59 210.01 75.89 2 L
0 Z
N
212.58 80.34 210.01 75.89 207.44 80.34 3 L
N
197.83 74.54 197.83 104.54 210.01 104.54 210.01 80.59 4 L
2 Z
N
3 F
(v) 11.09 147.95 T
3 8 Q
(1) 16.09 145.45 T
3 10 Q
(v) 32.4 146.35 T
3 8 Q
(1) 37.4 143.85 T
3 10 Q
(v) 52.41 145.85 T
3 8 Q
(1) 57.41 143.35 T
3 10 Q
(C) 9.98 109.05 T
3 8 Q
(1) 17.2 106.55 T
3 10 Q
(C) 28.9 109.6 T
3 8 Q
(2) 36.12 107.1 T
3 10 Q
(v) 137.4 146.78 T
3 8 Q
(2) 142.4 144.28 T
3 10 Q
(v) 158.42 146.78 T
3 8 Q
(2) 163.42 144.28 T
3 10 Q
(v) 178.01 146.78 T
3 8 Q
(2) 183.01 144.28 T
3 10 Q
(v) 199.98 146.78 T
3 8 Q
(2) 204.98 144.28 T
3 10 Q
(v) 221.48 146.78 T
3 8 Q
(2) 226.48 144.28 T
3 10 Q
(v) 242.01 146.78 T
3 8 Q
(2) 247.01 144.28 T
3 10 Q
(v) 262.08 146.78 T
3 8 Q
(3) 267.08 144.28 T
3 10 Q
(v) 281.66 147.28 T
3 8 Q
(3) 286.66 144.78 T
3 10 Q
(v) 300.77 146.78 T
3 8 Q
(3) 305.77 144.28 T
3 10 Q
(v) 324.17 147.28 T
3 8 Q
(3) 329.17 144.78 T
3 10 Q
(v) 345.67 147.78 T
3 8 Q
(3) 350.67 145.28 T
3 10 Q
(v) 365.73 147.28 T
3 8 Q
(3) 370.73 144.78 T
0 F
(d) 29.59 123.71 T
1 7 Q
(11) 34.11 120.41 T
0 8 Q
(d) 40.59 68.26 T
1 7 Q
(21) 45.11 64.96 T
108.74 137.86 108.74 133.16 2 L
0 Z
N
111.3 137.61 108.74 133.16 106.17 137.61 3 L
N
94.17 131.94 94.17 141.3 108.74 141.3 108.74 137.86 4 L
2 Z
N
3 10 Q
(v) 75.09 147.95 T
3 8 Q
(1) 80.09 145.45 T
3 10 Q
(v) 96.39 146.35 T
3 8 Q
(1) 101.39 143.85 T
3 10 Q
(v) 116.41 145.85 T
3 8 Q
(1) 121.41 143.35 T
88.59 136.25 88.59 131.56 2 L
0 Z
N
91.16 136 88.59 131.56 86.02 136 3 L
N
70.59 55.71 70.59 141.82 88.59 141.82 88.59 136.25 4 L
2 Z
N
128.09 60.41 128.09 55.71 2 L
0 Z
N
130.66 60.16 128.09 55.71 125.52 60.16 3 L
N
128.09 60.41 128.09 141.32 114.09 141.32 114.09 130.56 4 L
2 Z
N
0 F
(e) 101.74 126.76 T
1 7 Q
(21) 105.59 123.46 T
0 8 Q
(e) 112.24 126.26 T
1 7 Q
(21) 116.09 122.96 T
151.09 135.75 151.09 131.06 2 L
0 Z
N
153.66 135.5 151.09 131.06 148.52 135.5 3 L
N
133.09 55.21 133.09 141.32 151.09 141.32 151.09 135.75 4 L
2 Z
N
190.59 59.91 190.59 55.21 2 L
0 Z
N
193.16 59.66 190.59 55.21 188.02 59.66 3 L
N
190.59 59.91 190.59 140.82 176.59 140.82 176.59 130.06 4 L
2 Z
N
235.24 137.36 235.24 132.66 2 L
0 Z
N
237.8 137.11 235.24 132.66 232.67 137.11 3 L
N
220.66 131.44 220.66 140.8 235.24 140.8 235.24 137.36 4 L
2 Z
N
253.59 59.91 253.59 55.21 2 L
0 Z
N
256.16 59.66 253.59 55.21 251.02 59.66 3 L
N
253.59 59.91 253.59 140.82 240.59 140.82 240.59 130.06 4 L
2 Z
N
0 8 Q
(d) 154.59 125.26 T
1 7 Q
(12) 159.11 121.96 T
168.32 79.79 168.32 75.09 2 L
0 Z
N
170.89 79.54 168.32 75.09 165.76 79.54 3 L
N
157.82 73.71 157.82 104.54 168.32 104.54 168.32 79.79 4 L
2 Z
N
43.09 110.41 43.09 105.71 2 L
0 Z
N
45.66 110.16 43.09 105.71 40.52 110.16 3 L
N
28.59 129.21 28.59 141.21 43.09 141.21 43.09 110.41 4 L
2 Z
N
22.59 112.31 22.59 107.61 2 L
0 Z
N
25.16 112.06 22.59 107.61 20.02 112.06 3 L
N
7.09 55.21 7.09 141.71 22.59 141.71 22.59 112.31 4 L
2 Z
N
64.59 57.41 64.59 52.71 2 L
0 Z
N
67.16 57.16 64.59 52.71 62.02 57.16 3 L
N
50.09 129.35 50.09 141.21 64.59 141.21 64.59 57.41 4 L
2 Z
N
168.09 110.91 168.09 106.21 2 L
0 Z
N
170.66 110.66 168.09 106.21 165.52 110.66 3 L
N
153.59 129.71 153.59 141.71 168.09 141.71 168.09 110.91 4 L
2 Z
N
3 10 Q
(C) 153.4 109.6 T
3 8 Q
(2) 160.62 107.1 T
210.09 111.81 210.09 107.11 2 L
0 Z
N
212.66 111.56 210.09 107.11 207.52 111.56 3 L
N
195.59 54.71 195.59 141.21 210.09 141.21 210.09 111.81 4 L
2 Z
N
3 10 Q
(C) 197.48 108.55 T
3 8 Q
(1) 204.7 106.05 T
274.26 79.29 274.26 74.59 2 L
0 Z
N
276.83 79.04 274.26 74.59 271.7 79.04 3 L
N
262.08 73.21 262.08 104.04 274.26 104.04 274.26 79.29 4 L
2 Z
N
3 10 Q
(C) 261.48 108.55 T
3 8 Q
(1) 268.7 106.05 T
274.09 111.81 274.09 107.11 2 L
0 Z
N
276.66 111.56 274.09 107.11 271.52 111.56 3 L
N
258.59 54.71 258.59 141.21 274.09 141.21 274.09 111.81 4 L
2 Z
N
295.23 137.86 295.23 133.16 2 L
0 Z
N
297.8 137.61 295.23 133.16 292.67 137.61 3 L
N
280.67 131.94 280.67 141.3 295.23 141.3 295.23 137.86 4 L
2 Z
N
314.59 60.41 314.59 55.71 2 L
0 Z
N
317.16 60.16 314.59 55.71 312.02 60.16 3 L
N
314.59 60.41 314.59 141.32 300.59 141.32 300.59 130.56 4 L
2 Z
N
0 F
(d) 277.64 124.37 T
1 7 Q
(13) 281.16 121.07 T
0 8 Q
(d) 299.05 124.87 T
1 7 Q
(23) 303.57 121.57 T
0 8 Q
(d) 287.41 124.87 T
1 7 Q
(23) 291.93 121.57 T
338.59 135.75 338.59 131.06 2 L
0 Z
N
341.16 135.5 338.59 131.06 336.02 135.5 3 L
N
320.59 55.21 320.59 141.32 338.59 141.32 338.59 135.75 4 L
2 Z
N
378.09 59.91 378.09 55.21 2 L
0 Z
N
380.66 59.66 378.09 55.21 375.52 59.66 3 L
N
378.09 59.91 378.09 140.82 364.09 140.82 364.09 130.06 4 L
2 Z
N
355.82 79.79 355.82 75.09 2 L
0 Z
N
358.39 79.54 355.82 75.09 353.26 79.54 3 L
N
345.32 73.71 345.32 104.54 355.82 104.54 355.82 79.79 4 L
2 Z
N
355.59 110.91 355.59 106.21 2 L
0 Z
N
358.16 110.66 355.59 106.21 353.02 110.66 3 L
N
341.09 129.71 341.09 141.71 355.59 141.71 355.59 110.91 4 L
2 Z
N
3 10 Q
(C) 340.89 109.6 T
3 8 Q
(2) 348.11 107.1 T
0 F
(e) 339.45 125.36 T
1 7 Q
(13) 343.31 122.07 T
0 8 Q
(e) 349.07 68.01 T
1 7 Q
(23) 352.92 64.71 T
0 8 Q
(e) 358.57 125.51 T
1 7 Q
(23) 362.42 122.21 T
1 12 Q
(\050c\051) 184.04 2.6 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndDocument
 @endspecial 0 4097 a Ft(Figure)27 b(9:)37 b(Example)27
b(of)g(reduction)h(of)f(a)h(SA)-7 b(T)28 b(instance)f(in)n(to)h(a)f
(migrations)f(sc)n(heduling)h(instance.)37 b(\(a\))28
b(SA)-7 b(T)28 b(instance,)0 4227 y(\(b\))g(Corresp)r(onding)e(set)i
Fo(M)36 b Ft(of)28 b(migrations)e(requests,)g(\(c\))j(Corresp)r(onding)
c(system)j(load)f Fo(A)p Ft(.)1908 5656 y(13)p eop
%%Page: 14 15
14 14 bop 0 90 a Fu(Pro)s(of:)79 b Ft(See)27 b(App)r(endix)i(A.)p
988 65 47 4 v 988 115 4 50 v 1031 115 V 988 118 47 4
v 177 275 a(W)-7 b(e)29 b(no)n(w)e(pro)n(v)n(e)g(the)h(other)g
(direction,)g(if)g(the)h(migrations)d(sc)n(heduling)i(instance)g
(yielded)g(b)n(y)g Fo(S)5 b(AT)12 b Ft(2)p Fo(M)d(ig)s(S)c(c)25
b Ft(has)i(a)0 404 y(solution)g(then)h(the)g(input)h(SA)-7
b(T)28 b(instance)f(has)g(a)g(solution.)0 623 y Fu(Lemma)j(4.2)-7
b(:)83 b Ft(Let)30 b Fo(M)t(;)14 b(A;)g(N)39 b Ft(b)r(e)30
b(the)g(output)h(of)f Fo(S)5 b(AT)12 b Ft(2)p Fo(M)d(ig)s(S)c(c)p
Ft(\()p Fo(C)2241 635 y Fn(1)2275 623 y Fo(;)14 b(:)g(:)g(:)g(;)g(C)
2519 635 y Fk(n)2564 623 y Fo(;)g(v)2641 635 y Fn(1)2679
623 y Fo(;)g(:)g(:)g(:)f(;)h(v)2903 635 y Fk(k)2944 623
y Ft(\).)44 b(If)31 b(there)e(is)h(a)g(sc)n(hedule)f(of)0
753 y(migrations)23 b(for)h Fo(M)33 b Ft(on)24 b Fo(A)p
Ft(,)h(then)g(there)f(is)h(a)f(truth)g(assignmen)n(t)g(for)f
Fl(f)p Fo(v)2253 765 y Fn(1)2290 753 y Fo(;)14 b(:)g(:)g(:)g(;)g(v)2515
765 y Fk(k)2556 753 y Fl(g)24 b Ft(that)h(mak)n(es)e(all)h(clauses)f
Fl(f)p Fo(C)3532 765 y Fn(1)3569 753 y Fo(;)14 b(:)g(:)g(:)g(;)g(C)3813
765 y Fk(n)3858 753 y Fl(g)0 882 y Ft(true.)0 1101 y
Fu(Pro)s(of:)79 b Ft(See)27 b(App)r(endix)i(A)p 956 1077
V 956 1126 4 50 v 999 1126 V 956 1129 47 4 v 177 1286
a(W)-7 b(e)32 b(no)n(w)f(generalize)f(the)i(results)f(to)g(ha)n(v)n(e)f
(b)r(oth)i(migrations)e(and)i(replications)e(as)h(alternativ)n(es)f(to)
h(manipulate)0 1415 y(the)d(data)f(placemen)n(t.)0 1635
y Fu(Lemma)j(4.3)-7 b(:)96 b Ft(Let)34 b Fo(M)t(;)14
b(A;)g(N)42 b Ft(b)r(e)34 b(the)f(output)h(of)f Fo(S)5
b(AT)12 b Ft(2)p Fo(M)d(ig)s(S)c(c)p Ft(\()p Fo(C)2274
1647 y Fn(1)2309 1635 y Fo(;)14 b(:)g(:)g(:)g(;)g(C)2553
1647 y Fk(n)2598 1635 y Fo(;)g(v)2675 1647 y Fn(1)2712
1635 y Fo(;)g(:)g(:)g(:)g(;)g(v)2937 1647 y Fk(k)2978
1635 y Ft(\).)54 b(There)33 b(is)g(a)g(sc)n(hedule)g(of)0
1764 y(migrations)26 b(for)h Fo(M)37 b Ft(on)27 b Fo(A)h
Ft(if)g(and)f(only)h(if)g(there)f(is)g(a)h(sc)n(hedule)f(of)g
(replications)g(for)g Fo(M)36 b Ft(on)28 b Fo(A)p Ft(.)0
1983 y Fu(Pro)s(of:)111 b Ft(The)36 b(distinction)f(b)r(et)n(w)n(een)g
(a)g(migration)f(and)h(a)g(replication)f(is)h(the)h(a)n(v)-5
b(ailabilit)n(y)34 b(of)h(the)g(page)g(after)g(it)g(is)0
2113 y(written)28 b(to)g(an)f(in)n(termediate)h(disk.)37
b(F)-7 b(or)27 b(a)g(replication,)g(the)i(system)e(can)h(retriev)n(e)e
(the)i(page)f(from)h(the)g(source)e(disk)i(or)0 2242
y(from)j(an)n(y)f(of)h(the)g(previous)f(in)n(termediate)h(disks.)47
b(F)-7 b(or)30 b(a)h(migration,)f(the)i(system)f(m)n(ust)g(retriev)n(e)
e(the)j(page)e(from)h(the)0 2372 y(preceding)c(in)n(termediate)g(disk.)
37 b(T)-7 b(o)27 b(pro)n(v)n(e)f(the)i(if)g(direction)f(is)h(straigh)n
(tforw)n(ard,)c(w)n(e)k(th)n(us)f(omit)h(it.)177 2537
y(F)-7 b(or)40 b(the)h(other)f(direction,)j(if)e(there)f(is)h(a)f
(replication)f(sc)n(hedule)h(that)h(retriev)n(es)e(a)h(page)g
Fo(a)g Ft(during)g(in)n(terv)-5 b(al)40 b Fo(t)0 2667
y Ft(from)h(a)f(disk)h Fo(d)g Ft(di\013eren)n(t)g(from)f(the)i
(preceding)e(in)n(termediate)g(disk,)k(then)e Fo(d)f
Ft(m)n(ust)g(b)r(e)g(either)g(the)g(source)f(or)g(an-)0
2796 y(other)31 b(previous)g(in)n(termediate)g(disk.)50
b(In)32 b(that)g(case,)g(the)g(I/O)f(op)r(erations)g(of)h(this)g(sc)n
(hedule)f(follo)n(ws)g(this)h(sequence)3840 2766 y Fn(1)3877
2796 y Ft(:)0 2926 y Fo(R)64 2895 y Fk(a)63 2946 y(sour)r(ce)264
2926 y Fo(;)14 b(W)391 2895 y Fk(a)379 2949 y(d)414 2957
y Fe(1)451 2926 y Fo(;:)g(:)g(:)g(;)g(R)686 2895 y Fk(a)685
2949 y(d)720 2957 y Ff(i)p Fd(\000)p Fe(1)823 2926 y
Fo(;)g(W)950 2895 y Fk(a)938 2949 y(d)973 2957 y Ff(i)1003
2926 y Fo(;)g(R)1104 2895 y Fk(a)1103 2949 y(d)1138 2957
y Ff(i)1168 2926 y Fo(:)g(:)g(:)g(;R)1366 2895 y Fk(a)1365
2949 y(d)1400 2957 y Ff(j)r Fd(\000)p Fe(1)1508 2926
y Fo(;)32 b(W)1653 2895 y Fk(a)1641 2949 y(d)1676 2957
y Ff(j)1711 2926 y Fo(;R)1798 2895 y Fk(a)1797 2949 y(d)1838
2926 y Fo(;)14 b(W)1965 2895 y Fk(a)1953 2949 y(d)1988
2957 y Ff(j)r Fe(+1)2093 2926 y Fo(;:)g(:)g(:)p Ft(;)34
b(where)d Fo(d)f Ft(=)g Fo(sour)r(ce)i Ft(or)e Fo(d)h
Ft(=)e Fo(d)3271 2938 y Fk(i)3299 2926 y Ft(.)49 b(Then,)33
b(the)f(sys-)0 3055 y(tem)e(could)e(ha)n(v)n(e)g(a)n(v)n(oided)g(the)i
(I/O)e(op)r(erations)g(after)g(the)i(previous)e(write)h(to)g
Fo(d)g Ft(\(or)g(from)g(the)g(b)r(eginning,)h(if)f Fo(d)h
Ft(is)f(the)0 3185 y(source\))23 b(and)h(b)r(efore)f
Fo(t)p Ft(.)36 b(The)24 b(sc)n(hedule)g(resulting)f(after)g(remo)n
(ving)g(these)h(sup)r(er\015uous)f(I/O)g(op)r(erations)g(w)n(ould)g(ha)
n(v)n(e)g(the)0 3314 y(form:)48 b Fo(R)304 3284 y Fk(a)303
3335 y(sour)r(ce)504 3314 y Fo(;)14 b(W)631 3284 y Fk(a)619
3338 y(d)654 3346 y Fe(1)690 3314 y Fo(;:)g(:)g(:)g(;)g(R)925
3284 y Fk(a)924 3338 y(d)959 3346 y Ff(i)p Fd(\000)p
Fe(1)1062 3314 y Fo(;)g(W)1189 3284 y Fk(a)1177 3338
y(d)1212 3346 y Ff(i)1243 3314 y Fo(;)g(R)1344 3284 y
Fk(a)1343 3338 y(d)1378 3346 y Ff(i)1407 3314 y Fo(;)g(W)1534
3284 y Fk(a)1522 3338 y(d)1557 3346 y Ff(j)r Fe(+1)1663
3314 y Fo(;:)g(:)g(:)p Ft(;)36 b(or)c Fo(R)2013 3284
y Fk(a)2012 3335 y(sour)r(ce)2214 3314 y Fo(;)14 b(W)2341
3284 y Fk(a)2329 3338 y(d)2364 3346 y Ff(j)r Fe(+1)2470
3314 y Fo(;:)g(:)g(:)p Ft(.)53 b(Giv)n(en)33 b(a)g(replication)f(sc)n
(hedule)h(with)0 3444 y(sup)r(er\015uous)f(I/O)f(op)r(erations,)h
(consider)f(the)i(sc)n(hedule)f(resulting)f(from)h(remo)n(ving)f(the)h
(sup)r(er\015uous)g(I/O)f(op)r(erations)0 3573 y(as)c(describ)r(ed)h
(ab)r(o)n(v)n(e.)36 b(It)28 b(is)g(easy)e(to)i(see)f(that)h(the)h(sc)n
(hedule)e(without)h(sup)r(er\015uous)f(op)r(erations)g(retriev)n(es)f
(a)i(page)e(from)0 3703 y(the)i(preceding)f(in)n(termediate)g(disk)g
(\(except)h(for)f(the)h(\014rst)g(retriev)-5 b(al\).)177
3868 y(If)29 b(after)f(writing)g(a)g(page)f(to)h(an)g(in)n(termediate)g
(disk,)g(the)h(replication)e(sc)n(hedule)h(alw)n(a)n(ys)f(retriev)n(es)
f(the)j(page)e(from)0 3997 y(this)32 b(disk.)48 b(Then,)32
b(the)g(system)f(could)g(ha)n(v)n(e)f(sc)n(heduled)i(a)f(migration)f
(instead.)48 b(Therefore,)31 b(if)h(there)f(is)g(a)g(sc)n(hedule)g(of)0
4127 y(replications)26 b(for)i Fo(M)36 b Ft(on)27 b Fo(A)h
Ft(then)g(there)g(is)f(a)g(sc)n(hedule)g(of)h(migrations)e(for)h
Fo(M)37 b Ft(on)27 b Fo(A)p Ft(.)p 2765 4102 V 2765 4152
4 50 v 2808 4152 V 2765 4155 47 4 v 177 4311 a(With)i(Lemmas)e(4.1,)g
(4.2,)f(and)i(4.3,)f(w)n(e)g(conclude)g(the)h(follo)n(wing.)0
4531 y Fu(Lemma)i(4.4)-7 b(:)81 b Ft(Let)30 b Fo(M)t(;)14
b(A;)g(N)38 b Ft(b)r(e)30 b(the)g(output)g(of)f Fo(S)5
b(AT)12 b Ft(2)p Fo(M)d(ig)s(S)c(c)p Ft(\()p Fo(C)2236
4543 y Fn(1)2271 4531 y Fo(;)14 b(:)g(:)g(:)g(;)g(C)2515
4543 y Fk(n)2560 4531 y Fo(;)g(v)2637 4543 y Fn(1)2674
4531 y Fo(;)g(:)g(:)g(:)g(;)g(v)2899 4543 y Fk(k)2940
4531 y Ft(\).)43 b(There)29 b(is)g(a)g(truth)h(assign-)0
4660 y(men)n(t)j(for)g(v)-5 b(ariables)31 b Fl(f)p Fo(v)779
4672 y Fn(1)816 4660 y Fo(;)14 b(:)g(:)g(:)g(;)g(v)1041
4672 y Fk(k)1082 4660 y Fl(g)32 b Ft(that)i(mak)n(es)d(all)i(clauses)f
Fo(C)2059 4672 y Fn(1)2097 4660 y Fo(;)14 b(:)g(:)g(:)f(;)h(C)2340
4672 y Fk(n)2419 4660 y Ft(true)32 b(if)i(and)f(only)f(if)i(there)e(is)
h(a)g(sc)n(hedule)f(of)0 4790 y(migrations/replications)25
b(for)i Fo(M)36 b Ft(on)27 b Fo(A)h Ft(during)f(in)n(terv)-5
b(al)27 b([0)p Fo(;)14 b(N)9 b Ft(].)177 5009 y(It)27
b(is)g(easy)f(to)h(see)g(that)g(the)g(time)h(complexit)n(y)e(of)h
(transformation)e Fo(S)5 b(AT)12 b Ft(2)p Fo(M)d(ig)s(S)c(c)24
b Ft(is)j(p)r(olynomial.)36 b(This)27 b(transfor-)0 5138
y(mation)e(is)h(also)e(a)h(v)-5 b(alid)26 b(reduction)f(from)g(SA)-7
b(T)26 b(to)f(the)h(problem)f(of)h(deciding)f(whether)g(is)h(p)r
(ossible)f(to)g(c)n(hange)g(the)h(data)0 5268 y(placemen)n(t)h(on)h(a)f
(system)g(load)g(\(Lemma)h(4.4\).)36 b(Therefore:)p 0
5330 1560 4 v 92 5384 a Fh(1)127 5407 y Fc(R)180 5384
y Fj(a)180 5430 y(j)242 5407 y Fr(denotes)25 b(that)g(disk)e(page)i
Fc(a)f Fr(is)f(read)h(from)e(disk)h Fc(j)k Fr(and)d Fc(W)1835
5384 y Fj(a)1825 5430 y(j)1896 5407 y Fr(that)h(page)f
Fc(a)g Fr(is)f(written)h(to)h(disk)e Fc(j)t Fr(.)1908
5656 y Ft(14)p eop
%%Page: 15 16
15 15 bop 0 90 a Fu(Theorem)30 b(4.5)-6 b(:)70 b Ft(Deciding)23
b(whether)g(there)g(is)g(a)g(sc)n(hedule)g(to)f(replicate/migrate)f
(\014xed-sized)i(units)g(on)g(a)g(system)g(load)0 220
y Fo(A)28 b Ft(o)n(v)n(er)e(a)h(p)r(erio)r(d)g([0)p Fo(;)14
b(N)9 b Ft(])27 b(is)h(NP-Complete.)177 468 y(The)i(problem)f(of)h(sc)n
(heduling)f(replications/migrations)e(of)i(v)-5 b(ariable-sized)28
b(units)j(includes)e(all)h(instances)f(of)h(this)0 598
y(sc)n(heduling)c(problem)h(for)f(\014xed-sized)g(units.)37
b(Since)27 b(the)g(latter)g(problem)f(is)h(NP-Complete,)f(then)h(the)h
(\014rst)e(one)g(is)h(also)0 727 y(NP-Complete.)0 975
y Fu(Corollary)32 b(1)41 b Fm(De)l(ciding)36 b(whether)f(ther)l(e)g(is)
h(a)f(sche)l(dule)g(to)g(r)l(eplic)l(ate/migr)l(ate)i(obje)l(cts)e(on)g
(a)g(system)g(lo)l(ad)h Fo(A)f Fm(over)h(a)0 1105 y(p)l(erio)l(d)31
b Ft([0)p Fo(;)14 b(N)9 b Ft(])29 b Fm(is)h(NP-Complete.)0
1460 y Fp(5)135 b(Resource)45 b(Sc)l(heduling)0 1707
y Ft(This)35 b(section)g(demonstrates)g(that:)53 b(\(1\))35
b(the)h(computation)f(of)h(a)f(resource)e(sc)n(hedule)i(that)h(supp)r
(orts)f(a)g(co)r(ordinated)0 1837 y(displa)n(y)j(of)i(a)e(presen)n
(tation)g(and)h(yields)g(the)h(minim)n(um)g(latency)f(is)g(NP-Hard,)i
(and)e(\(2\))g(the)h(computation)f(of)g(the)0 1966 y(minim)n(um)g
(memory)e(requiremen)n(ts)g(to)h(displa)n(y)g(a)g(presen)n(tation)f
(within)i(a)e(pre-sp)r(eci\014ed)h(latency)g(is)g(NP-Hard.)68
b(It)0 2096 y(su\016ces)31 b(to)f(sho)n(w)g(that)h(deciding)g(whether)g
(there)f(is)h(a)f(resource)f(sc)n(hedule)i(for)f(a)h(giv)n(en)f(displa)
n(y)g(sc)n(hedule)g(that)h(yields)0 2225 y(a)36 b(one-time-in)n(terv)-5
b(al)35 b(latency)h(is)g(NP-Complete.)62 b(W)-7 b(e)37
b(reduce)e(SA)-7 b(T)37 b(in)n(to)f(this)h(decision)e(problem.)63
b(W)-7 b(e)36 b(\014rst)g(in)n(tro-)0 2355 y(duce)f(a)g(p)r(olynomial)g
(algorithm)f Fm(SA)-6 b(T2R)l(esSc)35 b Ft(that)h(transforms)e(an)n(y)g
(instance)h Fo(C)2718 2367 y Fn(1)2756 2355 y Fo(;)14
b(:)g(:)g(:)f(;)h(C)2999 2367 y Fk(n)3045 2355 y Fo(;)g(v)3122
2367 y Fn(1)3159 2355 y Fo(;)g(:)g(:)g(:)g(;)g(v)3384
2367 y Fk(k)3460 2355 y Ft(of)35 b(SA)-7 b(T)36 b(in)n(to)0
2485 y(an)26 b(instance)h Fl(f)p Fo(P)532 2497 y Fn(0)569
2485 y Fo(;)14 b(:)g(:)g(:)f(;)h(P)806 2497 y Fk(m)p
Fg(\000)p Fn(1)955 2485 y Fl(g)p Fo(;)g Fl(P)7 b Fo(;)14
b(B)t(;)g(C)q(;)g(D)28 b Ft(of)e(the)h(resource)e(sc)n(heduling)h
(problem,)h(i.e.,)g(is)f(there)g(a)h(one-time-in)n(terv)-5
b(al-)0 2614 y(latency)27 b(resource)f(sc)n(hedule)g(that)i
(satis\014es)f(the)g(displa)n(y)g(sc)n(hedule)g Fl(f)p
Fo(P)2276 2626 y Fn(0)2313 2614 y Fo(;)14 b(:)g(:)g(:)g(;)g(P)2551
2626 y Fk(m)p Fg(\000)p Fn(1)2699 2614 y Fl(g)27 b Ft(on)g(a)g(system)g
(with)h Fo(D)h Ft(disk)e(driv)n(es)0 2744 y(eac)n(h)34
b(with)i(bandwidth)g Fo(B)j Ft(and)c(memory)g(capacit)n(y)f
Fo(C)6 b Ft(,)37 b(assuming)d(an)h(initial)h(data)e(placemen)n(t)h
Fl(P)7 b Ft(?)60 b(W)-7 b(e)35 b(then)h(sho)n(w)0 2873
y(that)f(giv)n(en)e(an)h(instance)g Fo(C)921 2885 y Fn(1)959
2873 y Fo(;)14 b(:)g(:)g(:)g(;)g(C)1203 2885 y Fk(n)1248
2873 y Fo(;)g(v)1325 2885 y Fn(1)1362 2873 y Fo(;)g(:)g(:)g(:)g(;)g(v)
1587 2885 y Fk(k)1663 2873 y Ft(of)34 b(SA)-7 b(T,)35
b Fo(S)5 b(AT)12 b Ft(2)p Fo(R)q(esS)5 b(c)p Ft(\()p
Fo(C)2529 2885 y Fn(1)2564 2873 y Fo(;)14 b(:)g(:)g(:)g(;)g(C)2808
2885 y Fk(n)2853 2873 y Fo(;)g(v)2930 2885 y Fn(1)2968
2873 y Fo(;)g(:)g(:)g(:)f(;)h(v)3192 2885 y Fk(k)3233
2873 y Ft(\))35 b(has)f(a)g(solution)g(if)0 3003 y(and)28
b(only)g(if)g Fo(S)5 b(AT)12 b Ft(2)p Fo(M)d(ig)s(S)c(c)p
Ft(\()p Fo(C)987 3015 y Fn(1)1022 3003 y Fo(;)29 b(:)14
b(:)g(:)f(;)29 b(C)1295 3015 y Fk(n)1340 3003 y Fo(;)f(v)1431
3015 y Fn(1)1469 3003 y Fo(;)g(:)14 b(:)g(:)g(;)28 b(v)1722
3015 y Fk(k)1763 3003 y Ft(\))h(has)f(a)f(solution.)38
b(Then,)29 b(b)r(ecause)f(of)g(Lemma)g(4.4,)f(an)h(instance)0
3132 y Fo(C)59 3144 y Fn(1)97 3132 y Fo(;)14 b(:)g(:)g(:)f(;)h(C)340
3144 y Fk(n)386 3132 y Fo(;)g(v)463 3144 y Fn(1)500 3132
y Fo(;)g(:)g(:)g(:)g(;)g(v)725 3144 y Fk(k)786 3132 y
Ft(of)20 b(SA)-7 b(T)21 b(has)f(a)g(solution)g(if)h(and)f(only)g(if)h
Fo(S)5 b(AT)12 b Ft(2)p Fo(R)q(esS)5 b(c)p Ft(\()18 b
Fo(C)2596 3144 y Fn(1)2633 3132 y Fo(;)j(:)14 b(:)g(:)f(;)21
b(C)2890 3144 y Fk(n)2935 3132 y Fo(;)g(v)3019 3144 y
Fn(1)3056 3132 y Fo(;)g(:)14 b(:)g(:)g(;)20 b(v)3294
3144 y Fk(k)3335 3132 y Ft(\))h(has)f(a)g(solution.)177
3297 y(W)-7 b(e)36 b(no)n(w)f(in)n(tro)r(duce)g(the)h(algorithm)e
Fm(SA)-6 b(TR)l(esSc)p Ft(.)59 b(This)35 b(algorithm)g(\014rst)g
(computes)g(the)h(instance)f Fo(M)t(;)14 b(A;)g(N)44
b Ft(=)0 3427 y(SA)-7 b(T2MigSc\()p Fo(C)518 3439 y Fn(1)556
3427 y Fo(;)14 b(:)g(:)g(:)f(;)h(C)799 3439 y Fk(n)845
3427 y Fo(;)g(v)922 3439 y Fn(1)959 3427 y Fo(;)g(:)g(:)g(:)g(;)g(v)
1184 3439 y Fk(k)1225 3427 y Ft(\).)41 b(Based)28 b(on)g(this)h
(instance,)g(it)h(computes)e(the)h(system)g(con\014guration:)38
b(Num)n(b)r(er)0 3556 y(of)20 b(disks)g(\()p Fo(D)r Ft(\),)j(maxim)n
(um)d(n)n(um)n(b)r(er)h(of)f(pages)f(retriev)n(ed/written)g(in)n(to)i
(a)f(disk)g(during)g(a)g(time)h(in)n(terv)-5 b(al)20
b(\()p Fo(B)t Ft(\),)j(and)d(memory)0 3686 y(capacit)n(y)31
b(in)i(pages)e(\()p Fo(C)6 b Ft(\).)52 b(It)33 b(sets)f
Fo(D)i Ft(to)f(the)f(n)n(um)n(b)r(er)g(of)h(disks)f(with)g(a)n(v)-5
b(ailable)31 b(bandwidth)i(in)g Fo(A)g Ft(plus)f(one)g(\()p
Fo(w)3690 3698 y Fn(0)3728 3686 y Ft(,)i(the)0 3815 y(only)27
b(driv)n(e)f(with)i(a)n(v)-5 b(ailable)26 b(bandwidth)h(during)g(in)n
(terv)-5 b(al)27 b(-1\),)g Fo(B)k Ft(to)c(the)h(maxim)n(um)f(n)n(um)n
(b)r(er)g(of)g(disjuncts)h(in)f(a)g(clause)0 3945 y(plus)j(one,)h(and)f
Fo(C)37 b Ft(to)30 b(2)20 b Fl(\001)g Fo(B)25 b Fl(\001)20
b Ft(\()p Fo(D)j Fl(\000)d Ft(1\).)45 b(Then,)31 b(it)g(computes)f(the)
h(displa)n(y)e(sc)n(hedule)h(as)g(follo)n(ws:)41 b(It)31
b(sets)f(the)h(duration)0 4074 y(\()p Fo(m)p Ft(\))g(of)f(the)h(displa)
n(y)f(to)g Fo(N)f Ft(+)20 b Fo(n)h Ft(+)e Fo(k)34 b Ft(and)c(the)h(n)n
(um)n(b)r(er)f(\()p Fo(q)s Ft(\))h(of)g(pages)e(to)h(b)r(e)h(displa)n
(y)n(ed)f(during)g(eac)n(h)f(time)i(in)n(terv)-5 b(al)30
b(to)10 4171 y Fk(C)p 10 4185 52 4 v 19 4233 a Fn(2)72
4204 y Ft(.)37 b(It)28 b(sets)g(the)g(pages)e(displa)n(y)n(ed)h(at)h
(eac)n(h)f(time)h(in)n(terv)-5 b(al)27 b(\(Column)h Fo(P)2294
4216 y Fk(i)2350 4204 y Ft(in)g(T)-7 b(able)27 b(2\))h(so)f(that)h(the)
g(pages)f(that)h(m)n(ust)g(b)r(e)0 4333 y(in)g(memory)f(during)g(the)h
(displa)n(y)f(\(Column)1465 4312 y(^)1451 4333 y Fo(S)1502
4345 y Fk(i)1558 4333 y Ft(in)h(T)-7 b(able)27 b(2\))g(w)n(ould)g
(exhaust)h(the)g(memory)e(capacit)n(y)h(at)g(ev)n(en)g(instan)n(ts)0
4463 y(b)r(et)n(w)n(een)32 b(2)f(and)g Fo(N)41 b Ft(and)31
b(at)g(all)h(instan)n(ts)f(after)g Fo(N)9 b Ft(.)49 b(Also,)32
b(these)g(pages)e(\()2434 4442 y(^)2419 4463 y Fo(S)2470
4475 y Fk(i)2498 4463 y Ft(\))i(w)n(ould)f(require)g
Fo(C)c Fl(\000)21 b Ft(1)31 b(memory)g(frames)0 4592
y(at)i(o)r(dd)f(instan)n(ts)h(b)r(et)n(w)n(een)f(1)h(and)f
Fo(N)9 b Ft(,)34 b(lea)n(ving)d(only)i(one)f(memory)g(frame)g(a)n(v)-5
b(ailable)32 b(for)g(pre-fetc)n(hes)g(or)f(migrations.)0
4722 y(F)-7 b(or)26 b(example,)g(pages)f(displa)n(y)n(ed)g(during)h(in)
n(terv)-5 b(als)25 b(1)h(and)g(2)g(m)n(ust)g(b)r(e)h(in)f(memory)f(at)h
(instan)n(t)h(2)e(to)h(satisfy)g(the)h(displa)n(y)0 4852
y(sc)n(hedule)f(\()376 4831 y(^)361 4852 y Fo(S)412 4864
y Fn(2)473 4852 y Ft(=)d Fo(a)605 4864 y Fk(q)655 4852
y Fo(:)14 b(:)g(:)g(a)810 4864 y Fn(3)p Fk(q)r Fg(\000)p
Fn(1)964 4852 y Ft(\).)37 b(Therefore,)26 b(the)h(displa)n(y)f(sc)n
(hedule)h(demands)f(2)16 b Fl(\001)h Fo(q)26 b Ft(=)d
Fo(C)33 b Ft(memory)26 b(frames)g(at)h(instan)n(t)f(2)0
4981 y(exhausting)h(the)h(memory)f(capacit)n(y)-7 b(.)177
5146 y(Next,)36 b Fm(SA)-6 b(T2R)l(esSc)32 b Ft(computes)i(the)g
(placemen)n(t)f Fl(P)40 b Ft(on)33 b(disk)h(of)f(all)g(pages)g
(referenced)g(b)n(y)g(the)h(displa)n(y)e(sc)n(hedule)0
5276 y(suc)n(h)26 b(that)g(the)h(system)e(neither)h(has)g(to)g
(pre-fetc)n(h)g(nor)f(migrate)g(pages)g(to)h(satisfy)f(the)i(displa)n
(y)e(sc)n(hedule)h(from)g(in)n(terv)-5 b(al)0 5405 y(0)34
b(to)g Fo(N)e Fl(\000)22 b Ft(1.)57 b(F)-7 b(or)33 b(eac)n(h)h
Fo(i)g Fl(2)g Ft([0)p Fo(;)14 b(N)31 b Fl(\000)23 b Ft(1],)36
b(all)e(pages)f(in)1877 5384 y(^)1863 5405 y Fo(S)1914
5417 y Fk(i)p Fn(+1)2049 5405 y Fl(\000)2150 5384 y Ft(^)2136
5405 y Fo(S)2187 5417 y Fk(i)2249 5405 y Ft(can)h(b)r(e)h(retriev)n(ed)
e(during)h(in)n(terv)-5 b(al)33 b Fo(i)p Ft(.)57 b(Also,)36
b(the)1908 5656 y(15)p eop
%%Page: 16 17
16 16 bop 0 90 a Ft(system)29 b(load)g(resulting)f(from)h(retrieving)g
(all)g(pages)f(in)1836 69 y(^)1822 90 y Fo(S)1873 102
y Fk(i)p Fn(+1)2005 90 y Fl(\000)2103 69 y Ft(^)2089
90 y Fo(S)2140 102 y Fk(i)2197 90 y Ft(during)h(in)n(terv)-5
b(al)28 b Fo(i)p Ft(,)i(for)f Fo(i)c Fl(2)i Ft([0)p Fo(;)14
b(N)27 b Fl(\000)20 b Ft(1],)29 b(is)g(iden)n(tical)0
220 y(to)f Fo(A)p Ft(.)39 b(Moreo)n(v)n(er,)26 b(the)j(placemen)n(t)f
(of)g(pages)f(referenced)h(b)n(y)g(the)h(displa)n(y)e(sc)n(hedule)h
(from)g(in)n(terv)-5 b(al)28 b Fo(N)37 b Ft(to)28 b Fo(m)19
b Fl(\000)f Ft(1)28 b(forces)0 349 y(the)e(system)g(to)g(sc)n(hedule)g
(the)g(migrations)f(in)h Fo(M)35 b Ft(b)r(efore)26 b(instan)n(t)g
Fo(N)9 b Ft(.)36 b(F)-7 b(or)25 b(eac)n(h)g Fo(i)e Fl(2)g
Ft([)p Fo(N)t(;)14 b(m)i Fl(\000)f Ft(1],)26 b(the)g(retriev)-5
b(al)25 b(of)h(pages)0 479 y(in)115 458 y(^)101 479 y
Fo(S)152 491 y Fk(i)p Fn(+1)284 479 y Fl(\000)384 458
y Ft(^)370 479 y Fo(S)421 491 y Fk(i)480 479 y Ft(m)n(ust)32
b(b)r(e)g(done)f(during)g(in)n(terv)-5 b(al)31 b Fo(i)g
Ft(b)r(ecause)g(the)h(memory)f(capacit)n(y)f(is)h(exhausted)g(from)g
(instan)n(t)h Fo(N)40 b Ft(to)0 608 y Fo(m)23 b Fl(\000)f
Ft(1,)36 b(making)e(the)g(system)h(unable)f(to)g(pre-fetc)n(h.)57
b(The)34 b(pages)f(that)i(m)n(ust)f(b)r(e)h(in)g(memory)e(\()3204
587 y(^)3189 608 y Fo(S)3240 620 y Fk(i)3268 608 y Ft(\))i(from)f
(instan)n(t)g Fo(N)0 738 y Ft(to)h Fo(m)23 b Fl(\000)f
Ft(1)35 b(to)f(satisfy)g(the)h(displa)n(y)f(sc)n(hedule)h(exhaust)f
(the)h(memory)f(capacit)n(y)-7 b(.)57 b(Therefore,)35
b(if)g(there)g(is)f(not)h(enough)0 867 y(bandwidth)g(to)f(retriev)n(e)f
(a)g(page)h(after)f(instan)n(t)h Fo(N)9 b Ft(,)36 b(the)f(system)f(is)g
(forced)f(to)h(sc)n(hedule)g(a)g(migration)f(to)h(b)r(e)g(able)g(to)0
997 y(retriev)n(e)27 b(the)i(page)f(from)g(other)g(disk)h(driv)n(e.)39
b Fm(Sat2R)l(esSc)28 b Ft(sets)g Fl(P)35 b Ft(so)28 b(that)h(the)g
(system)g(m)n(ust)f(sc)n(hedule)h(the)f(migrations)0
1126 y(in)33 b Fo(M)41 b Ft(asso)r(ciated)32 b(with)h(v)-5
b(ariables)32 b(to)g(satisfy)h(the)g(displa)n(y)f(sc)n(hedule)g(during)
g(in)n(terv)-5 b(als)32 b Fo(N)42 b Ft(to)33 b Fo(N)d
Ft(+)22 b Fo(k)i Fl(\000)e Ft(1.)52 b(F)-7 b(or)32 b(eac)n(h)0
1256 y Fo(i)23 b Fl(2)g Ft([)p Fo(N)t(;)14 b(N)27 b Ft(+)17
b Fo(k)k Fl(\000)c Ft(1],)27 b(only)g(one)g(page)f(in)1336
1235 y(^)1322 1256 y Fo(S)1373 1268 y Fk(i)p Fn(+1)1502
1256 y Fl(\000)1599 1235 y Ft(^)1585 1256 y Fo(S)1636
1268 y Fk(i)1691 1256 y Ft(cannot)h(b)r(e)g(retriev)n(ed)f(during)h(in)
n(terv)-5 b(al)27 b Fo(i)p Ft(;)g(b)r(ecause)g(the)h(bandwidth)0
1385 y(of)d(the)h(disk)e(where)h(it)g(resides)g(is)g(exhausted)f(with)i
(the)f(retriev)-5 b(al)24 b(of)h(other)g(pages)f(in)h(the)h(same)e
(disk.)36 b(F)-7 b(urthermore,)25 b(the)0 1515 y(disk)h(where)g(this)g
(page)f(resides)h(and)g(the)g(disks)g(with)g(bandwidth)h(a)n(v)-5
b(ailable)25 b(during)h(in)n(terv)-5 b(al)25 b Fo(i)h
Ft(are)f(the)i(source)e(and)h(the)0 1644 y(targets,)i(resp)r(ectiv)n
(ely)-7 b(,)28 b(of)h(the)g(migration)e(asso)r(ciated)h(with)h(v)-5
b(ariable)27 b Fo(v)2330 1656 y Fk(i)p Fg(\000)p Fk(N)6
b Fn(+1)2553 1644 y Ft(.)40 b(Similarly)-7 b(,)29 b Fm(Sat2R)l(esSc)f
Ft(sets)g Fl(P)36 b Ft(so)28 b(that)0 1774 y(the)e(system)f(m)n(ust)g
(sc)n(hedule)g(the)h(migrations)e(in)i Fo(M)34 b Ft(asso)r(ciated)24
b(with)i(clauses)e(to)h(satisfy)g(the)h(displa)n(y)f(sc)n(hedule)g
(during)0 1903 y(in)n(terv)-5 b(als)27 b Fo(N)g Ft(+)18
b Fo(k)31 b Ft(to)c Fo(N)g Ft(+)18 b Fo(k)k Ft(+)c Fo(n)g
Fl(\000)g Ft(1)27 b(=)g Fo(m)19 b Fl(\000)f Ft(1.)177
2069 y(F)-7 b(ormally)g(,)27 b(the)h(algorithm)e(SA)-7
b(T2ResSc)28 b(is)f(de\014ned)h(as)f(follo)n(ws:)50 2220
y Fu(SA)-8 b(T2ResSc)50 2349 y(Input:)195 b Fo(C)563
2361 y Fn(1)601 2349 y Fo(;)14 b(:)g(:)g(:)f(;)h(C)844
2361 y Fk(n)890 2349 y Fo(;)27 b(v)980 2361 y Fn(1)1018
2349 y Fo(;)14 b(:)g(:)g(:)f(;)h(v)1242 2361 y Fk(k)50
2479 y Fu(Output:)122 b Fo(D)r(;)14 b(B)t(;)g(C)q(;)g
Fl(f)p Fo(P)908 2491 y Fn(0)946 2479 y Fo(;)g(:)g(:)g(:)f(;)h(P)1183
2491 y Fk(m)p Fg(\000)p Fn(1)1331 2479 y Fl(g)p Fo(;)g
Fl(P)50 2608 y Fu(Metho)s(d:)98 b Ft(\()p Fo(M)t(;)14
b(A;)g(N)9 b Ft(\))28 b(=)f(SA)-7 b(T2MigSc\()p Fo(C)1503
2620 y Fn(1)1541 2608 y Fo(;)14 b(:)g(:)g(:)f(;)h(C)1784
2620 y Fk(n)1830 2608 y Fo(;)g(v)1907 2620 y Fn(1)1944
2608 y Fo(;)g(:)g(:)g(:)g(;)g(v)2169 2620 y Fk(k)2210
2608 y Ft(\))504 2738 y Fo(D)30 b Ft(=)d Fo(N)g Ft(+)18
b(3)g Fl(\001)h Fo(k)i Ft(+)d Fo(n)g Ft(+)g(2)g Fl(\001)h
Fo(n)f Fl(\001)g Fo(k)k Ft(+)c(1)504 2867 y Fo(B)32 b
Ft(=)27 b Fo(max)p Fl(f)g Ft(n)n(um)n(b)r(er)h(of)f(disjuncts)h(in)g
Fo(C)1826 2879 y Fk(j)1908 2867 y Fl(j)23 b Fo(j)28 b
Fl(2)23 b Ft([1)p Fo(;)14 b(n)p Ft(])p Fl(g)k Ft(+)g(1)504
2997 y Fo(C)29 b Ft(=)23 b(2)18 b Fl(\001)g Fo(B)23 b
Fl(\001)18 b Ft(\()p Fo(D)j Fl(\000)d Ft(1\))504 3126
y Fo(m)28 b Ft(=)f Fo(N)g Ft(+)18 b Fo(n)g Ft(+)g Fo(k)504
3256 y Fl(f)p Fo(P)599 3268 y Fn(0)636 3256 y Fo(;)c(:)g(:)g(:)g(;)g(P)
874 3268 y Fk(m)p Fg(\000)p Fn(1)1022 3256 y Fl(g)27
b Ft(b)r(e)h(the)g(displa)n(y)f(sc)n(hedule)g(in)h(column)g
Fo(P)2400 3268 y Fk(i)2455 3256 y Ft(of)g(T)-7 b(able)27
b(2)504 3385 y Fl(P)34 b Ft(b)r(e)28 b(the)g(placemen)n(t)g(of)f(pages)
g(on)g(the)h(disk)f(driv)n(es)g(as)g(de\014ned)h(b)r(elo)n(w)177
3655 y(The)g(placemen)n(t)f(of)h(pages)e(referenced)h(b)n(y)g(the)h
(displa)n(y)f(sc)n(hedule)g(is)h(de\014ned)g(as)f(follo)n(ws:)125
3873 y Fl(\017)41 b Ft(Ev)n(ery)25 b(page)i(resides)g(in)h(one)f(disk)g
(and)h(has)f(no)g(replicas.)125 4063 y Fl(\017)41 b Ft(Set)28
b(the)g(placemen)n(t)f(of)g(disk)h(pages)e(in)i(the)g(displa)n(y)f(sc)n
(hedule)g(as)g(follo)n(ws:)208 4222 y Fu(P)m(ages)32
b(to)f(b)s(e)h(retriev)m(ed)g(b)m(y)g(in)m(terv)-5 b(al)32
b Fl(\000)p Ft(1)27 b(\()1791 4201 y(^)1777 4222 y Fo(S)1828
4234 y Fn(0)1865 4222 y Ft(\):)208 4381 y(Assign)e Fo(a)516
4393 y Fn(1)553 4381 y Fo(;)14 b(:)g(:)g(:)g(;)g(a)782
4393 y Fk(q)844 4381 y Ft(to)26 b(disk)f(driv)n(es)g(di\013eren)n(t)h
(from)f Fo(w)1933 4393 y Fn(0)1997 4381 y Ft(\()p Fo(B)30
b Ft(pages)25 b(on)g(eac)n(h)g(driv)n(e\).)36 b(Because)25
b Fo(D)16 b Fl(\001)f Fo(B)27 b Ft(=)c Fo(q)18 b Ft(+)c
Fo(B)t Ft(,)27 b(the)208 4511 y(only)g(driv)n(e)g(with)h(a)n(v)-5
b(ailable)26 b(bandwidth)i(during)f(in)n(terv)-5 b(al)27
b Fl(\000)p Ft(1)g(is)g Fo(w)2382 4523 y Fn(0)2420 4511
y Ft(.)208 4670 y Fu(P)m(ages)32 b(to)f(b)s(e)h(retriev)m(ed)g(b)m(y)g
(ev)m(en)g(in)m(terv)-5 b(als)32 b(in)f Ft([0)p Fo(;)14
b(N)27 b Fl(\000)18 b Ft(1])27 b(\()2398 4649 y(^)2383
4670 y Fo(S)2434 4682 y Fk(i)p Fn(+1)2565 4670 y Fl(\000)2662
4649 y Ft(^)2648 4670 y Fo(S)2699 4682 y Fk(i)2726 4670
y Fo(;)h Ft(for)f Fo(i)c Fl(2)g(f)p Ft(0)p Fo(;)14 b
Ft(2)p Fo(;)g(:)g(:)g(:)n Fl(g)p Ft(\):)208 4829 y(F)-7
b(or)28 b(the)g(assignmen)n(t)g(of)h(the)g Fo(q)22 b
Fl(\000)c Ft(1)28 b(=)h Fo(B)23 b Fl(\001)c Ft(\()p Fo(D)j
Fl(\000)c Ft(1\))h Fl(\000)g Ft(1)28 b(pages)f(to)i(b)r(e)g(retriev)n
(ed)e(b)n(y)h(ev)n(en)h(time)g(in)n(terv)-5 b(als)27
b(b)r(efore)208 4959 y(instan)n(t)g Fo(N)9 b Ft(,)28
b(w)n(e)f(ha)n(v)n(e)f(t)n(w)n(o)h(cases:)243 5148 y(\(1\))41
b(There)25 b(are)f(three)i(disks)f(\()p Fo(x;)14 b(y)s(;)g(w)1435
5160 y Fk(i)p Fn(+1)1547 5148 y Ft(\))26 b(with)g(a)n(v)-5
b(ailable)24 b(bandwidth)i(during)f(in)n(terv)-5 b(al)24
b Fo(i)i Ft(in)f Fo(A)p Ft(:)36 b(assign)25 b(the)g(\014rst)390
5278 y(\()p Fo(D)16 b Fl(\000)d Ft(3\))g Fl(\001)g Fo(B)29
b Ft(pages)24 b(to)h(driv)n(es)f(di\013eren)n(t)h(from)f
Fo(x;)14 b(y)s(;)g(w)2103 5290 y Fk(i)p Fn(+1)2241 5278
y Ft(\()p Fo(B)29 b Ft(pages)24 b(to)h(eac)n(h)f(driv)n(e\),)h(assign)f
(the)h(next)g Fo(B)18 b Fl(\000)13 b Ft(1)390 5407 y(to)35
b(driv)n(e)e Fo(x)p Ft(,)k(the)e(next)f Fo(B)28 b Fl(\000)22
b Ft(1)34 b(to)h(driv)n(e)e Fo(y)s Ft(,)j(and)e(the)h(last)f(page)g(to)
g Fo(w)2693 5419 y Fk(i)p Fn(+1)2805 5407 y Ft(.)58 b(Then)35
b(driv)n(es)e Fo(x)i Ft(and)f Fo(y)k Ft(w)n(ould)1908
5656 y(16)p eop
%%Page: 17 18
17 17 bop 873 19 2154 4 v 871 148 4 130 v 1010 109 a
Fo(i)p 1173 148 V 398 w(P)1490 121 y Fk(i)p 1778 148
V 2076 88 a Ft(^)2062 109 y Fo(S)2113 121 y Fk(i)p 2420
148 V 2567 88 a Ft(^)2553 109 y Fo(S)2604 121 y Fk(i)p
Fn(+1)2734 109 y Fl(\000)2831 88 y Ft(^)2817 109 y Fo(S)2868
121 y Fk(i)p 3025 148 V 873 152 2154 4 v 871 281 4 130
v 971 242 a Fl(\000)p Ft(1)p 1173 281 V 1778 281 V 2420
281 V 1503 w Fo(a)2625 254 y Fn(1)2676 242 y Fo(:)14
b(:)g(:)g(a)2831 254 y Fk(q)p 3025 281 V 871 411 V 1003
372 a Ft(0)p 1173 411 V 289 w Fo(a)1378 384 y Fn(1)1429
372 y Fo(:)g(:)g(:)g(a)1584 384 y Fk(q)p 1778 411 V 1958
372 a Fo(a)2002 384 y Fn(1)2053 372 y Fo(:)g(:)g(:)f(a)2207
384 y Fk(q)p 2420 411 V 2481 372 a Fo(a)2525 384 y Fk(q)r
Fn(+1)2659 372 y Fo(:)h(:)g(:)g(a)2814 384 y Fn(2)p Fk(q)r
Fg(\000)p Fn(1)p 3025 411 V 871 540 V 1003 501 a Ft(1)p
1173 540 V 230 w Fo(a)1319 513 y Fk(q)1370 501 y Fo(:)g(:)g(:)g(a)1525
513 y Fn(2)p Fk(q)r Fg(\000)p Fn(1)p 1778 540 V 1899
501 a Fo(a)1943 513 y Fn(1)1994 501 y Fo(:)g(:)g(:)f(a)2148
513 y Fn(2)p Fk(q)r Fg(\000)p Fn(1)p 2420 540 V 2506
501 a Fo(a)2550 513 y Fn(2)p Fk(q)2633 501 y Fo(:)h(:)g(:)g(a)2788
513 y Fn(3)p Fk(q)r Fg(\000)p Fn(1)p 3025 540 V 871 670
V 1003 631 a Ft(2)p 1173 670 V 214 w Fo(a)1303 643 y
Fn(2)p Fk(q)1386 631 y Fo(:)g(:)g(:)g(a)1541 643 y Fn(3)p
Fk(q)r Fg(\000)p Fn(1)p 1778 670 V 1892 631 a Fu(a)1938
643 y Fb(q)1982 631 y Fo(:)g(:)g(:)g Fu(a)2139 643 y
Fb(3q)p Fg(\000)p Fb(1)p 2420 670 V 2506 631 a Fo(a)2550
643 y Fn(3)p Fk(q)2633 631 y Fo(:)g(:)g(:)g(a)2788 643
y Fn(4)p Fk(q)r Fg(\000)p Fn(2)p 3025 670 V 871 799 V
1003 760 a Ft(3)p 1173 799 V 171 w Fo(a)1260 772 y Fn(3)p
Fk(q)r Fg(\000)p Fn(1)1429 760 y Fo(:)g(:)g(:)g(a)1584
772 y Fn(4)p Fk(q)r Fg(\000)p Fn(2)p 1778 799 V 1882
760 a Fo(a)1926 772 y Fn(2)p Fk(q)2010 760 y Fo(:)g(:)g(:)g(a)2165
772 y Fn(4)p Fk(q)r Fg(\000)p Fn(2)p 2420 799 V 2464
760 a Fo(a)2508 772 y Fn(4)p Fk(q)r Fg(\000)p Fn(1)2676
760 y Fo(:)g(:)g(:)g(a)2831 772 y Fn(5)p Fk(q)r Fg(\000)p
Fn(2)p 3025 799 V 871 929 V 1003 890 a Ft(4)p 1173 929
V 171 w Fo(a)1260 902 y Fn(4)p Fk(q)r Fg(\000)p Fn(1)1429
890 y Fo(:)g(:)g(:)g(a)1584 902 y Fn(5)p Fk(q)r Fg(\000)p
Fn(2)p 1778 929 V 1821 890 a Fu(a)1867 902 y Fb(3q)p
Fg(\000)p Fb(1)2052 890 y Fo(:)g(:)g(:)g Fu(a)2209 902
y Fb(5q)p Fg(\000)p Fb(2)p 2420 929 V 2713 890 a Fo(:)p
3025 929 V 871 1058 V 1013 1019 a(:)p 1173 1058 V 430
w(:)p 1778 1058 V 600 w(:)p 2420 1058 V 601 w(:)p 3025
1058 V 871 1188 V 1013 1149 a(:)p 1173 1188 V 430 w(:)p
1778 1188 V 600 w(:)p 2420 1188 V 601 w(:)p 3025 1188
V 871 1317 V 986 1278 a(N)p 1173 1317 V 231 w(b)1320
1290 y Fk(q)r Fn(+1)1454 1278 y Fo(:)g(:)g(:)g(b)1601
1290 y Fn(2)p Fk(q)p 1778 1317 V 1924 1278 a Fu(b)1977
1290 y Fb(1)2033 1278 y Fo(:)g(:)g(:)f Fu(b)2196 1290
y Fb(2q)p 2420 1317 V 2515 1278 a Fo(b)2551 1290 y Fn(2)p
Fk(q)r Fn(+1)2718 1278 y Fo(:)h(:)g(:)g(b)2865 1290 y
Fn(3)p Fk(q)p 3025 1317 V 871 1447 V 915 1408 a Fo(N)27
b Ft(+)18 b(1)p 1173 1447 V 134 w Fo(b)1304 1420 y Fn(2)p
Fk(q)r Fn(+1)1471 1408 y Fo(:)c(:)g(:)g(b)1618 1420 y
Fn(3)p Fk(q)p 1778 1447 V 1879 1408 a Fu(b)1932 1420
y Fb(q)p Fn(+)p Fb(1)2078 1408 y Fo(:)g(:)g(:)g Fu(b)2242
1420 y Fb(3q)p 2420 1447 V 2515 1408 a Fo(b)2551 1420
y Fn(3)p Fk(q)r Fn(+1)2718 1408 y Fo(:)g(:)g(:)g(b)2865
1420 y Fn(4)p Fk(q)p 3025 1447 V 871 1576 V 915 1537
a Fo(N)27 b Ft(+)18 b(2)p 1173 1576 V 134 w Fo(b)1304
1549 y Fn(3)p Fk(q)r Fn(+1)1471 1537 y Fo(:)c(:)g(:)g(b)1618
1549 y Fn(4)p Fk(q)p 1778 1576 V 1860 1537 a Fu(b)1913
1549 y Fb(2q)p Fn(+)p Fb(1)2097 1537 y Fo(:)g(:)g(:)f
Fu(b)2260 1549 y Fb(4q)p 2420 1576 V 2713 1537 a Fo(:)p
3025 1576 V 871 1706 V 1013 1667 a(:)p 1173 1706 V 430
w(:)p 1778 1706 V 600 w(:)p 2420 1706 V 601 w(:)p 3025
1706 V 871 1835 V 1013 1796 a(:)p 1173 1835 V 430 w(:)p
1778 1835 V 600 w(:)p 2420 1835 V 601 w(:)p 3025 1835
V 871 1965 V 916 1926 a(m)18 b Fl(\000)g Ft(1)p 1173
1965 V 334 w Fo(:)p 1778 1965 V 600 w(:)p 2420 1965 V
601 w(:)p 3025 1965 V 873 1968 2154 4 v 0 2188 a Ft(T)-7
b(able)30 b(2:)42 b(Displa)n(y)30 b(sc)n(hedule)g(\()p
Fl(f)p Fo(P)1100 2200 y Fn(0)1138 2188 y Fo(;)14 b(:)g(:)g(:)f(;)h(P)
1375 2200 y Fk(m)p Fg(\000)p Fn(1)1524 2188 y Fl(g)p
Ft(\),)31 b(pages)e(required)g(to)i(satisfy)f(the)h(displa)n(y)e(sc)n
(hedule)h(\()3386 2167 y(^)3371 2188 y Fo(S)3422 2200
y Fk(i)3450 2188 y Ft(\),)i(and)e(pages)0 2317 y(that)23
b(m)n(ust)f(b)r(e)h(retriev)n(ed)e(b)n(y)h(in)n(terv)-5
b(al)22 b Fo(i)g Ft(to)g(satisfy)g(the)h(displa)n(y)e(sc)n(hedule)h(\()
2415 2296 y(^)2401 2317 y Fo(S)2452 2329 y Fk(i)p Fn(+1)2572
2317 y Fl(\000)2658 2296 y Ft(^)2645 2317 y Fo(S)2696
2329 y Fk(i)2723 2317 y Ft(\).)35 b(The)23 b(third)f(column)h(is)f
(computed)0 2447 y(as)27 b(follo)n(ws:)421 2426 y(^)407
2447 y Fo(S)458 2459 y Fk(i)508 2447 y Ft(=)c Fo(P)649
2459 y Fk(i)695 2447 y Fl([)c Fo(P)822 2459 y Fk(i)p
Fg(\000)p Fn(1)935 2447 y Ft(,)28 b(for)f(0)c Fo(<)f(i)h(<)f(m)p
Ft(,)28 b(and)1704 2426 y(^)1690 2447 y Fo(S)1741 2459
y Fn(0)1801 2447 y Ft(=)22 b Fo(P)1941 2459 y Fn(0)1979
2447 y Ft(.)390 2715 y(ha)n(v)n(e)h(disk)h(bandwidth)h(a)n(v)-5
b(ailable)22 b(for)i(one)f(page)h(retriev)-5 b(al/write)22
b(eac)n(h.)35 b(And,)25 b(driv)n(e)f Fo(w)3192 2727 y
Fk(i)p Fn(+1)3328 2715 y Ft(w)n(ould)f(ha)n(v)n(e)g(disk)390
2845 y(bandwidth)28 b(a)n(v)-5 b(ailable)27 b(for)g Fo(B)22
b Fl(\000)c Ft(1)27 b(retriev)-5 b(als/writes.)243 3008
y(\(2\))41 b(There)34 b(are)f(t)n(w)n(o)g(disks)h(\()p
Fo(x;)14 b(w)1333 3020 y Fk(i)p Fn(+1)1446 3008 y Ft(\))34
b(with)h(a)n(v)-5 b(ailable)33 b(bandwidth)h(during)g(in)n(terv)-5
b(al)33 b Fo(i)h Ft(in)h Fo(A)p Ft(:)50 b(assign)33 b(the)h(\014rst)390
3137 y(\()p Fo(D)19 b Fl(\000)d Ft(2\))h Fl(\001)f Fo(B)31
b Ft(pages)26 b(to)g(driv)n(es)g(di\013eren)n(t)h(from)f
Fo(x;)14 b(w)2046 3149 y Fk(i)p Fn(+1)2185 3137 y Ft(\()p
Fo(B)32 b Ft(pages)25 b(to)i(eac)n(h)f(driv)n(e\),)g(assign)g(the)h
(last)f(\()p Fo(B)21 b Fl(\000)16 b Ft(1\))390 3267 y(pages)27
b(to)h(driv)n(e)f Fo(x)p Ft(.)39 b(Then)28 b(driv)n(e)f
Fo(x)h Ft(w)n(ould)g(ha)n(v)n(e)f(disk)h(bandwidth)g(a)n(v)-5
b(ailable)27 b(for)g(one)h(page)f(retriev)-5 b(al/write)390
3396 y(and)28 b(driv)n(e)e Fo(w)818 3408 y Fk(i)p Fn(+1)958
3396 y Ft(for)h Fo(B)32 b Ft(retriev)-5 b(als/writes.)208
3592 y Fu(P)m(ages)32 b(to)f(b)s(e)h(retriev)m(ed)g(b)m(y)g(o)s(dd)g
(in)m(terv)-5 b(als)31 b(in)h Ft([0)p Fo(;)14 b(N)26
b Fl(\000)18 b Ft(1])28 b(\()2366 3571 y(^)2352 3592
y Fo(S)2403 3604 y Fk(i)p Fn(+1)2533 3592 y Fl(\000)2630
3571 y Ft(^)2616 3592 y Fo(S)2667 3604 y Fk(i)2694 3592
y Fo(;)g Ft(for)f Fo(i)c Fl(2)g(f)p Ft(1)p Fo(;)14 b
Ft(3)p Fo(;)g(:)g(:)g(:)o Fl(g)p Ft(\):)208 3755 y(The)24
b(assignmen)n(t)f(of)h(the)g Fo(q)k Ft(=)23 b Fo(B)16
b Fl(\001)11 b Ft(\()p Fo(D)j Fl(\000)d Ft(1\))24 b(pages)f(to)h(b)r(e)
h(retriev)n(ed)e(b)n(y)g(o)r(dd)i(time)f(in)n(terv)-5
b(als)23 b(b)r(efore)h(instan)n(t)g Fo(N)33 b Ft(and)208
3884 y(after)28 b(instan)n(t)g(0)h(is)f(as)g(follo)n(ws:)38
b(Let)29 b Fo(x;)14 b(w)1543 3896 y Fk(i)p Fn(+1)1684
3884 y Ft(b)r(e)29 b(the)g(disk)f(driv)n(es)g(with)h(a)n(v)-5
b(ailable)27 b(bandwidth)i(during)f(in)n(terv)-5 b(al)28
b Fo(i)208 4014 y Ft(in)e Fo(A)p Ft(.)37 b(Assign)25
b(the)h(\014rst)g(\()p Fo(D)18 b Fl(\000)d Ft(2\))g Fl(\001)g
Fo(B)30 b Ft(pages)25 b(to)h(driv)n(es)f(di\013eren)n(t)h(from)f
Fo(x;)14 b(w)2646 4026 y Fk(i)p Fn(+1)2785 4014 y Ft(\()p
Fo(B)31 b Ft(pages)24 b(to)i(eac)n(h)f(driv)n(e\),)h(assign)208
4143 y(the)i(next)h(\()p Fo(B)23 b Fl(\000)c Ft(1\))28
b(pages)f(to)i(driv)n(e)e Fo(x)p Ft(,)i(and)g(the)g(last)f(page)f(to)h
Fo(w)2300 4155 y Fk(i)p Fn(+1)2413 4143 y Ft(.)39 b(Then)28
b(driv)n(e)g Fo(x)h Ft(w)n(ould)f(ha)n(v)n(e)f(a)n(v)-5
b(ailable)27 b(disk)208 4273 y(bandwidth)h(for)f(one)g(page)g(retriev)
-5 b(al/write)26 b(and)h(driv)n(e)g Fo(w)2076 4285 y
Fk(i)p Fn(+1)2216 4273 y Ft(for)g Fo(B)22 b Fl(\000)c
Ft(1)27 b(retriev)-5 b(als/writes.)208 4436 y Fu(P)m(ages)32
b(to)f(b)s(e)h(retriev)m(ed)g(during)f Ft([)p Fo(N)t(;)14
b(N)28 b Ft(+)18 b Fo(k)j Fl(\000)d Ft(1])27 b(\()2030
4415 y(^)2016 4436 y Fo(S)2067 4448 y Fk(i)p Fn(+1)2197
4436 y Fl(\000)2294 4415 y Ft(^)2280 4436 y Fo(S)2331
4448 y Fk(i)2359 4436 y Fo(;)h Ft(for)f Fo(i)22 b Fl(2)i
Ft([)p Fo(N)t(;)14 b(N)27 b Ft(+)18 b Fo(k)k Fl(\000)c
Ft(1]\):)208 4598 y(The)27 b(assignmen)n(t)f(of)i(the)g
Fo(q)i Ft(pages)c(to)i(b)r(e)g(retriev)n(ed)e(during)h(eac)n(h)f(in)n
(terv)-5 b(al)27 b Fo(i)g Ft(is)h(as)e(follo)n(ws:)36
b(Let)28 b Fo(t)3371 4610 y Fk(i)p Fg(\000)p Fk(N)6 b
Fn(+1)3593 4598 y Fo(;)14 b(u)3678 4610 y Fk(i)p Fg(\000)p
Fk(N)6 b Fn(+1)208 4728 y Ft(b)r(e)29 b(targets)e(of)i(the)g(migration)
f(request)g(asso)r(ciated)f(to)i Fo(v)2049 4740 y Fk(i)p
Fg(\000)p Fk(N)6 b Fn(+1)2272 4728 y Ft(.)40 b(Assign)29
b(the)g(\014rst)f(\()p Fo(D)22 b Fl(\000)d Ft(3\))g Fl(\001)g
Fo(B)33 b Ft(pages)27 b(to)i(driv)n(es)208 4857 y(di\013eren)n(t)k
(from)h Fl(f)p Fo(t)816 4869 y Fk(i)p Fg(\000)p Fk(N)6
b Fn(+1)1038 4857 y Fo(;)14 b(u)1123 4869 y Fk(i)p Fg(\000)p
Fk(N)6 b Fn(+1)1344 4857 y Fo(;)14 b(w)1440 4869 y Fk(i)p
Fn(+1)1552 4857 y Fl(g)34 b Ft(\()p Fo(B)k Ft(pages)32
b(to)i(eac)n(h)f(driv)n(e\),)h(assign)f(the)h(next)g(page)f(to)g
Fo(s)3504 4869 y Fk(i)p Fg(\000)p Fk(N)6 b Fn(+1)3726
4857 y Ft(,)36 b(the)208 4987 y(next)30 b Fo(B)24 b Fl(\000)c
Ft(1)29 b(to)h Fo(t)774 4999 y Fk(i)p Fg(\000)p Fk(N)6
b Fn(+1)996 4987 y Ft(,)31 b(the)g(next)f Fo(B)24 b Fl(\000)c
Ft(1)29 b(to)h Fo(u)1780 4999 y Fk(i)p Fg(\000)p Fk(N)6
b Fn(+1)2002 4987 y Ft(,)31 b(and)f(the)g(last)g(one)f(to)h
Fo(w)2842 4999 y Fk(i)p Fn(+1)2954 4987 y Ft(.)45 b(Then)30
b(driv)n(es)f Fo(t)3514 4999 y Fk(i)p Fg(\000)p Fk(N)6
b Fn(+1)3766 4987 y Ft(and)208 5116 y Fo(u)256 5128 y
Fk(i)p Fg(\000)p Fk(N)g Fn(+1)512 5116 y Ft(w)n(ould)33
b(ha)n(v)n(e)g(disk)h(bandwidth)h(a)n(v)-5 b(ailable)32
b(for)i(one)f(page)h(retriev)-5 b(al/write)32 b(eac)n(h,)j(driv)n(e)e
Fo(s)3429 5128 y Fk(i)p Fg(\000)p Fk(N)6 b Fn(+1)3686
5116 y Ft(w)n(ould)208 5246 y(ha)n(v)n(e)32 b(exceeded)h(the)h(disk)g
(bandwidth)g(requiremen)n(t)f(b)n(y)g(one)g(page,)i(and)e(driv)n(e)g
Fo(w)2921 5258 y Fk(i)p Fn(+1)3067 5246 y Ft(w)n(ould)g(ha)n(v)n(e)g
(bandwidth)208 5375 y(a)n(v)-5 b(ailable)26 b(for)h Fo(B)c
Fl(\000)18 b Ft(1)27 b(retriev)-5 b(als/writes.)1908
5656 y(17)p eop
%%Page: 18 19
18 18 bop 208 90 a Fu(P)m(ages)32 b(retriev)m(ed)g(during)f
Ft([)p Fo(N)d Ft(+)18 b Fo(k)s(;)c(N)26 b Ft(+)19 b Fo(k)i
Ft(+)d Fo(n)g Fl(\000)g Ft(1])27 b(\()2086 69 y(^)2071
90 y Fo(S)2122 102 y Fk(i)p Fn(+1)2253 90 y Fl(\000)2350
69 y Ft(^)2336 90 y Fo(S)2387 102 y Fk(i)2414 90 y Fo(;)h
Ft(for)f Fo(i)c Fl(2)g Ft([)p Fo(N)k Ft(+)18 b Fo(k)s(;)c(N)27
b Ft(+)18 b Fo(k)k Ft(+)c Fo(n)g Fl(\000)g Ft(1]\):)208
253 y(The)24 b(assignmen)n(t)g(of)h(the)g Fo(q)j Ft(pages)c(to)h(b)r(e)
g(retriev)n(ed)e(during)i(eac)n(h)f(in)n(terv)-5 b(al)24
b Fo(i)h Ft(is)f(as)g(follo)n(ws:)35 b(Let)25 b Fo(x)3345
265 y Fn(1)3383 253 y Fo(;)14 b(:)g(:)g(:)f(;)h(x)3614
265 y Fk(j)3674 253 y Ft(b)r(e)26 b(the)208 382 y(target)k(disk)i(driv)
n(es)e(of)i(the)g(migration)e(request)h(asso)r(ciated)f(to)i
Fo(C)2363 394 y Fk(i)p Fg(\000)p Fk(N)6 b Fg(\000)p Fk(k)q
Fn(+1)2674 382 y Ft(.)49 b(Assign)31 b(the)h(\014rst)f(\()p
Fo(D)23 b Fl(\000)e Fo(j)26 b Fl(\000)21 b Ft(1\))g Fl(\001)g
Fo(B)208 512 y Ft(pages)j(to)h(driv)n(es)f(di\013eren)n(t)h(from)g
Fo(x)1335 524 y Fn(1)1373 512 y Fo(;)14 b(:)g(:)g(:)f(;)h(x)1604
524 y Fk(j)1640 512 y Fo(;)g(w)1736 524 y Fk(i)p Fn(+1)1873
512 y Ft(\()p Fo(B)30 b Ft(pages)24 b(to)h(eac)n(h)f(driv)n(e\),)h(the)
h(next)f(page)g(to)g Fo(d)3425 524 y Fk(i)p Fg(\000)p
Fk(N)6 b Fg(\000)p Fk(k)q Fn(+1)3736 512 y Ft(,)26 b(the)208
641 y(next)33 b Fo(B)27 b Fl(\000)21 b Ft(1)33 b(to)h
Fo(x)806 653 y Fn(1)843 641 y Ft(,)h(the)f(next)g Fo(B)26
b Fl(\000)c Ft(1)33 b(to)g Fo(x)1648 653 y Fn(2)1686
641 y Ft(,)i(and)e(so)g(forth.)54 b(Finally)-7 b(,)35
b(assign)d(the)i(last)f Fo(j)27 b Fl(\000)22 b Ft(1)33
b(pages)g(to)g Fo(w)3765 653 y Fk(i)p Fn(+1)3877 641
y Ft(.)208 771 y(Then,)f(driv)n(es)f Fo(x)744 783 y Fn(1)782
771 y Fo(;)14 b(:)g(:)g(:)f(;)h(x)1013 783 y Fk(j)1080
771 y Ft(w)n(ould)32 b(ha)n(v)n(e)e(disk)h(bandwidth)i(a)n(v)-5
b(ailable)30 b(for)h(one)g(page)g(retriev)-5 b(al/write)30
b(eac)n(h,)i(driv)n(e)208 901 y Fo(d)251 913 y Fk(i)p
Fg(\000)p Fk(N)6 b Fg(\000)p Fk(k)q Fn(+1)594 901 y Ft(w)n(ould)32
b(ha)n(v)n(e)f(exceeded)i(the)f(disk)h(bandwidth)g(requiremen)n(t)e(b)n
(y)h(one)g(page,)h(and)f(driv)n(e)g Fo(w)3541 913 y Fk(i)p
Fn(+1)3686 901 y Ft(w)n(ould)208 1030 y(ha)n(v)n(e)26
b(bandwidth)i(a)n(v)-5 b(ailable)26 b(for)h Fo(B)c Fl(\000)18
b Fo(j)23 b Ft(+)18 b(1)28 b(retriev)-5 b(als/writes.)p
0 1237 47 4 v 0 1287 4 50 v 43 1287 V 0 1290 47 4 v 0
1709 a Fu(Observ)g(ation)31 b(1)42 b Fm(F)-6 b(r)l(om)29
b(the)h(tr)l(ansformation)h Fo(S)5 b(AT)12 b Ft(2)p Fo(R)q(esS)5
b(c)p Fm(,)27 b(we)j(c)l(an)g(observe)h(the)f(fol)t(lowing:)177
1874 y(L)l(et)j Fo(M)t(;)14 b(A;)g(N)42 b Fm(=)33 b Fo(S)5
b(AT)12 b Ft(2)p Fo(M)d(ig)s(S)c(c)p Ft(\()p Fo(C)1317
1886 y Fn(1)1351 1874 y Fo(;)14 b(:)g(:)g(:)g(;)g(C)1595
1886 y Fk(n)1640 1874 y Fo(;)g(v)1717 1886 y Fn(1)1755
1874 y Fo(;)g(:)g(:)g(:)f(;)h(v)1979 1886 y Fk(k)2020
1874 y Ft(\))p Fm(.)50 b(The)34 b(tr)l(ansformation)g
Fo(S)5 b(AT)12 b Ft(2)p Fo(R)q(esS)5 b(c)30 b Fm(pr)l(o)l(duc)l(es)k(a)
f(dis-)0 2004 y(play)e(sche)l(dule)g Fl(f)p Fo(P)596
2016 y Fn(0)633 2004 y Fo(;)14 b(:)g(:)g(:)f(;)h(P)870
2016 y Fk(m)p Fg(\000)p Fn(1)1019 2004 y Fl(g)p Fm(,)29
b(a)h(system)g(c)l(on\014gur)l(ation)g(\()p Fo(B)t(;)14
b(C)q(;)g(D)r Fm(\),)30 b(and)g(an)g(initial)h(data)g(plac)l(ement)f
Fl(P)36 b Fm(such)30 b(that:)56 2236 y(\(1\))42 b(Ther)l(e)32
b(is)h(a)f(r)l(esour)l(c)l(e)g(sche)l(dule)h(for)g Fl(f)p
Fo(P)1496 2248 y Fn(0)1533 2236 y Fo(;)14 b(:)g(:)g(:)f(;)h(P)1770
2248 y Fk(m)p Fg(\000)p Fn(1)1919 2236 y Fl(g)31 b Fm(c)l(onsisting)h
(of)h(a)f(sche)l(dule)h Fo(R)q(et)27 b Ft(=)k Fl(f)3191
2215 y Ft(^)3177 2236 y Fo(S)3228 2248 y Fn(0)3265 2236
y Fo(;)h(:)14 b(:)g(:)g(;)3500 2215 y Ft(^)3486 2236
y Fo(S)3537 2248 y Fk(m)3600 2236 y Fl(g)31 b Fm(\(T)-6
b(able)208 2365 y(2\))30 b(of)i(r)l(etrievals)f(and)g(disc)l(ar)l(ds)
1220 2335 y Fn(2)1289 2365 y Fm(and)g(a)g(sche)l(dule)h(of)f(migr)l
(ations)g(for)h Fo(M)39 b Fm(over)31 b Ft([)p Fl(\000)p
Fo(p;)14 b(N)9 b Ft(])p Fm(.)40 b(Mor)l(e)l(over,)32
b(the)f(system)208 2495 y(lo)l(ad)g(r)l(esulting)e(fr)l(om)h(applying)i
Fo(R)q(et)d Fm(is)h(identic)l(al)h(to)f Fo(A)g Fm(during)g
Ft([0)p Fo(;)14 b(N)9 b Ft(])p Fm(.)56 2691 y(\(2\))42
b Fo(R)q(et)31 b Fm(do)l(es)h(not)f(pr)l(e-fetch)i(p)l(ages.)45
b(Ther)l(efor)l(e)34 b(for)e(any)h(r)l(esour)l(c)l(e)e(sche)l(dule,)j
(for)e(e)l(ach)h(instant)e Fo(i;)i Ft(0)26 b Fl(\024)g
Fo(i)h Fl(\024)f Fo(m)20 b Fl(\000)f Ft(1)p Fm(,)222
2799 y Ft(^)208 2820 y Fo(S)259 2832 y Fk(i)309 2820
y Fl(\022)k Fo(S)448 2832 y Fk(i)475 2820 y Fm(.)56 3016
y(\(3\))42 b(F)-6 b(or)42 b(any)g(r)l(esour)l(c)l(e)f(sche)l(dule)i
(that)f(supp)l(orts)f Fl(f)p Fo(P)1833 3028 y Fn(0)1871
3016 y Fo(;)14 b(:)g(:)g(:)f(;)h(P)2108 3028 y Fk(m)p
Fg(\000)p Fn(1)2256 3016 y Fl(g)p Fm(,)45 b(ther)l(e)d(is)g(no)g
(memory)g(available)j(at)d(instants)208 3146 y Fo(N)t(;)14
b(:)g(:)g(:)f(;)h(m)24 b Fl(\000)f Ft(1)37 b Fm(for)h(either)g(pr)l
(e-fetching)g(or)g(migr)l(ating)f(disk)i(p)l(ages.)61
b(Be)l(c)l(ause,)40 b(for)e(e)l(ach)g Fo(i;)14 b(N)45
b Fl(\024)36 b Fo(i)g Fl(\024)g Fo(m)24 b Fl(\000)f Ft(1)p
Fm(,)208 3275 y Fl(j)245 3254 y Ft(^)231 3275 y Fo(S)282
3287 y Fk(i)309 3275 y Fl(j)g Ft(=)g Fo(C)6 b Fm(.)177
3523 y Ft(W)-7 b(e)28 b(no)n(w)f(sho)n(w)g(that)g(giv)n(en)g(an)g
(instance)h Fo(C)1593 3535 y Fn(1)1630 3523 y Fo(;)14
b(:)g(:)g(:)g(;)g(C)1874 3535 y Fk(n)1919 3523 y Fo(;)g(v)1996
3535 y Fn(1)2034 3523 y Fo(;)g(:)g(:)g(:)f(;)h(v)2258
3535 y Fk(k)2327 3523 y Ft(of)27 b(SA)-7 b(T,)28 b(there)g(is)f(a)g
(one-time-in)n(terv)-5 b(al-latency)0 3653 y(resource)27
b(sc)n(hedule)i(for)f Fo(S)5 b(AT)12 b Ft(2)p Fo(R)q(esS)5
b(c)p Ft(\()p Fo(C)1331 3665 y Fn(1)1366 3653 y Fo(;)14
b(:)g(:)g(:)g(;)g(C)1610 3665 y Fk(n)1655 3653 y Fo(;)g(v)1732
3665 y Fn(1)1770 3653 y Fo(;)g(:)g(:)g(:)f(;)h(v)1994
3665 y Fk(k)2035 3653 y Ft(\))30 b(if)f(and)g(only)f(if)i
Fo(S)5 b(AT)12 b Ft(2)p Fo(M)d(ig)s(S)c(c)p Ft(\()p Fo(C)3164
3665 y Fn(1)3199 3653 y Fo(;)14 b(:)g(:)g(:)f(;)h(C)3442
3665 y Fk(n)3488 3653 y Fo(;)g(v)3565 3665 y Fn(1)3602
3653 y Fo(;)g(:)g(:)g(:)g(;)g(v)3827 3665 y Fk(k)3868
3653 y Ft(\))0 3782 y(has)27 b(a)g(solution.)0 4031 y
Fu(Lemma)j(5.1)-7 b(:)85 b Ft(Let)30 b Fo(M)t(;)14 b(A;)g(N)39
b Ft(b)r(e)31 b(the)f(output)h(of)f Fo(S)5 b(AT)12 b
Ft(2)p Fo(M)d(ig)s(S)c(c)p Ft(\()p Fo(C)2244 4043 y Fn(1)2279
4031 y Fo(;)14 b(:)g(:)g(:)g(;)g(C)2523 4043 y Fk(n)2568
4031 y Fo(;)g(v)2645 4043 y Fn(1)2682 4031 y Fo(;)g(:)g(:)g(:)g(;)g(v)
2907 4043 y Fk(k)2948 4031 y Ft(\).)45 b(Let)31 b Fl(f)p
Fo(P)3295 4043 y Fn(0)3332 4031 y Fo(;)14 b(:)g(:)g(:)f(;)h(P)3569
4043 y Fk(m)p Fg(\000)p Fn(1)3717 4031 y Fl(g)p Fo(;)30
b Fl(P)7 b Ft(,)0 4160 y Fo(B)t Ft(,)35 b Fo(C)6 b Ft(,)35
b Fo(D)g Ft(b)r(e)e(the)h(output)f(of)g Fo(S)5 b(AT)12
b Ft(2)p Fo(R)q(esS)5 b(c)p Ft(\()p Fo(C)1542 4172 y
Fn(1)1578 4160 y Fo(;)14 b(:)g(:)g(:)f(;)h(C)1821 4172
y Fk(n)1867 4160 y Fo(;)g(v)1944 4172 y Fn(1)1981 4160
y Fo(;)g(:)g(:)g(:)g(;)g(v)2206 4172 y Fk(k)2247 4160
y Ft(\).)53 b(If)34 b(there)f(is)g(a)f(sc)n(hedule)h(of)g(migrations)f
(for)g Fo(M)0 4290 y Ft(on)c Fo(A)h Ft(during)f([0)p
Fo(;)14 b(N)9 b Ft(],)29 b(then)g(there)f(is)h(a)f(resource)f(sc)n
(hedule)h(that)h(yields)f(a)g(one-time-in)n(terv)-5 b(al)28
b(latency)g(and)g(supp)r(orts)g(a)0 4419 y(co)r(ordinated)c(displa)n(y)
h(of)g Fl(f)p Fo(P)919 4431 y Fn(0)956 4419 y Fo(;)14
b(:)g(:)g(:)f(;)h(P)1193 4431 y Fk(m)p Fg(\000)p Fn(1)1342
4419 y Fl(g)24 b Ft(on)h(a)g(system)g(con\014guration)f(\()p
Fo(B)t(;)14 b(C)q(;)g(D)r Ft(\))26 b(and)f(an)g(initial)h(data)e
(placemen)n(t)h Fl(P)7 b Ft(.)0 4797 y Fu(Pro)s(of:)79
b Ft(See)27 b(App)r(endix)i(B.)p 985 4772 V 985 4822
4 50 v 1028 4822 V 985 4825 47 4 v 177 4987 a(W)-7 b(e)28
b(no)n(w)f(pro)n(v)n(e)f(the)i(other)f(direction)g(of)h(the)g(equiv)-5
b(alence.)p 0 5056 1560 4 v 92 5118 a Fh(2)127 5141 y
Fr(The)24 b(retriev)l(als)f(\()p Fc(F)648 5151 y Fj(i)674
5141 y Fr(\))h(and)g(discards)f(\()p Fc(K)1220 5151 y
Fj(i)1246 5141 y Fr(\))h(in)f Fc(Ret)h Fr(can)g(b)r(e)g(deriv)n(ed)g
(from)d(the)j(memory)e(states:)32 b Fc(F)2819 5151 y
Fj(i)2864 5141 y Fr(=)2950 5124 y(^)2939 5141 y Fc(S)2982
5151 y Fj(i)p Fh(+1)3100 5141 y Fa(\000)3182 5124 y Fr(^)3170
5141 y Fc(S)3213 5151 y Fj(i)3263 5141 y Fr(and)24 b
Fc(K)3460 5151 y Fj(i)3505 5141 y Fr(=)3591 5124 y(^)3580
5141 y Fc(S)3623 5151 y Fj(i)3664 5141 y Fa(\000)3746
5124 y Fr(^)3734 5141 y Fc(S)3777 5151 y Fj(i)p Fh(+1)3880
5141 y Fr(.)1908 5656 y Ft(18)p eop
%%Page: 19 20
19 19 bop 0 90 a Fu(Lemma)30 b(5.2)-7 b(:)85 b Ft(Let)30
b Fo(M)t(;)14 b(A;)g(N)39 b Ft(b)r(e)31 b(the)f(output)h(of)f
Fo(S)5 b(AT)12 b Ft(2)p Fo(M)d(ig)s(S)c(c)p Ft(\()p Fo(C)2244
102 y Fn(1)2279 90 y Fo(;)14 b(:)g(:)g(:)g(;)g(C)2523
102 y Fk(n)2568 90 y Fo(;)g(v)2645 102 y Fn(1)2682 90
y Fo(;)g(:)g(:)g(:)g(;)g(v)2907 102 y Fk(k)2948 90 y
Ft(\).)45 b(Let)31 b Fl(f)p Fo(P)3295 102 y Fn(0)3332
90 y Fo(;)14 b(:)g(:)g(:)f(;)h(P)3569 102 y Fk(m)p Fg(\000)p
Fn(1)3717 90 y Fl(g)p Fo(;)30 b Fl(P)7 b Ft(,)0 220 y
Fo(B)t Ft(,)31 b Fo(C)6 b Ft(,)31 b Fo(D)h Ft(b)r(e)f(the)f(output)h
(of)f Fo(S)5 b(AT)12 b Ft(2)p Fo(R)q(esS)5 b(c)p Ft(\()p
Fo(C)1520 232 y Fn(1)1555 220 y Fo(;)14 b(:)g(:)g(:)g(;)g(C)1799
232 y Fk(n)1844 220 y Fo(;)g(v)1921 232 y Fn(1)1958 220
y Fo(;)g(:)g(:)g(:)g(;)g(v)2183 232 y Fk(k)2224 220 y
Ft(\).)44 b(If)31 b(there)f(is)g(a)f(resource)g(sc)n(hedule)g(that)i
(yields)e(a)0 349 y(one-time-in)n(terv)-5 b(al)30 b(latency)h(and)h
(supp)r(orts)f(a)g(co)r(ordinated)f(displa)n(y)h(of)g
Fl(f)p Fo(P)2457 361 y Fn(0)2494 349 y Fo(;)14 b(:)g(:)g(:)g(;)g(P)2732
361 y Fk(m)p Fg(\000)p Fn(1)2880 349 y Fl(g)31 b Ft(on)g(a)g(system)h
(con\014guration)0 479 y(\()p Fo(B)t(;)14 b(C)q(;)g(D)r
Ft(\))29 b(and)e(an)g(initial)g(data)g(placemen)n(t)g
Fl(P)7 b Ft(,)27 b(then)h(there)f(is)g(a)g(sc)n(hedule)g(of)g
(migrations)f(for)g Fo(M)36 b Ft(on)27 b Fo(A)h Ft(during)f([0)p
Fo(;)14 b(N)9 b Ft(].)0 718 y Fu(Pro)s(of:)79 b Ft(See)27
b(App)r(endix)i(B.)p 985 694 47 4 v 985 743 4 50 v 1028
743 V 985 746 47 4 v 177 907 a(Because)g(of)h(Lemma)f(4.3,)h(w)n(e)f
(can)h(generalize)e(Lemmas)h(5.1)g(and)h(5.2)f(to)h(include)g
(replications)e(in)i(the)h(sc)n(hedules)0 1036 y(for)c
Fo(M)36 b Ft(on)28 b Fo(A)g Ft(during)f([0)p Fo(;)14
b(N)9 b Ft(].)0 1276 y Fu(Lemma)30 b(5.3)-7 b(:)85 b
Ft(Let)30 b Fo(M)t(;)14 b(A;)g(N)39 b Ft(b)r(e)31 b(the)f(output)h(of)f
Fo(S)5 b(AT)12 b Ft(2)p Fo(M)d(ig)s(S)c(c)p Ft(\()p Fo(C)2244
1288 y Fn(1)2279 1276 y Fo(;)14 b(:)g(:)g(:)g(;)g(C)2523
1288 y Fk(n)2568 1276 y Fo(;)g(v)2645 1288 y Fn(1)2682
1276 y Fo(;)g(:)g(:)g(:)g(;)g(v)2907 1288 y Fk(k)2948
1276 y Ft(\).)45 b(Let)31 b Fl(f)p Fo(P)3295 1288 y Fn(0)3332
1276 y Fo(;)14 b(:)g(:)g(:)f(;)h(P)3569 1288 y Fk(m)p
Fg(\000)p Fn(1)3717 1276 y Fl(g)p Fo(;)30 b Fl(P)7 b
Ft(,)0 1406 y Fo(B)t Ft(,)24 b Fo(C)6 b Ft(,)24 b Fo(D)h
Ft(b)r(e)f(the)f(output)g(of)g Fo(S)5 b(AT)12 b Ft(2)p
Fo(R)q(esS)5 b(c)p Ft(\()p Fo(C)1470 1418 y Fn(1)1505
1406 y Fo(;)14 b(:)g(:)g(:)g(;)g(C)1749 1418 y Fk(n)1795
1406 y Fo(;)g(v)1872 1418 y Fn(1)1909 1406 y Fo(;)g(:)g(:)g(:)f(;)h(v)
2133 1418 y Fk(k)2174 1406 y Ft(\).)36 b(There)23 b(is)f(a)h(sc)n
(hedule)f(of)h(migrations/replications)0 1535 y(for)30
b Fo(M)40 b Ft(on)30 b Fo(A)h Ft(during)g([0)p Fo(;)14
b(N)9 b Ft(])30 b(if)h(and)f(only)h(if)g(there)g(is)f(a)h(resource)e
(sc)n(hedule)h(that)h(yields)g(a)f(one-time-in)n(terv)-5
b(al)29 b(latency)0 1665 y(and)34 b(supp)r(orts)g(a)g(co)r(ordinated)f
(displa)n(y)h(of)g Fl(f)p Fo(P)1537 1677 y Fn(0)1574
1665 y Fo(;)14 b(:)g(:)g(:)g(;)g(P)1812 1677 y Fk(m)p
Fg(\000)p Fn(1)1960 1665 y Fl(g)34 b Ft(on)g(a)g(system)g
(con\014guration)f(\()p Fo(B)t(;)14 b(C)q(;)g(D)r Ft(\))36
b(and)e(an)g(initial)0 1794 y(data)27 b(placemen)n(t)g
Fl(P)7 b Ft(.)177 2034 y(It)23 b(is)g(easy)f(to)h(see)f(that)h(the)g
(time)h(complexit)n(y)e(of)h(transformation)e Fo(S)5
b(AT)12 b Ft(2)p Fo(R)q(esS)5 b(c)20 b Ft(is)j(p)r(olynomial.)34
b(Also,)24 b(b)r(ecause)e(of)0 2163 y(Lemmas)28 b(4.4)g(and)g(5.3,)g
(this)h(transformation)e(is)h(a)g(v)-5 b(alid)29 b(reduction)f(from)g
(SA)-7 b(T)29 b(to)g(the)g(resource)e(sc)n(heduling)h(problem)0
2293 y(assuming)37 b(\014x-sized)h(units)h(of)f(transfer.)68
b(Therefore,)40 b(this)e(sc)n(heduling)g(problem)g(is)g(NP-Complete.)68
b(Presen)n(tations)0 2422 y(with)32 b(v)-5 b(ariable-sized)29
b(ob)5 b(jects)30 b(include)i(those)e(with)i(\014x-sized)e(ob)5
b(jects)31 b(\(pages\).)46 b(Therefore,)31 b(the)g(resource)f(sc)n
(heduling)0 2552 y(problem)d(for)g(v)-5 b(ariable-sized)26
b(units)i(of)g(transfer)e(is)i(also)e(NP-Complete.)0
2792 y Fu(Theorem)k(5.4)-6 b(:)83 b Ft(Deciding)30 b(whether)g(there)g
(is)g(a)f(resource)f(sc)n(hedule)i(that)g(yields)g(the)g(latency)g(of)g
(one)f(time)i(in)n(terv)-5 b(al)0 2921 y(for)27 b(a)g(giv)n(en)g
(displa)n(y)g(sc)n(hedule)g(is)h(NP-Complete.)0 3161
y Fu(Corollary)k(2)41 b Fm(Computing)34 b(a)g(r)l(esour)l(c)l(e)f(sche)
l(dule)i(that)e(yields)i(the)f(minimum)g(latency)g(for)g(a)g(given)g
(display)i(sche)l(dule)0 3290 y(is)30 b(NP-har)l(d.)177
3530 y Ft(The)37 b(computation)g(of)g(a)g(resource)f(sc)n(hedule)g(is)h
(constrained)g(b)n(y)f(the)i(memory)e(capacit)n(y)g(of)i(the)f(system.)
66 b(An)0 3660 y(increase)35 b(in)h(memory)f(migh)n(t)g(lead)h(to)f(a)h
(decrease)e(in)i(latency)-7 b(.)61 b(One)36 b(question)f(that)h(arises)
f(is)g(what)h(the)g(minim)n(um)0 3789 y(memory)21 b(requiremen)n(t)g
(is)h(to)f(render)g(a)h(resource)e(sc)n(hedule)h(with)i(a)e(pre-sp)r
(eci\014ed)h(latency)-7 b(.)34 b(Ho)n(w)n(ev)n(er,)21
b(deciding)h(whether)0 3919 y(there)28 b(is)g(a)g(resource)e(sc)n
(hedule)i(that)h(yields)f(a)g(latency)f(of)i(one)e(time)i(in)n(terv)-5
b(al)28 b(on)g(a)g(system)f(with)i(memory)f(capacit)n(y)f
Fo(C)0 4048 y Ft(is)g(NP-Complete.)37 b(Therefore,)26
b(computing)i(the)g(minim)n(um)g(memory)f(capacit)n(y)f(is)i(NP-hard.)0
4288 y Fu(Corollary)k(3)41 b Fm(Computing)27 b(the)f(minimum)g(memory)h
(r)l(e)l(quir)l(ements)e(to)h(display)j(a)d(pr)l(esentation)h(within)g
(a)f(pr)l(e-sp)l(e)l(ci\014e)l(d)0 4418 y(latency)k(is)g(NP-har)l(d.)0
4771 y Fp(6)135 b(Conclusions)45 b(and)g(F)-11 b(uture)44
b(Researc)l(h)0 5019 y Ft(A)30 b(co)r(ordinated)f(displa)n(y)h(of)g(a)f
(presen)n(tation)g(m)n(ust)h(satisfy)g(the)h(temp)r(oral)e(constrain)n
(ts)g(asso)r(ciated)f(with)j(eac)n(h)e(ob)5 b(ject.)0
5148 y(Once)24 b(the)g(displa)n(y)f(starts,)h(ob)5 b(jects)24
b(m)n(ust)g(b)r(e)g(rendered)f(at)h(pre-sp)r(eci\014ed)f(times)i
(de\014ned)f(b)n(y)g(the)g(temp)r(oral)f(constrain)n(ts.)0
5278 y(W)-7 b(e)34 b(studied)h(the)f(complexit)n(y)f(of)h(resource)e
(sc)n(heduling)h(that)h(supp)r(orts)g(co)r(ordinated)f(displa)n(y)g(of)
h(presen)n(tations.)54 b(As)0 5407 y(demonstrated)32
b(in)g([EMGI96)o(],)i(there)e(is)g(a)g(p)r(olynomial)f(time)i
(algorithm)e(\()p Fm(gr)l(e)l(e)l(dy)p Ft(\))j(to)e(compute)g(a)g
(resource)e(sc)n(hedule)1908 5656 y(19)p eop
%%Page: 20 21
20 20 bop 0 90 a Ft(that)40 b(minimizes)f(b)r(oth)h(memory)f(and)g
(latency)g(for)g(single-disk)g(arc)n(hitectures.)71 b(As)39
b(demonstrated)g(in)h(this)f(pap)r(er,)0 220 y(resource)25
b(sc)n(heduling)h(that)h(minimizes)g(latency)g(b)r(ecomes)f(NP-Hard)g
(for)g(the)h(case)f(of)h(m)n(ulti-disk)f(arc)n(hitectures.)35
b(Also,)0 349 y(computing)21 b(the)g(minim)n(um)h(memory)e(requiremen)n
(t)f(to)i(supp)r(ort)g(a)f(co)r(ordinated)g(displa)n(y)g(within)i(a)e
(pre-sp)r(eci\014ed)g(latency)0 479 y(is)27 b(NP-Hard.)177
644 y(Constraining)e(the)h(resource)e(sc)n(hedules)h(migh)n(t)h(lead)g
(to)g(p)r(olynomial)f(time)h(solutions.)36 b(F)-7 b(or)25
b(example,)h(the)g(compu-)0 774 y(tation)g(of)g(retriev)-5
b(al)25 b(sc)n(hedules)996 743 y Fn(3)1059 774 y Ft(that)i(minimize)g
(latency)e(can)h(b)r(e)h(done)f(in)g(p)r(olynomial)g(time,)h(for)f(the)
g(case)f(of)i(\014x-sized)0 903 y(units)34 b(of)f(transfer.)53
b(An)34 b(extension)f(of)g Fm(gr)l(e)l(e)l(dy)h Ft(computes)f(retriev)
-5 b(al)32 b(sc)n(hedules)h(that)h(yield)f(the)h(minim)n(um)g(latency)f
(as)0 1033 y(follo)n(ws:)g(Giv)n(en)21 b(a)g(displa)n(y)g(sc)n(hedule)g
(and)g(a)g(data)g(placemen)n(t)g(across)f(the)i Fo(D)h
Ft(disks,)g(this)e(extension)h(extracts)e(the)i(displa)n(y)0
1162 y(sc)n(hedule)i(for)g(eac)n(h)f(disk)h(based)g(on)g(the)h(pages)e
(that)i(reside)e(on)h(that)h(disk.)36 b(It)24 b(in)n(v)n(ok)n(es)f(the)
h(greedy)g(sc)n(heduler)f([EMGI96)o(])0 1292 y(using)28
b(the)h(displa)n(y)f(sc)n(hedule)g(of)g(eac)n(h)g(disk)g(to)g(compute)h
(a)f(retriev)-5 b(al)27 b(sc)n(hedule)h(for)g(that)h(disk.)39
b(The)29 b(union)f(of)g(these)h Fo(D)0 1421 y Ft(retriev)-5
b(al)19 b(sc)n(hedules)h(yield)g(a)g(\014nal)g(retriev)-5
b(al)20 b(sc)n(hedule)f(for)h(the)h(displa)n(y)-7 b(.)34
b(The)20 b(disk)g(with)h(the)f(longest)g(startup)g(latency)g(\()p
Fo(p)p Ft(\))0 1551 y(determines)26 b(the)h(o)n(v)n(erall)d(latency)j
(incurred)e(b)n(y)i(the)f(displa)n(y)-7 b(.)36 b(F)-7
b(or)26 b(the)h(giv)n(en)f(data)g(placemen)n(t,)g(this)h(retriev)-5
b(al)25 b(sc)n(hedule)0 1680 y(minimizes)g(the)g(amoun)n(t)f(of)h
(memory)f(required)f(b)r(ecause)i(the)g(greedy)e(sc)n(heduler)h
(minimizes)h(the)g(memory)f(requiremen)n(t)0 1810 y(at)h(eac)n(h)f
(instan)n(t)h Fo(i)g Ft(for)g(a)g(single)f(disk)h([EMGI96)o(].)36
b(By)25 b(minimizing)h(the)f(n)n(um)n(b)r(er)g(of)g(pages)f(that)i
(constitute)f Fo(S)3546 1822 y Fn(0)3583 1810 y Ft(,)h(this)g(ex-)0
1939 y(tension)e(minimizes)h(the)g(incurred)f(latency)-7
b(.)36 b(One)24 b(question)h(that)f(arises)g(is)g(whether)h(the)g
(resource)e(sc)n(heduling)h(problem)0 2069 y(is)f(still)h(NP-Hard)e
(when)i(migrations/replications)c(sc)n(hedules)j(do)g(not)g(include)h
(in)n(termediate)f(disks.)35 b(Another)23 b(question)0
2198 y(is)29 b(whether)h(this)f(problem)g(is)h(still)f(NP-Hard)g(for)f
(sp)r(ecial)i(cases)e(of)h(m)n(ulti-disk)h(arc)n(hitectures)e(suc)n(h)h
(as)f(a)h(system)h(with)0 2328 y(2)d(disks.)0 2683 y
Fp(7)135 b(Ac)l(kno)l(wledgmen)l(ts)0 2930 y Ft(W)-7
b(e)28 b(w)n(ould)f(lik)n(e)g(to)h(thank)f(Da)n(vid)h(A.)g(Barrett)e
(and)i(the)g(anon)n(ymous)e(review)n(ers)f(for)i(their)h(helpful)g
(commen)n(ts.)0 3273 y Fp(References)0 3472 y Fy([BGJ77])111
b(P)-6 b(.)32 b(Bruc)n(k)n(er,)i(M.)f(R.)f(Garey)-6 b(,)34
b(and)e(D.)h(S.)f(Johnson.)55 b(Sc)n(heduling)31 b(equal-length)h
(tasks)h(under)e(treelik)n(e)i(precedence)382 3580 y(constrain)n(ts)26
b(to)g(minimize)f(maxim)n(um)d(lateness.)35 b Fx(Mathematics)29
b(Op)l(er)l(ations)h(R)l(ese)l(ar)l(ch)p Fy(,)e(2:275{284,)h(1977.)0
3721 y([CR93])152 b(A.)21 b(Choi)h(and)f(M.)h(Rusc)n(hitzk)l(a.)k
(Managing)d(lo)r(calit)n(y)g(sets:)33 b(The)21 b(mo)r(del)g(and)g
(\014xed{size)h(bu\013ers.)27 b Fx(IEEE)c(T)-6 b(r)l(ansactions)382
3829 y(on)27 b(Computers)p Fy(,)h(42\(2\):190{204,)i(F)-6
b(ebruary)25 b(1993.)0 3970 y([EMGI96])54 b(M.)31 b(L.)g
(Escobar-Molano,)k(S.)c(Ghandeharizadeh,)h(and)f(D.)f(Ierardi.)50
b(An)30 b(Optimal)g(Resource)h(Sc)n(heduler)f(for)i(Con-)382
4078 y(tin)n(uous)c(Displa)n(y)h(of)h(Structured)e(Video)h(Ob)t(jects.)
44 b Fx(IEEE)30 b(T)-6 b(r)l(ansactions)33 b(on)e(Know)t(le)l(dge)g
(and)g(Data)h(Engine)l(ering)p Fy(,)382 4186 y(8\(3\):508{511,)d(June)d
(1996.)0 4327 y([GJ75])165 b(M.)31 b(R.)f(Garey)h(and)f(D.)g(S.)g
(Johnson.)49 b(Complexit)n(y)30 b(results)h(for)g(m)n(ultipro)r(cessor)
g(sc)n(heduling)f(under)g(resource)h(con-)382 4435 y(strain)n(ts.)k
Fx(SIAM)27 b(Journal)h(on)g(Computing)p Fy(,)e(4\(4\):397{411,)k(Decem)
n(b)r(er)24 b(1975.)0 4576 y([GJS76])122 b(M.)28 b(R.)f(Garey)-6
b(,)28 b(D.)f(S.)h(Johnson,)g(and)g(R.)f(Sethi.)39 b(The)28
b(complexit)n(y)e(of)i(\015o)n(wshop)g(and)f(jobshop)h(sc)n(heduling.)
40 b Fx(Mathe-)382 4684 y(matics)28 b(Op)l(er)l(ations)h(R)l(ese)l(ar)l
(ch)p Fy(,)f(1\(2\):117{129,)i(Ma)n(y)25 b(1976.)0 4826
y([JGJL85])78 b(E.)33 b(G.)h(Co\013man)f(Jr,)j(M.)d(R.)g(Garey)-6
b(,)35 b(D.)e(S.)h(Johnson,)h(and)e(A.)g(S.)g(Lapaugh.)57
b(Sc)n(heduling)33 b(\014le)g(transfers.)58 b Fx(SIAM)382
4933 y(Journal)28 b(on)g(Computing)p Fy(,)e(14\(3\):744{780,)k(August)
25 b(1985.)0 5075 y([MS91])151 b(L.)26 b(McGeo)r(c)n(h)g(and)g(D.)f
(Sleator,)i(editors.)35 b Fx(On-Line)28 b(A)n(lgorithms)p
Fy(,)e(n)n(um)n(b)r(er)e(7.)i(DIMA)n(CS)f(Series)h(in)g(Discrete)g
(Mathe-)382 5183 y(matics)f(and)h(Theoretical)h(Computer)e(Science,)h
(AMS,)g(F)-6 b(ebruary)25 b(1991.)p 0 5250 1560 4 v 92
5304 a Fh(3)127 5327 y Fr(Resource)f(sc)n(hedules)h(without)g(data)f
(placemen)n(t)h(manipulation)1908 5656 y Ft(20)p eop
%%Page: 21 22
21 21 bop 0 90 a Fy([R)-9 b(VVN92])42 b(P)-6 b(.)25 b(I.)g(Riv)n(era-V)
-6 b(ega,)26 b(R.)f(V)-6 b(aradara)t(jan,)27 b(and)e(S.)g(Na)n(v)l
(athe.)33 b(Sc)n(heduling)25 b(\014le)g(transfers)i(in)e(fully)g
(connected)h(net)n(w)n(orks.)382 198 y Fx(Networks)p
Fy(,)i(22:563{588,)h(1992.)0 339 y([ST85])166 b(D.)28
b(Sleator)h(and)f(R.)g(T)-6 b(arjan.)44 b(Amortized)27
b(e\016ciency)i(of)g(list)g(up)r(date)f(and)g(paging)h(rules.)43
b Fx(Communic)l(ations)30 b(of)g(the)382 447 y(A)n(CM)p
Fy(,)25 b(28\(2\):202{208,)30 b(1985.)0 589 y([Whi90])121
b(J.)26 b(Whitehead.)35 b(The)25 b(complexit)n(y)g(of)h(\014le)g
(transfer)h(sc)n(heduling)f(with)g(forw)n(arding.)36
b Fx(SIAM)27 b(Journal)h(on)g(Computing)p Fy(,)382 697
y(19\(2\):222{245,)i(April)25 b(1990.)0 1052 y Fp(A)134
b(Reduction)45 b(from)h(SA)-11 b(T)43 b(to)i(Migrations)h(Sc)l
(heduling)0 1299 y Ft(This)28 b(section)g(sho)n(ws)g(that)g(a)g(SA)-7
b(T)29 b(instance)f Fo(C)1531 1311 y Fn(1)1569 1299 y
Fo(;)h(:)14 b(:)g(:)f(;)29 b(C)1842 1311 y Fk(n)1887
1299 y Fo(;)g(v)1979 1311 y Fn(1)2016 1299 y Fo(;)g(:)14
b(:)g(:)g(;)28 b(v)2270 1311 y Fk(k)2340 1299 y Ft(has)g(a)g(solution)g
(if)h(and)f(only)g(if)h(the)f(migrations)0 1429 y(sc)n(heduling)f
(instance)g Fo(M)t(;)14 b(A;)g(N)32 b Ft(=)23 b Fo(S)5
b(AT)12 b Ft(2)p Fo(M)d(ig)s(S)c(c)p Ft(\()p Fo(C)1701
1441 y Fn(1)1736 1429 y Fo(;)14 b(:)g(:)g(:)f(;)h(C)1979
1441 y Fk(n)2025 1429 y Fo(;)g(v)2102 1441 y Fn(1)2139
1429 y Fo(;)28 b(:)14 b(:)g(:)f(;)28 b(v)2391 1441 y
Fk(k)2432 1429 y Ft(\))g(has)f(a)h(solution.)177 1594
y Fm(SA)-6 b(T2MigSc)23 b Ft(de\014nes)f(a)f(system)h(load)f
Fo(A)h Ft(and)g(a)f(collection)g Fo(M)31 b Ft(of)22 b(migrations)e
(requests)h(so)g(that)h(p)r(ossible)g(sc)n(hedules)0
1723 y(of)31 b(migrations)f(for)g Fo(M)40 b Ft(follo)n(w)30
b(a)g(sp)r(eci\014c)i(pattern.)47 b(F)-7 b(or)30 b(the)h(case)f(of)h
(requests)f(asso)r(ciated)g(with)i(v)-5 b(ariables,)30
b(there)h(are)0 1853 y(only)c(t)n(w)n(o)g(alternativ)n(es)f(to)i(sc)n
(hedule)f(them.)0 2101 y Fu(Lemma)j(A.1)-7 b(:)97 b Ft(Let)34
b Fo(M)t(;)14 b(A;)g(N)42 b Ft(b)r(e)34 b(the)g(output)g(of)g
Fo(S)5 b(AT)12 b Ft(2)p Fo(M)d(ig)s(S)c(c)p Ft(\()p Fo(C)2301
2113 y Fn(1)2335 2101 y Fo(;)14 b(:)g(:)g(:)g(;)g(C)2579
2113 y Fk(n)2624 2101 y Fo(;)g(v)2701 2113 y Fn(1)2739
2101 y Fo(;)g(:)g(:)g(:)f(;)h(v)2963 2113 y Fk(k)3004
2101 y Ft(\),)36 b(and)d Fo(r)j Ft(=)c Fo(s)3471 2113
y Fk(i)3531 2101 y Fl(!)h(f)p Fo(t)3719 2113 y Fk(i)3746
2101 y Fo(;)14 b(u)3831 2113 y Fk(i)3858 2101 y Fl(g)0
2231 y Ft(b)r(e)21 b(the)g(migration)f(request)g(in)h
Fo(M)29 b Ft(asso)r(ciated)19 b(with)j(v)-5 b(ariable)19
b Fo(v)2011 2243 y Fk(i)2039 2231 y Ft(.)35 b(There)20
b(are)g(only)g(t)n(w)n(o)g(alternativ)n(es)f(to)h(sc)n(hedule)h
Fo(r)i Ft(on)e Fo(A)p Ft(:)227 3755 y @beginspecial 0
@llx 0 @lly 400.970001 @urx 162.070007 @ury 4009 @rwi
@setspecial
%%BeginDocument: varrep.epsi
save
countdictstack
mark
newpath
/showpage {} def
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 { } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	
	
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
(4.0) FMVERSION
1 1 0 0 400.97 162.07 0 1 4 FMDOCUMENT
0 0 /Times-Roman FMFONTDEFINE
1 0 /Times-Italic FMFONTDEFINE
2 1 /Symbol FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
400.97 162.07 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 0 0 0 1 1 1]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
326.17 156.73 326.17 27.41 2 L
0.5 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
321.55 139.65 333.19 139.65 2 L
N
320.91 121.65 332.55 121.65 2 L
2 H
N
320.26 102.8 331.9 102.8 2 L
0.5 H
N
321.55 78.91 333.19 78.91 2 L
N
320.91 61.32 332.55 61.32 2 L
2 H
N
321.05 43.65 332.68 43.65 2 L
0.5 H
N
321.45 25.74 333.09 25.74 2 L
2 H
N
323.76 82.37 337.67 99.96 R
7 X
V
0 8 Q
0 X
(.) 326.36 95.13 T
(.) 326.36 88.93 T
(.) 326.36 82.73 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(read) 335.25 145.65 T
1 F
(s) 351.53 145.99 T
(i) 354.94 141.39 T
0 F
(write) 335.19 127.72 T
1 F
(e) 353.28 128.83 T
0 F
(1) 357.13 124.23 T
1 F
(i) 361.75 124.23 T
0 F
(read) 335.19 111.36 T
1 F
(e) 353.28 112.47 T
0 F
(1) 357.13 107.87 T
1 F
(i) 361.75 107.87 T
0 F
(write) 334.45 69.35 T
1 F
(e) 352.54 70.46 T
(n) 356.39 65.86 T
(i) 361.01 65.86 T
0 F
(read) 334.45 51.5 T
1 F
(e) 352.54 52.61 T
(n) 356.39 48.01 T
(i) 361.01 48.01 T
0 F
(write) 334.45 32.16 T
1 F
(u) 353.1 32.78 T
(i) 357.4 28.18 T
0 0 0 1 0 0 0 K
0 10 Q
(\050b\051) 280.76 2.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
(4) 266.23 24.73 T
1 F
(n) 280.99 24.73 T
0 F
(1) 293.5 24.73 T
(+) 286.99 24.73 T
2 F
(\050) 277.56 24.73 T
(\051) 297.87 24.73 T
1 F
(i) 307.86 24.73 T
2 F
(\327) 272.23 24.73 T
(\327) 303.87 24.73 T
1 F
(s) 184.74 145.99 T
(i) 188.16 141.39 T
321.88 157.23 333.52 157.23 2 L
N
156.62 158.66 156.62 28.41 2 L
0.5 H
N
151.5 140.58 163.14 140.58 2 L
N
150.85 122.58 162.49 122.58 2 L
2 H
N
150.21 103.73 161.85 103.73 2 L
0.5 H
N
151.5 79.34 163.14 79.34 2 L
N
150.85 61.75 162.49 61.75 2 L
2 H
N
150.99 44.08 162.63 44.08 2 L
0.5 H
N
151.4 26.17 163.04 26.17 2 L
2 H
N
151.84 158.16 163.47 158.16 2 L
N
0 F
(4) 74.35 156.05 T
1 F
(n) 89.11 156.05 T
0 F
(1) 101.62 156.05 T
(+) 95.11 156.05 T
2 F
(\050) 85.68 156.05 T
(\051) 105.99 156.05 T
1 F
(i) 120.75 156.05 T
0 F
(1) 130.98 156.05 T
(\320) 124.98 156.05 T
2 F
(\050) 117.32 156.05 T
(\051) 135.35 156.05 T
(\327) 80.35 156.05 T
(\327) 111.99 156.05 T
153.21 83.3 167.12 100.89 R
7 X
V
0 F
0 X
(.) 156.81 97.56 T
(.) 156.81 91.36 T
(.) 156.81 84.66 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(read) 165.2 146.59 T
(write) 164.4 127.69 T
1 F
(d) 183.25 128.8 T
0 F
(1) 187.56 124.2 T
1 F
(i) 192.17 124.2 T
0 F
(read) 164.4 111.33 T
1 F
(d) 183.25 112.44 T
0 F
(1) 187.56 107.84 T
1 F
(i) 192.17 107.84 T
0 F
(write) 164.4 69.78 T
1 F
(d) 183.25 70.89 T
(n) 187.56 66.29 T
(i) 192.17 66.29 T
0 F
(read) 164.4 51.93 T
1 F
(d) 183.25 53.04 T
(n) 187.56 48.44 T
(i) 192.17 48.44 T
0 F
(write) 164.4 32.6 T
1 F
(t) 184.93 33.21 T
(i) 187.46 28.61 T
0 F
(4) 36 24.44 T
1 F
(n) 50.76 24.44 T
0 F
(1) 63.27 24.44 T
(+) 56.76 24.44 T
2 F
(\050) 47.33 24.44 T
(\051) 67.64 24.44 T
1 F
(i) 82.4 24.44 T
0 F
(1) 92.62 24.44 T
(\320) 86.63 24.44 T
2 F
(\050) 78.97 24.44 T
(\051) 96.99 24.44 T
(\327) 41.99 24.44 T
(\327) 73.64 24.44 T
0 F
(2) 109.5 24.44 T
1 F
(n) 124.27 24.44 T
0 F
(1) 136.78 24.44 T
(+) 130.26 24.44 T
2 F
(\050) 120.83 24.44 T
(\051) 141.14 24.44 T
(\327) 115.5 24.44 T
0 F
(+) 102.99 24.44 T
0 0 0 1 0 0 0 K
0 10 Q
(\050a\051) 118.92 3.6 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
(4) 211.33 155.81 T
1 F
(n) 226.1 155.81 T
0 F
(1) 238.61 155.81 T
(+) 232.1 155.81 T
2 F
(\050) 222.66 155.81 T
(\051) 242.97 155.81 T
1 F
(i) 257.74 155.81 T
0 F
(1) 267.96 155.81 T
(\320) 261.96 155.81 T
2 F
(\050) 254.31 155.81 T
(\051) 272.33 155.81 T
(\327) 217.33 155.81 T
(\327) 248.97 155.81 T
0 F
(2) 284.84 155.81 T
1 F
(n) 299.6 155.81 T
0 F
(1) 312.11 155.81 T
(+) 305.6 155.81 T
2 F
(\050) 296.17 155.81 T
(\051) 316.48 155.81 T
(\327) 290.83 155.81 T
0 F
(+) 278.33 155.81 T
0 0 0 1 0 0 0 K
FMENDPAGE
cleartomark
countdictstack exch sub { end } repeat
restore
%%EndDocument
 @endspecial 0 3979 a Fu(Pro)s(of:)96 b Ft(There)31 b(are)g(only)g(t)n
(w)n(o)g(time)h(in)n(terv)-5 b(als)31 b(with)i(bandwidth)f(a)n(v)-5
b(ailable)30 b(at)i(driv)n(e)f Fo(s)2934 3991 y Fk(i)2961
3979 y Ft(.)49 b(Consider)31 b(the)h(case)f(when)0 4108
y(the)e(sc)n(hedule)f(starts)g(with)h(read)f(the)h(page)f(from)g
Fo(s)1659 4120 y Fk(i)1715 4108 y Ft(at)h(in)n(terv)-5
b(al)28 b(4)18 b Fl(\001)h Ft(\()p Fo(n)h Ft(+)e(1\))h
Fl(\001)g Ft(\()p Fo(i)g Fl(\000)g Ft(1\).)40 b(Because)27
b(there)i(is)f(not)h(memory)0 4238 y(a)n(v)-5 b(ailable)27
b(at)h(instan)n(t)g(4)18 b Fl(\001)h Ft(\()p Fo(n)g Ft(+)f(1\))h
Fl(\001)g Ft(\()p Fo(i)f Fl(\000)h Ft(1\))f(+)h(2)27
b(then)i(the)f(next)h(step)f(m)n(ust)g(b)r(e)h(to)f(write)f(the)i(page)
e(to)h(driv)n(e)f Fo(d)3575 4250 y Fn(1)p Fk(i)3665 4238
y Ft(during)0 4367 y(in)n(terv)-5 b(al)30 b(4)20 b Fl(\001)h
Ft(\()p Fo(n)g Ft(+)f(1\))g Fl(\001)h Ft(\()p Fo(i)f
Fl(\000)h Ft(1\))f(+)g(1.)46 b(The)31 b(next)g(op)r(eration)f(to)h(sc)n
(hedule)f(m)n(ust)h(b)r(e)g(to)g(read)f(the)h(page)f(from)h
Fo(d)3573 4379 y Fn(1)p Fk(i)3665 4367 y Ft(during)0
4497 y(in)n(terv)-5 b(al)29 b(4)20 b Fl(\001)g Ft(\()p
Fo(n)g Ft(+)f(1\))h Fl(\001)g Ft(\()p Fo(i)g Fl(\000)f
Ft(1\))h(+)g(2,)30 b(b)r(ecause)f(there)h(will)g(not)g(b)r(e)g(other)f
(in)n(terv)-5 b(al)29 b(with)i(bandwidth)f(a)n(v)-5 b(ailable)29
b(for)g(driv)n(e)0 4626 y Fo(d)43 4638 y Fn(1)p Fk(i)129
4626 y Ft(afterw)n(ards.)34 b(A)26 b(similar)e(argumen)n(t)g(can)h(b)r
(e)g(applied)g(to)g(conclude)g(that)g(the)h(subsequen)n(t)f(steps)g(in)
g(the)g(sc)n(hedule)g(are)0 4756 y(to)k(write)f(the)i(page)d(from)i
Fo(d)896 4768 y Fn(2)p Fk(i)986 4756 y Ft(during)f(in)n(terv)-5
b(al)28 b(4)19 b Fl(\001)h Ft(\()p Fo(n)f Ft(+)g(1\))g
Fl(\001)g Ft(\()p Fo(i)g Fl(\000)g Ft(1\))g(+)g(3,)29
b(and)f(then)i(read)e(it)h(from)f Fo(d)3273 4768 y Fn(2)p
Fk(i)3363 4756 y Ft(during)h(in)n(terv)-5 b(al)0 4885
y(4)17 b Fl(\001)g Ft(\()p Fo(n)h Ft(+)f(1\))g Fl(\001)h
Ft(\()p Fo(i)f Fl(\000)g Ft(1\))h(+)f(4,)26 b(so)h(on)g(and)g(so)f
(forth.)37 b(The)27 b(\014nal)g(step)g(in)g(the)h(sc)n(hedule)f(m)n
(ust)g(b)r(e)g(to)g(write)g(the)h(page)e(to)h(driv)n(e)0
5015 y Fo(t)30 5027 y Fk(i)83 5015 y Ft(at)f(in)n(terv)-5
b(al)25 b(4)14 b Fl(\001)h Ft(\()p Fo(n)f Ft(+)g(1\))h
Fl(\001)f Ft(\()p Fo(i)h Fl(\000)f Ft(1\))g(+)g(2)g Fl(\001)h
Ft(\()p Fo(n)f Ft(+)g(1\))h Fl(\000)f Ft(1,)26 b(b)r(ecause)f(there)g
(will)h(not)g(b)r(e)g(memory)f(a)n(v)-5 b(ailable)24
b(to)h(hold)h(the)g(page)0 5144 y(at)h(instan)n(t)f(4)16
b Fl(\001)h Ft(\()p Fo(n)g Ft(+)f(1\))g Fl(\001)h Ft(\()p
Fo(i)f Fl(\000)h Ft(1\))f(+)g(2)g Fl(\001)h Ft(\()p Fo(n)g
Ft(+)f(1\).)36 b(In)27 b(sum,)g(one)f(alternativ)n(e)g(to)g(sc)n
(hedule)h(the)g(migration)e(asso)r(ciated)h(with)0 5274
y Fo(v)40 5286 y Fk(i)96 5274 y Ft(is)h(the)h(sequence)f(in)h(\(a\).)37
b(Similarly)-7 b(,)27 b(w)n(e)g(can)h(sho)n(w)e(that)i(the)g(other)f
(alternativ)n(e)g(is)g(the)h(sequence)f(in)h(\(b\).)p
3572 5249 47 4 v 3572 5299 4 50 v 3615 5299 V 3572 5302
47 4 v 1908 5656 a(21)p eop
%%Page: 22 23
22 22 bop 177 90 a Ft(F)-7 b(or)23 b(the)g(migrations)e(requests)h
(asso)r(ciated)g(with)i(clauses,)f(there)f(are)g(only)h
Fo(c)g Ft(p)r(ossible)f(sc)n(hedules)h(on)f Fo(A)i Ft(for)e(a)h(clause)
0 220 y(with)28 b Fo(c)g Ft(disjuncts.)0 468 y Fu(Lemma)i(A.2)-7
b(:)102 b Ft(Let)35 b Fo(M)t(;)14 b(A;)g(N)43 b Ft(b)r(e)35
b(the)g(output)g(of)g Fo(S)5 b(AT)12 b Ft(2)p Fo(M)d(ig)s(S)c(c)p
Ft(\()p Fo(C)2312 480 y Fn(1)2346 468 y Fo(;)14 b(:)g(:)g(:)g(;)g(C)
2590 480 y Fk(n)2635 468 y Fo(;)g(v)2712 480 y Fn(1)2750
468 y Fo(;)g(:)g(:)g(:)f(;)h(v)2974 480 y Fk(k)3015 468
y Ft(\),)37 b(and)e Fo(d)3319 480 y Fk(j)3389 468 y Fl(!)f(f)p
Fo(d)3591 480 y Fk(j)s(i)3684 468 y Fl(j)h Fo(v)3782
480 y Fk(i)3845 468 y Fl(2)0 598 y Fo(C)59 610 y Fk(j)94
598 y Fl(g)24 b([)g(f)p Fo(e)320 610 y Fk(j)s(i)414 598
y Fl(j)36 b(:)p Fo(v)568 610 y Fk(i)633 598 y Fl(2)g
Fo(C)783 610 y Fk(j)819 598 y Fl(g)f Ft(b)r(e)h(the)g(migration)e
(request)h(asso)r(ciated)f(with)i(clause)f Fo(C)2763
610 y Fk(j)2798 598 y Ft(.)61 b(Let)36 b Fo(l)i Ft(=)e(4)23
b Fl(\001)h Ft(\()p Fo(n)g Ft(+)f(1\))g Fl(\001)h Ft(\()p
Fo(i)g Fl(\000)f Ft(1\))0 727 y(and)30 b Fo(s)d Ft(=)g(2)19
b Fl(\001)h Ft(\()p Fo(j)26 b Fl(\000)19 b Ft(1\).)45
b(There)29 b(are)g(only)h Fo(c)g Ft(\()p Fo(c)g Ft(=)g(n)n(um)n(b)r(er)
g(of)g(disjuncts)g(in)h Fo(C)2483 739 y Fk(j)2518 727
y Ft(\))f(alternativ)n(e)f(sc)n(hedules)h(for)f(the)i(request)0
857 y(asso)r(ciated)26 b(with)i Fo(C)643 869 y Fk(j)679
857 y Ft(:)958 979 y Fl(ff)p Ft(\()p Fo(d)1117 991 y
Fk(j)1152 979 y Fo(;)14 b(l)20 b Ft(+)e Fo(s)p Ft(\))p
Fo(;)c Ft(\()p Fo(d)1500 991 y Fk(j)s(i)1559 979 y Fo(;)g(l)20
b Ft(+)e Fo(s)g Ft(+)g(1\))p Fl(g)k(j)h Fo(v)2088 991
y Fk(i)2139 979 y Fl(2)h Fo(C)2277 991 y Fk(j)2312 979
y Fl(g)18 b([)958 1109 y(ff)p Ft(\()p Fo(d)1117 1121
y Fk(j)1152 1109 y Fo(;)c(l)20 b Ft(+)e(2)g Fl(\001)g
Ft(\()p Fo(n)h Ft(+)f(1\))g(+)g Fo(s)p Ft(\))p Fo(;)c
Ft(\()p Fo(e)1956 1121 y Fk(j)s(i)2015 1109 y Fo(;)g(l)19
b Ft(+)f(2)g Fl(\001)h Ft(\()p Fo(n)f Ft(+)g(1\))h(+)f
Fo(s)g Ft(+)g(1\))p Fl(g)k(j)958 1238 y(:)p Fo(v)1053
1250 y Fk(i)1105 1238 y Fl(2)h Fo(C)1242 1250 y Fk(j)1277
1238 y Fl(g)0 1462 y Fu(Pro)s(of:)75 b Ft(The)25 b(sc)n(hedule)e(for)h
(the)h(request)f(asso)r(ciated)f(with)h Fo(C)2014 1474
y Fk(j)2074 1462 y Ft(m)n(ust)g(start)g(with)h(a)f(read)f(from)h
Fo(d)3141 1474 y Fk(j)3176 1462 y Ft(.)36 b(F)-7 b(rom)24
b Fm(SA)-6 b(T2MigSc)p Ft(,)0 1591 y(w)n(e)27 b(conclude)f(that)i
(there)f(are)f(exactly)g Fo(c)h Ft(time)g(in)n(terv)-5
b(als)27 b(in)g Fo(A)g Ft(with)h(bandwidth)f(a)n(v)-5
b(ailable)26 b(in)h(disk)g Fo(d)3302 1603 y Fk(j)3337
1591 y Ft(.)37 b(Moreo)n(v)n(er,)25 b(the)0 1721 y(time)31
b(in)n(terv)-5 b(als)30 b(with)g(bandwidth)h(a)n(v)-5
b(ailable)29 b(for)h(disk)h Fo(d)1831 1733 y Fk(j)1896
1721 y Ft(are)f Fo(l)21 b Ft(+)f Fo(s)p Ft(,)32 b(if)e
Fo(v)2381 1733 y Fk(i)2437 1721 y Fl(2)e Fo(C)2579 1733
y Fk(j)2614 1721 y Ft(,)k(or)d Fo(l)22 b Ft(+)e(2)g Fl(\001)g
Ft(\()p Fo(n)h Ft(+)e(1\))i(+)e Fo(s)p Ft(,)32 b(if)f
Fl(:)p Fo(v)3644 1733 y Fk(i)3700 1721 y Fl(2)d Fo(C)3842
1733 y Fk(j)3877 1721 y Ft(.)0 1850 y(Let)j Fo(r)j Ft(b)r(e)e(the)f
(time)h(in)n(terv)-5 b(al)31 b(when)g(the)g(read)g(is)g(sc)n(heduled.)
47 b(There)31 b(are)f(t)n(w)n(o)g(cases:)43 b(\(1\))31
b Fo(r)h Ft(=)d Fo(l)22 b Ft(+)e Fo(s)31 b Ft(for)g(some)f
Fo(i)p Ft(,)i(and)0 1980 y Fo(v)40 1992 y Fk(i)91 1980
y Fl(2)23 b Fo(C)228 1992 y Fk(j)264 1980 y Ft(;)i(or)f(\(2\))h
Fo(r)h Ft(=)c Fo(l)14 b Ft(+)e(2)g Fl(\001)g Ft(\()p
Fo(n)g Ft(+)g(1\))g(+)g Fo(s)25 b Ft(for)f(some)g Fo(i)p
Ft(,)h(and)g Fl(:)p Fo(v)1955 1992 y Fk(i)2006 1980 y
Fl(2)e Fo(C)2143 1992 y Fk(j)2179 1980 y Ft(.)36 b(Consider)23
b(case)h(\(1\):)35 b(F)-7 b(rom)25 b(the)f(construction)g(of)h
Fo(A)0 2109 y Ft(\(T)-7 b(ransformation)22 b Fm(SA)-6
b(T2MigSc)p Ft(\))24 b(w)n(e)f(conclude)g(that)g(there)g(will)g(b)r(e)h
(bandwidth)g(a)n(v)-5 b(ailable)22 b(at)h(driv)n(e)f
Fo(d)3287 2121 y Fk(j)s(i)3369 2109 y Ft(during)h(in)n(terv)-5
b(al)0 2239 y Fo(r)21 b Ft(+)c(1)27 b(and)g(there)h(will)f(not)h(b)r(e)
f(memory)g(a)n(v)-5 b(ailable)26 b(at)h(instan)n(t)g
Fo(r)21 b Ft(+)d(2.)36 b(Moreo)n(v)n(er,)25 b Fo(d)2714
2251 y Fk(j)s(i)2800 2239 y Ft(is)i(an)g(alternativ)n(e)f(target)h(for)
g(the)0 2368 y(migration.)41 b(Therefore,)29 b(the)h(sc)n(hedule)f(m)n
(ust)g(\014nish)h(with)g(a)f(write)g(to)h(disk)f Fo(d)2524
2380 y Fk(j)s(i)2612 2368 y Ft(at)h(in)n(terv)-5 b(al)28
b Fo(r)23 b Ft(+)c(1.)42 b(Similar)29 b(argumen)n(t)0
2498 y(can)h(b)r(e)i(applied)f(to)f(case)g(\(2\).)47
b(In)31 b(conclusion,)g(the)h(p)r(ossible)e(migration)g(sc)n(hedules)g
(for)g(the)i(request)e(asso)r(ciated)g(with)0 2627 y
Fo(C)59 2639 y Fk(j)122 2627 y Ft(are)d(the)h Fo(c)f
Ft(alternativ)n(es)f(describ)r(ed)i(ab)r(o)n(v)n(e.)p
1550 2603 47 4 v 1550 2652 4 50 v 1593 2652 V 1550 2655
47 4 v 0 2818 a Fu(Lemma)44 b(4.1:)134 b Ft(Let)40 b
Fo(M)t(;)14 b(A;)g(N)50 b Ft(b)r(e)41 b(the)g(output)g(of)f
Fo(S)5 b(AT)12 b Ft(2)p Fo(M)d(ig)s(S)c(c)p Ft(\()p Fo(C)2376
2830 y Fn(1)2411 2818 y Fo(;)14 b(:)g(:)g(:)g(;)g(C)2655
2830 y Fk(n)2700 2818 y Fo(;)g(v)2777 2830 y Fn(1)2814
2818 y Fo(;)g(:)g(:)g(:)g(;)g(v)3039 2830 y Fk(k)3080
2818 y Ft(\).)76 b(If)41 b(there)f(is)h(a)f(truth)0 2947
y(assignmen)n(t)f(for)g(v)-5 b(ariables)39 b Fl(f)p Fo(v)1018
2959 y Fn(1)1055 2947 y Fo(;)14 b(:)g(:)g(:)f(;)h(v)1279
2959 y Fk(k)1320 2947 y Fl(g)40 b Ft(that)g(mak)n(es)f(all)h(clauses)f
Fo(C)2333 2959 y Fn(1)2370 2947 y Fo(;)14 b(:)g(:)g(:)g(;)g(C)2614
2959 y Fk(n)2699 2947 y Ft(true,)43 b(then)d(there)g(is)g(a)f
(migrations)0 3077 y(sc)n(hedule)27 b(for)g Fo(M)37 b
Ft(on)27 b Fo(A)h Ft(during)f(in)n(terv)-5 b(al)27 b([0)p
Fo(;)14 b(N)9 b Ft(].)0 3292 y Fu(Pro)s(of:)134 b Ft(Let)40
b Fo(a)h Ft(b)r(e)f(a)g(truth)h(assignmen)n(t)e(that)i(mak)n(es)e(all)h
(clauses)g Fo(C)2449 3304 y Fn(1)2486 3292 y Fo(;)14
b(:)g(:)g(:)g(;)g(C)2730 3304 y Fk(n)2816 3292 y Ft(true.)75
b(Consider)39 b(the)i(follo)n(wing)0 3421 y(migrations)26
b(sc)n(hedule)h(for)h Fo(M)9 b Ft(:)78 3653 y(\(i\))43
b(F)-7 b(or)34 b(eac)n(h)h(v)-5 b(ariable)35 b Fo(v)919
3665 y Fk(i)946 3653 y Ft(:)53 b(if)36 b Fo(a)p Ft(\()p
Fo(v)1222 3665 y Fk(i)1250 3653 y Ft(\))g(is)f(true,)j(then)e(consider)
e(the)i(sc)n(hedule)f(in)h(Lemma)f(A.1)h(\(b\))g(for)f(the)h(request)
208 3782 y(asso)r(ciated)26 b(with)i Fo(v)832 3794 y
Fk(i)860 3782 y Ft(.)37 b(Otherwise,)27 b(consider)f(the)i(sc)n(hedule)
f(in)h(Lemma)g(A.1)f(\(a\).)55 3978 y(\(ii\))43 b(F)-7
b(or)24 b(eac)n(h)g(clause)g Fo(C)839 3990 y Fk(j)875
3978 y Ft(:)35 b(let)26 b Fo(v)1091 3990 y Fk(i)1143
3978 y Ft(b)r(e)g(the)f(v)-5 b(ariable)24 b(suc)n(h)h(that)g(either)g
Fo(a)p Ft(\()p Fo(v)2414 3990 y Fk(i)2442 3978 y Ft(\))g(is)g(true)g
(and)g Fo(v)2952 3990 y Fk(i)3003 3978 y Fl(2)e Fo(C)3140
3990 y Fk(j)3200 3978 y Ft(or)h Fo(a)p Ft(\()p Fo(v)3415
3990 y Fk(i)3443 3978 y Ft(\))i(is)f(false)f(and)208
4108 y Fl(:)p Fo(v)303 4120 y Fk(i)354 4108 y Fl(2)f
Fo(C)491 4120 y Fk(j)527 4108 y Ft(.)36 b(Let)27 b Fo(l)e
Ft(=)d(4)17 b Fl(\001)g Ft(\()p Fo(n)g Ft(+)g(1\))g Fl(\001)g
Ft(\()p Fo(i)g Fl(\000)g Ft(1\))27 b(and)f Fo(s)d Ft(=)g(2)17
b Fl(\001)g Ft(\()p Fo(j)22 b Fl(\000)17 b Ft(1\).)36
b(If)28 b Fo(a)p Ft(\()p Fo(v)2454 4120 y Fk(i)2482 4108
y Ft(\))f(is)g(true)g(and)g Fo(v)3000 4120 y Fk(i)3050
4108 y Fl(2)d Fo(C)3188 4120 y Fk(j)3223 4108 y Ft(,)j(then)h(consider)
e(the)208 4237 y(sc)n(hedule)h Fl(f)p Ft(\()p Fo(d)655
4249 y Fk(j)690 4237 y Fo(;)14 b(l)19 b Ft(+)f Fo(s)p
Ft(\))p Fo(;)c Ft(\()p Fo(d)1037 4249 y Fk(j)s(i)1096
4237 y Fo(;)g(l)19 b Ft(+)f Fo(s)g Ft(+)g(1\))p Fl(g)27
b Ft(for)g(the)g(request)g(asso)r(ciated)f(with)i Fo(C)2744
4249 y Fk(j)2780 4237 y Ft(.)36 b(If)28 b Fo(a)p Ft(\()p
Fo(v)3038 4249 y Fk(i)3066 4237 y Ft(\))g(is)g(false)f(and)g
Fl(:)p Fo(v)3653 4249 y Fk(i)3704 4237 y Fl(2)d Fo(C)3842
4249 y Fk(j)3877 4237 y Ft(,)208 4367 y(then)g(consider)g(the)g(sc)n
(hedule)g Fl(f)p Ft(\()p Fo(d)1297 4379 y Fk(j)1332 4367
y Fo(;)14 b(l)g Ft(+)e(2)g Fl(\001)g Ft(\()p Fo(n)g Ft(+)g(1\))g(+)g
Fo(s)p Ft(\))p Fo(;)i Ft(\()p Fo(e)2087 4379 y Fk(j)s(i)2143
4367 y Fo(;)g(l)g Ft(+)e(2)g Fl(\001)g Ft(\()p Fo(n)g
Ft(+)g(1\))g(+)g Fo(s)g Ft(+)g(1\))p Fl(g)20 b Ft(for)k(the)h(request)e
(asso)r(ciated)208 4496 y(with)28 b Fo(C)456 4508 y Fk(j)491
4496 y Ft(.)177 4728 y(T)-7 b(o)23 b(pro)n(v)n(e)e(that)i(the)g(ab)r(o)
n(v)n(e)e(is)i(a)f(sc)n(hedule)h(of)f(migrations)g(for)g
Fo(M)31 b Ft(on)23 b Fo(A)p Ft(,)h(it)f(su\016ces)g(to)f(sho)n(w)g
(that)h(the)g(sc)n(hedules)g(for)0 4858 y(eac)n(h)f(migration)f(do)i
(not)f(o)n(v)n(erlap)f(eac)n(h)h(other)g(\(i.e.,)i(they)f(do)g(not)f
(comp)r(ete)h(for)f(neither)h(disk)f(bandwidth)i(nor)e(memory\).)0
4987 y(The)31 b(sc)n(hedules)f(of)g(migrations)g(asso)r(ciated)f(with)i
(v)-5 b(ariables)30 b(span)g(disjoin)n(t)h(p)r(erio)r(ds)f(of)g(time:)
44 b(F)-7 b(or)30 b(eac)n(h)g Fo(i)g Ft(and)h Fo(j)k
Ft(suc)n(h)0 5117 y(that)28 b Fo(i)23 b Fl(6)p Ft(=)f
Fo(j)5 b Ft(,)28 b(the)g(follo)n(wing)e(time)i(in)n(terv)-5
b(als)27 b(are)g(disjoin)n(t:)1908 5656 y(22)p eop
%%Page: 23 24
23 23 bop 227 98 a Ft(\(4)18 b Fl(\001)h Ft(\()p Fo(n)f
Ft(+)g(1\))h Fl(\001)f Ft(\()p Fo(i)g Fl(\000)g Ft(1\))p
Fo(;)c Ft(4)k Fl(\001)h Ft(\()p Fo(n)f Ft(+)g(1\))g Fl(\001)h
Ft(\()p Fo(i)f Fl(\000)g Ft(1\))h(+)f(2)g Fl(\001)g Ft(\()p
Fo(n)h Ft(+)f(1\)\))227 227 y(\(4)g Fl(\001)h Ft(\()p
Fo(n)f Ft(+)g(1\))h Fl(\001)f Ft(\()p Fo(i)g Fl(\000)g
Ft(1\))h(+)f(2)g Fl(\001)g Ft(\()p Fo(n)h Ft(+)f(1\))p
Fo(;)c Ft(4)j Fl(\001)i Ft(\()p Fo(n)g Ft(+)f(1\))g Fl(\001)g
Fo(i)p Ft(\))227 357 y(\(4)g Fl(\001)h Ft(\()p Fo(n)f
Ft(+)g(1\))h Fl(\001)f Ft(\()p Fo(j)24 b Fl(\000)18 b
Ft(1\))p Fo(;)c Ft(4)j Fl(\001)i Ft(\()p Fo(n)g Ft(+)f(1\))g
Fl(\001)g Ft(\()p Fo(j)24 b Fl(\000)18 b Ft(1\))g(+)g(2)g
Fl(\001)h Ft(\()p Fo(n)f Ft(+)g(1\)\))227 486 y(\(4)g
Fl(\001)h Ft(\()p Fo(n)f Ft(+)g(1\))h Fl(\001)f Ft(\()p
Fo(j)24 b Fl(\000)18 b Ft(1\))g(+)g(2)g Fl(\001)h Ft(\()p
Fo(n)f Ft(+)g(1\))p Fo(;)c Ft(4)k Fl(\001)g Ft(\()p Fo(n)h
Ft(+)f(1\))g Fl(\001)h Fo(j)5 b Ft(\))177 627 y(Similarly)-7
b(,)27 b(the)h(sc)n(hedules)f(of)h(migrations)e(asso)r(ciated)g(with)i
(clauses)f(span)g(disjoin)n(t)h(p)r(erio)r(ds)f(of)h(time.)177
792 y(Supp)r(ose)d(that)f(the)h(sc)n(hedule)f(for)g(a)g(v)-5
b(ariable)24 b Fo(v)1682 804 y Fk(i)1734 792 y Ft(o)n(v)n(erlaps)e(the)
j(sc)n(hedule)f(for)g(a)g(clause)g Fo(C)3010 804 y Fk(j)3045
792 y Ft(.)36 b(Therefore,)24 b(either)h Fo(v)3774 804
y Fk(i)3826 792 y Ft(or)0 922 y Fl(:)p Fo(v)95 934 y
Fk(i)143 922 y Ft(mak)n(es)18 b Fo(C)443 934 y Fk(j)498
922 y Ft(true.)34 b(If)21 b Fo(a)p Ft(\()p Fo(v)895 934
y Fk(i)923 922 y Ft(\))e(is)h(true,)h(then)f(the)g(sc)n(hedule)f(for)g
Fo(v)2039 934 y Fk(i)2087 922 y Ft(spans)g(p)r(erio)r(d)g(\(4)r
Fl(\001)r Ft(\()p Fo(n)r Ft(+)r(1\))r Fl(\001)r Ft(\()p
Fo(i)r Fl(\000)r Ft(1\))r(+)r(2)r Fl(\001)r Ft(\()p Fo(n)r
Ft(+)r(1\))p Fo(;)14 b Ft(4)r Fl(\001)r Ft(\()p Fo(n)r
Ft(+)r(1\))r Fl(\001)r Fo(i)p Ft(\))0 1051 y(and)29 b(the)h(sc)n
(hedule)g(for)f Fo(C)829 1063 y Fk(j)894 1051 y Ft(spans)g(p)r(erio)r
(d)g(\(4)20 b Fl(\001)g Ft(\()p Fo(n)g Ft(+)f(1\))h Fl(\001)f
Ft(\()p Fo(i)h Fl(\000)g Ft(1\))f(+)g(2)h Fl(\001)g Ft(\()p
Fo(j)25 b Fl(\000)19 b Ft(1\))p Fo(;)14 b Ft(4)19 b Fl(\001)h
Ft(\()p Fo(n)g Ft(+)f(1\))h Fl(\001)g Ft(\()p Fo(i)f
Fl(\000)h Ft(1\))f(+)h(2)f Fl(\001)h Ft(\()p Fo(j)25
b Fl(\000)19 b Ft(1\))h(+)f(1\).)0 1181 y(Ho)n(w)n(ev)n(er,)26
b(these)j(t)n(w)n(o)e(p)r(erio)r(ds)h(are)f(disjoin)n(t.)39
b(Hence,)28 b(it)h(con)n(tradicts)e(the)h(assumption)g(that)g(the)h(sc)
n(hedules)e(for)h Fo(v)3710 1193 y Fk(i)3766 1181 y Ft(and)0
1310 y Fo(C)59 1322 y Fk(j)119 1310 y Ft(o)n(v)n(erlap.)34
b(Similarly)23 b(for)h(the)h(case)f(where)f Fo(a)p Ft(\()p
Fo(v)1577 1322 y Fk(i)1606 1310 y Ft(\))h(is)h(false,)f(w)n(e)g(can)g
(conclude)g(that)h(the)g(sc)n(hedules)f(w)n(ould)g(not)g(o)n(v)n
(erlap.)177 1476 y(Therefore,)36 b(if)f(there)g(is)g(a)f(truth)i
(assignmen)n(t)e(for)g(v)-5 b(ariables)34 b Fl(f)p Fo(v)2284
1488 y Fn(1)2321 1476 y Fo(;)14 b(:)g(:)g(:)f(;)h(v)2545
1488 y Fk(k)2586 1476 y Fl(g)35 b Ft(that)g(mak)n(es)f(all)g(clauses)g
Fo(C)3573 1488 y Fn(1)3611 1476 y Fo(;)14 b(:)g(:)g(:)g(;)g(C)3855
1488 y Fk(n)0 1605 y Ft(true,)28 b(then)g(there)f(is)h(a)f(sc)n(hedule)
g(of)h(migrations)e(for)h Fo(M)36 b Ft(on)27 b Fo(A)h
Ft(during)f(p)r(erio)r(d)h([0)p Fo(;)14 b(N)9 b Ft(].)p
2820 1580 47 4 v 2820 1630 4 50 v 2863 1630 V 2820 1633
47 4 v 177 1795 a(W)-7 b(e)29 b(no)n(w)e(pro)n(v)n(e)g(the)h(other)g
(direction,)g(if)g(the)h(migrations)d(sc)n(heduling)i(instance)g
(yielded)g(b)n(y)g Fo(S)5 b(AT)12 b Ft(2)p Fo(M)d(ig)s(S)c(c)25
b Ft(has)i(a)0 1925 y(solution)g(then)h(the)g(input)h(SA)-7
b(T)28 b(instance)f(has)g(a)g(solution.)0 2090 y Fu(Lemma)k(4.2:)85
b Ft(Let)29 b Fo(M)t(;)14 b(A;)g(N)38 b Ft(b)r(e)30 b(the)f(output)h
(of)f Fo(S)5 b(AT)12 b Ft(2)p Fo(M)d(ig)s(S)c(c)p Ft(\()p
Fo(C)2246 2102 y Fn(1)2281 2090 y Fo(;)14 b(:)g(:)g(:)g(;)g(C)2525
2102 y Fk(n)2570 2090 y Fo(;)g(v)2647 2102 y Fn(1)2684
2090 y Fo(;)g(:)g(:)g(:)g(;)g(v)2909 2102 y Fk(k)2950
2090 y Ft(\).)42 b(If)30 b(there)f(is)g(a)f(sc)n(hedule)h(of)0
2219 y(migrations)23 b(for)h Fo(M)33 b Ft(on)24 b Fo(A)p
Ft(,)h(then)g(there)f(is)h(a)f(truth)g(assignmen)n(t)g(for)f
Fl(f)p Fo(v)2253 2231 y Fn(1)2290 2219 y Fo(;)14 b(:)g(:)g(:)g(;)g(v)
2515 2231 y Fk(k)2556 2219 y Fl(g)24 b Ft(that)h(mak)n(es)e(all)h
(clauses)f Fl(f)p Fo(C)3532 2231 y Fn(1)3569 2219 y Fo(;)14
b(:)g(:)g(:)g(;)g(C)3813 2231 y Fk(n)3858 2219 y Fl(g)0
2349 y Ft(true.)0 2564 y Fu(Pro)s(of:)73 b Ft(The)22
b(sc)n(hedules)f(of)h(migrations)f(asso)r(ciated)g(with)h(v)-5
b(ariables)21 b(in)h Fo(S)5 b(AT)12 b(R)q(epS)5 b(c)20
b Ft(follo)n(w)i(either)f(pattern)h(of)g(Lemma)0 2694
y(A.1.)35 b(Therefore,)23 b(a)f(v)-5 b(alid)23 b(truth)g(assignmen)n(t)
f Fo(a)h Ft(is)f(as)h(follo)n(ws:)33 b Fo(a)p Ft(\()p
Fo(v)2137 2706 y Fk(i)2165 2694 y Ft(\))23 b(is)g(true)g(if)g(the)g
(migration)f(sc)n(hedule)g(for)h(the)g(request)0 2823
y(asso)r(ciated)i(with)i Fo(v)622 2835 y Fk(i)677 2823
y Ft(follo)n(ws)e(the)i(pattern)f(in)h(Lemma)f(A.1)g(\(b\),)i(and)e(is)
h(false)f(if)h(it)g(follo)n(ws)e(the)i(pattern)f(in)h(Lemma)f(A.1)0
2953 y(\(a\).)177 3118 y(W)-7 b(e)31 b(no)n(w)f(sho)n(w)g(that)h
Fo(a)g Ft(mak)n(es)f(all)g(clauses)g Fl(f)p Fo(C)1719
3130 y Fn(1)1756 3118 y Fo(;)14 b(:)g(:)g(:)g(;)g(C)2000
3130 y Fk(n)2045 3118 y Fl(g)31 b Ft(true.)46 b(Supp)r(ose)31
b(that)g(there)f(exists)h(a)f(clause)g Fo(C)3674 3130
y Fk(j)3740 3118 y Ft(suc)n(h)0 3247 y(that)35 b(all)g(its)g(disjuncts)
g(are)f(false.)58 b(The)35 b(migration)f(sc)n(hedule)h(asso)r(ciated)e
(with)j Fo(C)2736 3259 y Fk(j)2806 3247 y Ft(m)n(ust)f(b)r(e)g(either)g
(\(Lemma)g(A.2\):)0 3377 y(\(a\))i Fl(f)p Ft(\()p Fo(d)260
3389 y Fk(j)295 3377 y Fo(;)14 b Ft(4)23 b Fl(\001)i
Ft(\()p Fo(n)f Ft(+)g(1\))g Fl(\001)h Ft(\()p Fo(i)f
Fl(\000)g Ft(1\))g(+)g(2)g Fl(\001)g Ft(\()p Fo(j)30
b Fl(\000)24 b Ft(1\)\))p Fo(;)14 b Ft(\()p Fo(d)1663
3389 y Fk(j)s(i)1722 3377 y Fo(;)g Ft(4)24 b Fl(\001)g
Ft(\()p Fo(n)h Ft(+)f(1\))g Fl(\001)g Ft(\()p Fo(i)g
Fl(\000)g Ft(1\))g(+)g(2)g Fl(\001)h Ft(\()p Fo(j)k Fl(\000)24
b Ft(1\))g(+)g(1\))p Fl(g)p Ft(,)38 b(if)f Fo(v)3361
3389 y Fk(i)3427 3377 y Fl(2)h Fo(C)3579 3389 y Fk(j)3615
3377 y Ft(;)j(or)35 b(\(b\))0 3506 y Fl(f)p Ft(\()p Fo(d)117
3518 y Fk(j)152 3506 y Fo(;)14 b Ft(4)d Fl(\001)g Ft(\()p
Fo(n)g Ft(+)g(1\))g Fl(\001)g Ft(\()p Fo(i)g Fl(\000)g
Ft(1\))g(+)f(2)g Fl(\001)h Ft(\()p Fo(n)f Ft(+)h(1)o(\))g(+)f(2)g
Fl(\001)h Ft(\()p Fo(j)e Fl(\000)i Ft(1\)\))p Fo(;)j
Ft(\()p Fo(e)1736 3518 y Fk(j)s(i)1794 3506 y Fo(;)g
Ft(4)d Fl(\001)g Ft(\()p Fo(n)g Ft(+)g(1\))g Fl(\001)g
Ft(\()p Fo(i)g Fl(\000)g Ft(1\))g(+)f(2)g Fl(\001)h Ft(\()p
Fo(n)f Ft(+)h(1)o(\))g(+)f(2)g Fl(\001)h Ft(\()p Fo(j)e
Fl(\000)i Ft(1\))g(+)g(1\))p Fl(g)p Ft(,)22 b(if)i Fl(:)p
Fo(v)3653 3518 y Fk(i)3704 3506 y Fl(2)g Fo(C)3842 3518
y Fk(j)3877 3506 y Ft(.)0 3636 y(Supp)r(ose)h(that)h(the)g(sc)n(hedule)
f(of)h Fo(C)1122 3648 y Fk(j)1182 3636 y Ft(is)g(as)e(describ)r(ed)i
(in)f(\(a\).)37 b(Then)25 b(the)h(migration)e(sc)n(hedule)h(asso)r
(ciated)g(with)h Fo(v)3669 3648 y Fk(i)3722 3636 y Ft(m)n(ust)0
3765 y(follo)n(w)31 b(the)h(pattern)f(in)h(Lemma)g(A.1)f(\(b\).)50
b(Otherwise,)32 b(there)f(w)n(ould)g(b)r(e)h(a)f(con\015ict,)i(for)e
(the)h(disk)g(bandwidth)g(of)f Fo(d)3841 3777 y Fk(j)s(i)0
3895 y Ft(and)c(the)g(memory)f(frame)h(a)n(v)-5 b(ailable)26
b(at)g(instan)n(t)h(4)17 b Fl(\001)g Ft(\()p Fo(n)h Ft(+)f(1\))g
Fl(\001)g Ft(\()p Fo(i)g Fl(\000)g Ft(1\))g(+)g(2)f Fl(\001)i
Ft(\()p Fo(j)k Fl(\000)17 b Ft(1\))g(+)g(1,)27 b(b)r(et)n(w)n(een)f
(the)i(sc)n(hedules)e(for)h Fo(C)3865 3907 y Fk(j)0 4024
y Ft(and)j Fo(v)204 4036 y Fk(i)231 4024 y Ft(.)44 b(Therefore)28
b Fo(a)p Ft(\()p Fo(v)792 4036 y Fk(i)820 4024 y Ft(\))j(is)e(true,)h
(according)e(to)i(the)g(de\014nition)g(of)g Fo(a)g Ft(describ)r(ed)f
(ab)r(o)n(v)n(e.)42 b(Ho)n(w)n(ev)n(er)28 b(as)h(stated)h(in)g(\(a\),)0
4154 y Fo(v)40 4166 y Fk(i)91 4154 y Fl(2)23 b Fo(C)228
4166 y Fk(j)290 4154 y Ft(then)j Fo(C)536 4166 y Fk(j)597
4154 y Ft(is)g(true.)36 b(This)26 b(con)n(tradicts)e(the)i(assumption)g
(that)g(all)f(disjuncts)h(in)g Fo(C)2870 4166 y Fk(j)2932
4154 y Ft(are)e(false.)36 b(Similarly)-7 b(,)26 b(w)n(e)f(can)0
4284 y(reac)n(h)h(a)i(con)n(tradiction)e(when)i(the)g(sc)n(hedule)f
(for)g Fo(C)1670 4296 y Fk(j)1733 4284 y Ft(is)g(as)g(describ)r(ed)h
(in)g(\(b\).)177 4449 y(Therefore,)f Fo(a)g Ft(mak)n(es)g(all)g
(clauses)g Fl(f)p Fo(C)1392 4461 y Fn(1)1429 4449 y Fo(;)14
b(:)g(:)g(:)f(;)h(C)1672 4461 y Fk(n)1718 4449 y Fl(g)27
b Ft(true.)p 1995 4424 V 1995 4474 4 50 v 2038 4474 V
1995 4477 47 4 v 0 4829 a Fp(B)134 b(Reduction)45 b(from)h(SA)-11
b(T)43 b(to)i(Resource)h(Sc)l(heduling)0 5076 y Ft(This)27
b(section)g(sho)n(ws)e(that)j(giv)n(en)e(an)h(instance)f
Fo(C)1595 5088 y Fn(1)1633 5076 y Fo(;)14 b(:)g(:)g(:)g(;)g(C)1877
5088 y Fk(n)1922 5076 y Fo(;)g(v)1999 5088 y Fn(1)2036
5076 y Fo(;)g(:)g(:)g(:)g(;)g(v)2261 5088 y Fk(k)2329
5076 y Ft(of)27 b(SA)-7 b(T,)28 b(there)f(is)f(a)h(one-time-in)n(terv)
-5 b(al-latency)0 5206 y(resource)27 b(sc)n(hedule)i(for)f
Fo(S)5 b(AT)12 b Ft(2)p Fo(R)q(esS)5 b(c)p Ft(\()p Fo(C)1331
5218 y Fn(1)1366 5206 y Fo(;)14 b(:)g(:)g(:)g(;)g(C)1610
5218 y Fk(n)1655 5206 y Fo(;)g(v)1732 5218 y Fn(1)1770
5206 y Fo(;)g(:)g(:)g(:)f(;)h(v)1994 5218 y Fk(k)2035
5206 y Ft(\))30 b(if)f(and)g(only)f(if)i Fo(S)5 b(AT)12
b Ft(2)p Fo(M)d(ig)s(S)c(c)p Ft(\()p Fo(C)3164 5218 y
Fn(1)3199 5206 y Fo(;)14 b(:)g(:)g(:)f(;)h(C)3442 5218
y Fk(n)3488 5206 y Fo(;)g(v)3565 5218 y Fn(1)3602 5206
y Fo(;)g(:)g(:)g(:)g(;)g(v)3827 5218 y Fk(k)3868 5206
y Ft(\))0 5335 y(has)27 b(a)g(solution.)1908 5656 y(23)p
eop
%%Page: 24 25
24 24 bop 0 90 a Fu(Lemma)30 b(B.1)-7 b(:)118 b Ft(Let)39
b Fo(M)t(;)14 b(A;)g(N)48 b Ft(b)r(e)39 b(the)h(output)f(of)g
Fo(S)5 b(AT)12 b Ft(2)p Fo(M)d(ig)s(S)c(c)p Ft(\()p Fo(C)2350
102 y Fn(1)2385 90 y Fo(;)14 b(:)g(:)g(:)f(;)h(C)2628
102 y Fk(n)2674 90 y Fo(;)g(v)2751 102 y Fn(1)2788 90
y Fo(;)g(:)g(:)g(:)g(;)g(v)3013 102 y Fk(k)3054 90 y
Ft(\).)71 b(The)39 b(transformation)0 220 y Fo(S)5 b(AT)12
b Ft(2)p Fo(R)q(esS)5 b(c)31 b Ft(pro)r(duces)j(a)f(displa)n(y)h(sc)n
(hedule)f Fl(f)p Fo(P)1637 232 y Fn(0)1674 220 y Fo(;)14
b(:)g(:)g(:)g(;)g(P)1912 232 y Fk(m)p Fg(\000)p Fn(1)2060
220 y Fl(g)p Ft(,)35 b(a)f(system)g(con\014guration)e(\()p
Fo(B)t(;)14 b(C)q(;)g(D)r Ft(\))35 b(and)f(an)g(initial)0
349 y(placemen)n(t)j(of)g(data)f Fl(P)44 b Ft(suc)n(h)37
b(that)g(an)n(y)f(resource)f(sc)n(hedule)i(for)g Fl(f)p
Fo(P)2265 361 y Fn(0)2302 349 y Fo(;)14 b(:)g(:)g(:)f(;)h(P)2539
361 y Fk(m)p Fg(\000)p Fn(1)2688 349 y Fl(g)36 b Ft(that)h(yields)g(a)g
(one-time)g(in)n(terv)-5 b(al)0 479 y(latency)27 b(m)n(ust)h(sc)n
(hedule)f(migrations)f(for)h Fo(M)37 b Ft(during)27 b(time)h(in)n(terv)
-5 b(al)27 b([0)p Fo(;)14 b(N)9 b Ft(].)0 727 y Fu(Pro)s(of:)74
b Ft(The)23 b(system)f(m)n(ust)h(migrate)f(the)i(pages)d(that)j(cannot)
e(retriev)n(e)g(during)g(in)n(terv)-5 b(als)22 b Fo(N)t(;)14
b(:)g(:)g(:)g(;)g(m)9 b Fl(\000)g Ft(1)22 b(\(Observ)-5
b(ation)0 857 y(1)31 b(\(3\)\))g(b)r(efore)g(instan)n(t)h
Fo(N)9 b Ft(.)47 b(Hence,)33 b(for)d(eac)n(h)h Fo(i)d
Fl(2)i Ft([1)p Fo(;)14 b(k)s Ft(])31 b(the)g(system)g(m)n(ust)g
(migrate)g(a)g(page)f(from)h(driv)n(e)f Fo(s)3528 869
y Fk(i)3587 857 y Ft(to)h(either)0 986 y Fo(t)30 998
y Fk(i)58 986 y Ft(,)e Fo(u)158 998 y Fk(i)185 986 y
Ft(,)h(or)e Fo(w)400 998 y Fk(N)6 b Fn(+)p Fk(i)567 986
y Ft(b)r(efore)28 b(in)n(terv)-5 b(al)29 b Fo(N)9 b Ft(.)40
b(And,)30 b(for)f(eac)n(h)f Fo(i)d Fl(2)g Ft([1)p Fo(;)14
b(n)p Ft(])29 b(the)g(system)g(m)n(ust)g(migrate)f(a)h(page)f(from)g
(driv)n(e)g Fo(d)3769 998 y Fk(i)3826 986 y Ft(to)0 1116
y(either)f(driv)n(e)g(in)h(the)g(target)f(set)g(of)h(the)g(migration)e
(request)h(asso)r(ciated)g(with)h Fo(C)2606 1128 y Fk(i)2661
1116 y Ft(or)f(to)h Fo(w)2924 1128 y Fk(N)6 b Fn(+)p
Fk(k)q Fn(+)p Fk(i)3149 1116 y Ft(,)28 b(b)r(efore)f(in)n(terv)-5
b(al)27 b Fo(N)9 b Ft(.)177 1281 y(The)40 b(sc)n(hedule)f
Fo(R)q(et)f Ft(in)i(Observ)-5 b(ation)38 b(1)h(retriev)n(es)f(eac)n(h)g
(page)h(in)h(the)f(displa)n(y)g(sc)n(hedule)g(only)g(once)g(\(Column)14
1389 y(^)0 1410 y Fo(S)51 1422 y Fk(i)p Fn(+1)184 1410
y Fl(\000)284 1389 y Ft(^)270 1410 y Fo(S)321 1422 y
Fk(i)381 1410 y Ft(in)33 b(T)-7 b(able)32 b(2\))g(and)g(do)r(es)g(not)g
(pre-fetc)n(h)g(pages)g(\(Observ)-5 b(ation)31 b(1)h(\(2\)\).)51
b(Therefore,)32 b(an)n(y)g(resource)e(sc)n(hedule)0 1540
y(w)n(ould)e(require)f(at)h(least)g(the)g(disk)g(bandwidth)h(required)e
(b)n(y)h Fo(R)q(et)f Ft(b)r(efore)h(in)n(terv)-5 b(al)28
b Fo(N)37 b Ft(to)28 b(satisfy)g(the)g(displa)n(y)f(sc)n(hedule)0
1669 y(during)d([0)p Fo(;)14 b(N)9 b Ft(].)36 b(Then)25
b(the)g(source,)f(target)g(and)h(in)n(termediate)f(driv)n(es)g(in)h
(the)g(sc)n(hedule)g(of)g(a)f(migration)g(m)n(ust)h(ha)n(v)n(e)e(disk)0
1799 y(bandwidth)h(a)n(v)-5 b(ailable)22 b(in)i Fo(A)f
Ft(during)g([0)p Fo(;)14 b(N)9 b Ft(].)35 b(Otherwise,)24
b(the)f(bandwidth)h(requiremen)n(ts)e(of)i(a)f(disk)g(driv)n(e)g(w)n
(ould)f(exceed)0 1928 y(the)34 b(disk)f(bandwidth)h(a)n(v)-5
b(ailabilit)n(y)32 b(during)h([0)p Fo(;)14 b(N)9 b Ft(].)54
b(Th)n(us,)35 b(disk)e(driv)n(es)f Fo(w)2451 1940 y Fk(i)2513
1928 y Ft(for)h Fo(i)f Fl(2)h Ft([)p Fo(N)e Ft(+)22 b(1)p
Fo(;)14 b(m)p Ft(])33 b(cannot)g(b)r(e)h(a)f(target)0
2058 y(driv)n(e)27 b(of)g(a)h(migration.)35 b(Therefore,)27
b(the)h(system)f(m)n(ust)h(sc)n(hedule)f(migrations)f(for)h
Fo(M)37 b Ft(b)r(efore)27 b(instan)n(t)g Fo(N)9 b Ft(.)177
2223 y(Migrations)23 b(requests)h(in)h Fo(M)33 b Ft(m)n(ust)25
b(b)r(e)g(sc)n(heduled)g(after)f(instan)n(t)g(0)h(otherwise)e(the)i
(latency)g(w)n(ould)f(b)r(e)h(higher)f(than)0 2353 y(one)32
b(time)h(in)n(terv)-5 b(al.)50 b(Starting)31 b(the)i(migration)e(sc)n
(hedule)h(at)g(in)n(terv)-5 b(al)32 b Fl(\000)p Ft(1)f(w)n(ould)h
(increase)f(the)h(latency)g(b)r(ecause:)46 b(\(1\))0
2482 y(the)30 b(retriev)-5 b(al)28 b(of)h(all)g(pages)f(in)h
Fo(P)1064 2494 y Fn(0)1131 2482 y Ft(w)n(ould)f(require)g(the)i(disk)f
(bandwidth)h(of)f(all)f(disks)h(except)g Fo(w)3133 2494
y Fn(0)3200 2482 y Ft(and)g(\(2\))g Fo(w)3557 2494 y
Fn(0)3624 2482 y Ft(is)g(not)g(a)0 2612 y(source)c(driv)n(e)g(for)g(an)
n(y)g(migration)f(request.)36 b(In)26 b(sum,)g(the)h(system)e(m)n(ust)h
(sc)n(hedule)f(migrations)g(for)g Fo(M)35 b Ft(during)25
b([0)p Fo(;)14 b(N)9 b Ft(].)p 3854 2587 47 4 v 3854
2637 4 50 v 3897 2637 V 3854 2640 47 4 v 0 2931 a Fu(Lemma)32
b(5.1:)85 b Ft(Let)30 b Fo(M)t(;)14 b(A;)g(N)38 b Ft(b)r(e)30
b(the)f(output)h(of)g Fo(S)5 b(AT)12 b Ft(2)p Fo(M)d(ig)s(S)c(c)p
Ft(\()p Fo(C)2249 2943 y Fn(1)2283 2931 y Fo(;)14 b(:)g(:)g(:)g(;)g(C)
2527 2943 y Fk(n)2572 2931 y Fo(;)g(v)2649 2943 y Fn(1)2687
2931 y Fo(;)g(:)g(:)g(:)f(;)h(v)2911 2943 y Fk(k)2952
2931 y Ft(\).)43 b(Let)29 b Fl(f)p Fo(P)3295 2943 y Fn(0)3333
2931 y Fo(;)14 b(:)g(:)g(:)f(;)h(P)3570 2943 y Fk(m)p
Fg(\000)p Fn(1)3718 2931 y Fl(g)p Fo(;)29 b Fl(P)7 b
Ft(,)0 3061 y Fo(B)t Ft(,)35 b Fo(C)6 b Ft(,)35 b Fo(D)g
Ft(b)r(e)e(the)h(output)f(of)g Fo(S)5 b(AT)12 b Ft(2)p
Fo(R)q(esS)5 b(c)p Ft(\()p Fo(C)1542 3073 y Fn(1)1578
3061 y Fo(;)14 b(:)g(:)g(:)f(;)h(C)1821 3073 y Fk(n)1867
3061 y Fo(;)g(v)1944 3073 y Fn(1)1981 3061 y Fo(;)g(:)g(:)g(:)g(;)g(v)
2206 3073 y Fk(k)2247 3061 y Ft(\).)53 b(If)34 b(there)f(is)g(a)f(sc)n
(hedule)h(of)g(migrations)f(for)g Fo(M)0 3190 y Ft(on)c
Fo(A)h Ft(during)f([0)p Fo(;)14 b(N)9 b Ft(],)29 b(then)g(there)f(is)h
(a)f(resource)f(sc)n(hedule)h(that)h(yields)f(a)g(one-time-in)n(terv)-5
b(al)28 b(latency)g(and)g(supp)r(orts)g(a)0 3320 y(co)r(ordinated)e
(displa)n(y)g(of)g Fl(f)p Fo(P)923 3332 y Fn(0)960 3320
y Fo(;)14 b(:)g(:)g(:)g(;)g(P)1198 3332 y Fk(m)p Fg(\000)p
Fn(1)1346 3320 y Fl(g)26 b Ft(on)h(a)f(system)h(con\014guration)e(\()p
Fo(B)t(;)14 b(C)q(;)g(D)r Ft(\))28 b(and)e(an)h(initial)f(placemen)n(t)
h(of)g(data)0 3449 y Fl(P)7 b Ft(.)0 3665 y Fu(Pro)s(of:)107
b Ft(Let)34 b Fo(S)39 b Ft(b)r(e)c(a)f(sc)n(hedule)g(of)g(migrations)e
(for)i Fo(M)43 b Ft(on)34 b Fo(A)g Ft(during)g([0)p Fo(;)14
b(N)9 b Ft(].)56 b(Construct)34 b(a)g(resource)e(sc)n(hedule)i(as)0
3794 y(follo)n(ws:)208 4026 y(Step)28 b(1:)36 b(Include)28
b(retriev)-5 b(al)27 b(sc)n(hedule)g Fo(R)q(et)g Ft(in)h(Observ)-5
b(ation)26 b(1.)208 4222 y(Step)i(2:)36 b(Change)27 b(the)h(retriev)-5
b(als)26 b(in)i Fo(R)q(et)f Ft(of)h(pages)e(in)i Fo(M)36
b Ft(to)28 b(b)r(e)g(retriev)n(ed)e(from)h(their)h(target)f(driv)n(es)f
(in)i Fo(R)q(S)5 b Ft(.)208 4418 y(Step)28 b(3:)36 b(Include)28
b(the)g(sc)n(hedule)f(of)h(migrations)e Fo(S)5 b Ft(.)0
4649 y(This)38 b(resource)e(sc)n(hedule)h(supp)r(orts)h(a)f(co)r
(ordinated)g(displa)n(y)g(of)h Fl(f)p Fo(P)2261 4661
y Fn(0)2298 4649 y Fo(;)14 b(:)g(:)g(:)f(;)h(P)2535 4661
y Fk(m)p Fg(\000)p Fn(1)2684 4649 y Fl(g)37 b Ft(that)h(yields)g(a)f
(one-time)h(in)n(terv)-5 b(al)0 4779 y(latency)e(.)p
314 4754 V 314 4804 4 50 v 357 4804 V 314 4807 47 4 v
177 4969 a(T)g(o)35 b(pro)n(v)n(e)f(the)i(other)f(direction,)h(w)n(e)f
(sho)n(w)g(that)h(sc)n(heduling)f(a)g(migration)f(for)h
Fo(r)j Fl(2)f Fo(M)44 b Ft(as)35 b(part)g(of)g(a)g(resource)0
5098 y(sc)n(hedule)k(for)f Fo(S)5 b(AT)12 b Ft(2)p Fo(R)q(esS)5
b(c)p Ft(\()p Fo(C)1026 5110 y Fn(1)1062 5098 y Fo(;)14
b(:)g(:)g(:)f(;)h(C)1305 5110 y Fk(n)1351 5098 y Fo(;)g(v)1428
5110 y Fn(1)1465 5098 y Fo(;)g(:)g(:)g(:)g(;)g(v)1690
5110 y Fk(k)1730 5098 y Ft(\))40 b(requires)e(at)h(least)f(the)i
(memory)e(required)g(b)n(y)h(the)g(migration)0 5228 y(sc)n(hedule)27
b(for)g Fo(r)k Ft(on)c Fo(A)h Ft(during)f([0)p Fo(;)14
b(N)9 b Ft(].)36 b(Where)28 b Fo(M)t(;)14 b(A;)g(N)36
b Ft(is)28 b(the)g(output)g(of)f Fo(S)5 b(AT)12 b Ft(2)p
Fo(M)d(ig)s(S)c(c)p Ft(\()p Fo(C)3002 5240 y Fn(1)3037
5228 y Fo(;)14 b(:)g(:)g(:)g(;)g(C)3281 5240 y Fk(n)3326
5228 y Fo(;)g(v)3403 5240 y Fn(1)3441 5228 y Fo(;)g(:)g(:)g(:)f(;)h(v)
3665 5240 y Fk(k)3706 5228 y Ft(\).)1908 5656 y(24)p
eop
%%Page: 25 26
25 25 bop 177 90 a Ft(Giv)n(en)26 b(a)g(migration)g(sc)n(hedule,)g(the)
h(time)g(in)n(terv)-5 b(als)25 b(when)i(the)g(reads)e(and)h(writes)g
(are)f(sc)n(heduled)h(determines)h(the)0 220 y(memory)f(requiremen)n
(ts.)35 b(The)27 b(memory)f(requiremen)n(ts)f(of)i(t)n(w)n(o)f
(migrations)f(that)i(coincide)g(in)g(the)g(time)g(in)n(terv)-5
b(al)26 b(when)0 349 y(a)h(read)g(and)g(the)h(next)g(write)g(is)f(sc)n
(heduled)g(are)g(iden)n(tical.)0 538 y Fu(De\014nition:)78
b Ft(Giv)n(en)27 b(a)g(migration)g(sc)n(hedule)711 746
y Fl(f)p Ft(\()p Fo(sour)r(ce)1026 712 y Fk(i)1054 746
y Fo(;)14 b(t)1121 712 y Fk(i)1121 766 y Fn(1)1158 746
y Ft(\))p Fo(;)g Ft(\()p Fo(d)1302 712 y Fk(i)1302 766
y Fn(1)1340 746 y Fo(;)g Ft([)p Fo(t)1430 712 y Fk(i)1430
766 y Fn(2)1467 746 y Fo(;)g(t)1534 712 y Fk(i)1534 766
y Fn(3)1571 746 y Ft(]\))p Fo(;)g(:)g(:)g(:)g(;)g Ft(\()p
Fo(d)1886 712 y Fk(i)1886 766 y(k)1921 774 y Ff(i)1948
766 y Fg(\000)p Fn(1)2037 746 y Fo(;)g Ft([)p Fo(t)2127
712 y Fk(i)2127 766 y Fn(2)p Fk(k)2195 774 y Ff(i)2222
766 y Fg(\000)p Fn(2)2311 746 y Fo(;)g(t)2378 712 y Fk(i)2378
766 y Fn(2)p Fk(k)2446 774 y Ff(i)2472 766 y Fg(\000)p
Fn(1)2562 746 y Ft(]\))p Fo(;)g Ft(\()p Fo(tar)r(g)s(et)2911
712 y Fk(i)2911 766 y(p)2949 746 y Fo(;)g(t)3016 712
y Fk(i)3016 766 y Fn(2)p Fk(k)3084 774 y Ff(i)3115 746
y Ft(\))p Fl(g)0 953 y Ft(the)28 b Fm(memory)i(r)l(e)l(quir)l(ements)d
Ft(of)h(the)g(migration)e(sc)n(hedule)h(during)h([)p
Fl(\000)p Fo(p;)14 b(N)9 b Ft(])26 b(is)i(de\014ned)g(as)f(the)h
(sequence:)644 1161 y(\()91 b(0)p Fo(;)14 b(:)g(:)g(:)f(;)h
Ft(0)767 1212 y Fi(|)p 804 1212 60 10 v 60 w({z)p 938
1212 V 60 w(})676 1306 y Fk(p)p Fn(+)p Fk(t)786 1286
y Ff(i)786 1326 y Fe(1)819 1306 y Fn(+1)28 b Ft(times)1125
1161 y Fo(;)75 b Ft(1)p Fo(;)14 b(:)g(:)g(:)f(;)h Ft(1)1223
1212 y Fi(|)p 1260 1212 V 60 w({z)p 1394 1212 V 60 w(})1162
1306 y Fk(t)1187 1286 y Ff(i)1187 1326 y Fe(2)1220 1306
y Fg(\000)p Fk(t)1297 1286 y Ff(i)1297 1326 y Fe(1)1357
1306 y Ft(times)1551 1161 y Fo(;)74 b Ft(0)p Fo(;)14
b(:)g(:)g(:)g(;)g Ft(0)1648 1212 y Fi(|)p 1685 1212 V
60 w({z)p 1819 1212 V 60 w(})1588 1306 y Fk(t)1613 1286
y Ff(i)1613 1326 y Fe(3)1645 1306 y Fg(\000)p Fk(t)1722
1286 y Ff(i)1722 1326 y Fe(2)1782 1306 y Ft(times)1977
1161 y Fo(;)g(:)g(:)g(:)f(;)169 b Ft(1)p Fo(;)14 b(:)g(:)g(:)f(;)h
Ft(1)2316 1212 y Fi(|)p 2353 1212 V 60 w({z)p 2487 1212
V 60 w(})2161 1306 y Fk(t)2186 1286 y Ff(i)2186 1328
y Fe(2)p Ff(k)2245 1341 y(i)2276 1306 y Fg(\000)p Fk(t)2353
1286 y Ff(i)2353 1328 y Fe(2)p Ff(k)2412 1341 y(i)2439
1328 y Fd(\000)p Fe(1)2544 1306 y Ft(times)2739 1161
y Fo(;)104 b Ft(0)p Fo(;)14 b(:)g(:)g(:)f(;)h Ft(0)2866
1212 y Fi(|)p 2903 1212 V 60 w({z)p 3037 1212 V 60 w(})2776
1306 y Fk(N)6 b Fg(\000)p Fk(t)2912 1286 y Ff(i)2912
1328 y Fe(2)p Ff(k)2971 1341 y(i)3029 1306 y Ft(times)3223
1161 y(\))0 1498 y(that)28 b(represen)n(ts)e(the)i(n)n(um)n(b)r(er)f
(of)h(memory)f(frames)g(required)f(b)n(y)i(the)f(sc)n(hedule)h(at)f
(eac)n(h)g(instan)n(t)h Fo(i)p Ft(,)f Fo(i)c Fl(2)g Ft([)p
Fl(\000)p Fo(p;)14 b(N)9 b Ft(])177 1688 y(Let)44 b Fo(M)t(;)14
b(A;)g(N)52 b Ft(b)r(e)44 b(the)g(output)g(of)f Fo(S)5
b(AT)12 b Ft(2)p Fo(M)d(ig)s(S)c(c)p Ft(\()p Fo(C)1934
1700 y Fn(1)1969 1688 y Fo(;)14 b(:)g(:)g(:)f(;)h(C)2212
1700 y Fk(n)2258 1688 y Fo(;)g(v)2335 1700 y Fn(1)2372
1688 y Fo(;)g(:)g(:)g(:)g(;)g(v)2597 1700 y Fk(k)2638
1688 y Ft(\).)84 b(F)-7 b(or)43 b(an)n(y)g(resource)f(sc)n(hedule)h
(for)0 1817 y Fo(S)5 b(AT)12 b Ft(2)p Fo(R)q(esS)5 b(c)p
Ft(\()38 b Fo(C)584 1829 y Fn(1)622 1817 y Ft(,)43 b
Fo(:)14 b(:)g(:)g(;)40 b(C)921 1829 y Fk(n)967 1817 y
Ft(,)k Fo(v)1074 1829 y Fn(1)1111 1817 y Ft(,)g Fo(:)14
b(:)g(:)o Ft(,)44 b Fo(v)1381 1829 y Fk(k)1422 1817 y
Ft(\),)g(there)c(are)f(t)n(w)n(o)h(alternativ)n(es)f(to)h(sc)n(hedule)g
(a)g(migration)f(for)h Fo(r)j Ft(in)d Fo(M)9 b Ft(:)0
1947 y(\(1\))33 b(sc)n(hedule)f(a)g(migration)f(for)h
Fo(r)j Ft(based)d(on)g(the)h(system)f(load)f Fo(A)p Ft(,)j(or)e(\(2\))g
(mo)r(dify)h(the)g(retriev)-5 b(al)32 b(sc)n(hedule)g
Fo(R)q(et)f Ft(\(Ob-)0 2076 y(serv)-5 b(ation)33 b(1\))h(to)g(accommo)r
(date)g(the)g(migration)f(for)h Fo(r)r Ft(.)58 b(F)-7
b(or)34 b(the)g(second)g(alternativ)n(e,)h(the)f(system)g(migh)n(t)g
(sc)n(hedule)0 2206 y(additional)29 b(migrations.)41
b(F)-7 b(or)28 b(example,)i(to)f(sc)n(hedule)g(a)g(migration)f(of)i
(page)e Fo(a)i Ft(from)f(driv)n(e)f Fo(s)i Ft(to)f(driv)n(e)g
Fo(t)p Ft(.)42 b(The)29 b(system)0 2335 y(migh)n(t)23
b(utilize)g(the)h(disk)f(bandwidth)g(used)g(at)g(in)n(terv)-5
b(al)22 b Fo(ti)h Ft(to)g(retriev)n(e)e(a)i(page)f Fo(b)h
Ft(from)f Fo(s)h Ft(in)h Fo(R)q(et)e Ft(to)h(read)f(the)h(page)f
Fo(a)h Ft(from)0 2465 y Fo(s)p Ft(.)37 b(Then,)27 b(page)f
Fo(b)g Ft(can)g(either)h(b)r(e)g(pre-fetc)n(hed)g(at)f(an)h(earlier)e
(time)i(in)n(terv)-5 b(al,)27 b(or)e(b)r(e)j(migrated)e(from)g
Fo(s)h Ft(to)f(a)h(disk)f Fo(u)h Ft(with)0 2594 y(a)n(v)-5
b(ailable)25 b(bandwidth)h(at)g Fo(ti)g Ft(so)f(that)h
Fo(b)g Ft(can)f(b)r(e)i(retriev)n(ed)d(from)i Fo(u)f
Ft(at)h Fo(ti)p Ft(.)36 b(If)27 b(there)e(is)h(not)g(memory)f(to)h
(pre-fetc)n(h)g Fo(b)p Ft(,)g(then)0 2724 y(the)i(system)g(is)g(forced)
f(to)h(migrate)f Fo(b)p Ft(.)37 b(Therefore)27 b(the)h(migration)f(sc)n
(hedule)h(\(from)g Fo(s)g Ft(to)f Fo(t)p Ft(\))i(includes)f(the)g(sc)n
(hedule)g(of)f(a)0 2853 y(new)i(migration)e(\(from)i
Fo(s)g Ft(to)f Fo(u)p Ft(\).)41 b(The)28 b(additional)h(migrations)e
(also)h(increase)f(the)i(memory)f(requiremen)n(ts.)39
b(Therefore)0 2983 y(their)28 b(memory)e(requiremen)n(ts)h(should)g
(also)g(b)r(e)h(considered)e(to)i(obtain)f(the)h(memory)f(requiremen)n
(ts)f(of)i(the)g(sc)n(hedule.)0 3172 y Fu(De\014nition:)96
b Ft(Let)32 b Fl(f)p Fo(P)786 3184 y Fn(0)823 3172 y
Fo(;)14 b(:)g(:)g(:)g(;)g(P)1061 3184 y Fk(m)p Fg(\000)p
Fn(1)1209 3172 y Fl(g)p Fo(;)g Fl(P)7 b Fo(;)14 b(B)t(;)g(C)q(;)g(D)34
b Ft(b)r(e)e(the)g(output)g(of)g Fo(S)5 b(AT)12 b Ft(2)p
Fo(R)q(esS)5 b(c)p Ft(\()p Fo(C)2879 3184 y Fn(1)2914
3172 y Fo(;)32 b(:)14 b(:)g(:)g(;)32 b(C)3194 3184 y
Fk(n)3240 3172 y Fo(;)g(v)3335 3184 y Fn(1)3372 3172
y Fo(;)g(:)14 b(:)g(:)g(;)32 b(v)3633 3184 y Fk(k)3674
3172 y Ft(\).)50 b(Let)0 3301 y Fo(M)t(;)14 b(A;)g(N)30
b Ft(b)r(e)22 b(the)f(output)h(of)f Fo(S)5 b(AT)12 b
Ft(2)p Fo(M)d(ig)s(S)c(c)p Ft(\()p Fo(C)1481 3313 y Fn(1)1516
3301 y Fo(;)14 b(:)g(:)g(:)g(;)g(C)1760 3313 y Fk(n)1805
3301 y Fo(;)g(v)1882 3313 y Fn(1)1919 3301 y Fo(;)g(:)g(:)g(:)g(;)g(v)
2144 3313 y Fk(k)2185 3301 y Ft(\).)35 b(If)22 b(sc)n(heduling)e(a)h
(migration)f(for)h Fo(r)3342 3313 y Fn(0)3401 3301 y
Ft(in)g Fo(M)30 b Ft(mo)r(di\014es)0 3431 y(the)i(retriev)-5
b(al)30 b(sc)n(hedule)h Fo(R)q(et)f Ft(in)i(suc)n(h)f(a)f(w)n(a)n(y)g
(that)i(additional)e(migration)g(requests)h Fo(r)2833
3443 y Fn(1)2870 3431 y Fo(;)14 b(:)g(:)g(:)g(;)g(r)3092
3443 y Fk(n)3133 3451 y Ff(r)3202 3431 y Ft(m)n(ust)32
b(b)r(e)f(sc)n(heduled.)0 3560 y(Then)d(the)g Fm(extension)f
Ft(of)h Fo(r)857 3572 y Fn(0)922 3560 y Ft(is)g(the)f(set)h(of)g
(migrations)e(requests)h Fl(f)p Fo(r)2185 3572 y Fn(0)2222
3560 y Fo(;)14 b(:)g(:)g(:)f(;)h(r)2443 3572 y Fk(n)2484
3580 y Ff(r)2522 3560 y Fl(g)p Ft(.)177 3750 y(F)-7 b(or)25
b(example,)g(supp)r(ose)f(that)i(to)f(sc)n(hedule)f(a)h(migration)f
(for)g Fo(r)2187 3762 y Fn(0)2250 3750 y Ft(the)h(system)g(requires)f
(t)n(w)n(o)g(additional)g(migrations)0 3879 y(\()p Fo(r)69
3891 y Fn(1)141 3879 y Ft(and)34 b Fo(r)346 3891 y Fn(2)383
3879 y Ft(\).)57 b(Supp)r(ose)33 b(that)i(the)f(memory)f(requiremen)n
(ts)g(of)h(the)g(sc)n(hedules)f(for)g(these)h(migrations)f(are)g(as)g
(follo)n(ws:)0 4009 y(\(0)p Fo(;)14 b Ft(0)p Fo(;)g Ft(0)p
Fo(;)g Ft(0)p Fo(;)g Ft(0)p Fo(;)g Ft(0)p Fo(;)g Ft(1)p
Fo(;)g Ft(0)p Fo(;)g Ft(1)p Fo(;)g Ft(0\))31 b(for)36
b Fo(r)1021 4021 y Fn(0)1059 4009 y Ft(,)j(\(0)p Fo(;)14
b Ft(0)p Fo(;)g Ft(0)p Fo(;)g Ft(0)p Fo(;)g Ft(1)p Fo(;)g
Ft(0)p Fo(;)g Ft(0)p Fo(;)g Ft(0)p Fo(;)g Ft(0)p Fo(;)g
Ft(0\))32 b(for)k Fo(r)2143 4021 y Fn(1)2180 4009 y Ft(,)j(and)e(\(0)p
Fo(;)14 b Ft(0)p Fo(;)g Ft(1)p Fo(;)g Ft(0)p Fo(;)g Ft(0)p
Fo(;)g Ft(0)p Fo(;)g Ft(0)p Fo(;)g Ft(0)p Fo(;)g Ft(0)p
Fo(;)g Ft(0\))31 b(for)36 b Fo(r)3434 4021 y Fn(2)3472
4009 y Ft(.)64 b(Then)37 b(the)0 4138 y(extension)27
b(of)h Fo(r)499 4150 y Fn(0)564 4138 y Ft(is)g Fl(f)p
Fo(r)727 4150 y Fn(0)764 4138 y Fo(;)14 b(r)838 4150
y Fn(1)875 4138 y Fo(;)g(r)949 4150 y Fn(2)987 4138 y
Fl(g)27 b Ft(and)h(its)f(memory)g(requiremen)n(ts)g(is)g(\(0)p
Fo(;)14 b Ft(0)p Fo(;)g Ft(1)p Fo(;)g Ft(0)p Fo(;)g Ft(1)p
Fo(;)g Ft(0)p Fo(;)g Ft(1)p Fo(;)g Ft(0)p Fo(;)g Ft(1)p
Fo(;)g Ft(0\).)177 4303 y(The)28 b(memory)f(requiremen)n(ts)f(of)i(sc)n
(hedules)f(of)g(migrations)f(de\014ne)i(a)f(partial)g(order)f(on)i(the)
g(sc)n(hedules.)0 4492 y Fu(De\014nition:)82 b Ft(A)29
b(migration)e(sc)n(hedule)h Fo(sr)1401 4504 y Fn(1)1467
4492 y Ft(is)h Fm(gr)l(e)l(ater)f Ft(\()p Fm(smal)t(ler)p
Ft(\))j(than)d(a)g(migration)g(sc)n(hedule)g Fo(sr)3235
4504 y Fn(2)3301 4492 y Ft(if)h(and)f(only)h(if)g(for)0
4622 y(eac)n(h)23 b(instan)n(t)g Fo(i)f Fl(2)i Ft([)p
Fl(\000)p Fo(p;)14 b(N)9 b Ft(])22 b(the)i(memory)f(requiremen)n(t)f
(of)h Fo(sr)1955 4634 y Fn(1)2016 4622 y Ft(at)h Fo(i)f
Ft(is)g(greater)e(\(smaller\))i(than)h(or)e(equal)h(to)g(the)h(memory)0
4752 y(requiremen)n(t)j(of)g Fo(sr)632 4764 y Fn(2)698
4752 y Ft(at)g Fo(i)0 5019 y Fu(Lemma)j(B.2)-7 b(:)79
b Ft(Let)29 b Fl(f)p Fo(P)826 5031 y Fn(0)863 5019 y
Fo(;)14 b(:)g(:)g(:)g(;)g(P)1101 5031 y Fk(m)p Fg(\000)p
Fn(1)1249 5019 y Fl(g)p Fo(;)g Fl(P)7 b Fo(;)14 b(B)t(;)g(C)q(;)g(D)30
b Ft(b)r(e)g(the)f(output)g(of)g Fo(S)5 b(AT)12 b Ft(2)p
Fo(R)q(esS)5 b(c)p Ft(\()p Fo(C)2904 5031 y Fn(1)2939
5019 y Fo(;)29 b(:)14 b(:)g(:)g(;)29 b(C)3213 5031 y
Fk(n)3258 5019 y Fo(;)g(v)3350 5031 y Fn(1)3387 5019
y Fo(;)g(:)14 b(:)g(:)g(;)29 b(v)3642 5031 y Fk(k)3683
5019 y Ft(\).)41 b(Let)0 5148 y Fo(M)t(;)14 b(A;)g(N)31
b Ft(b)r(e)22 b(the)h(output)f(of)g Fo(S)5 b(AT)12 b
Ft(2)p Fo(M)d(ig)s(S)c(c)p Ft(\()p Fo(C)1485 5160 y Fn(1)1520
5148 y Fo(;)14 b(:)g(:)g(:)f(;)h(C)1763 5160 y Fk(n)1809
5148 y Fo(;)g(v)1886 5160 y Fn(1)1923 5148 y Fo(;)g(:)g(:)g(:)g(;)g(v)
2148 5160 y Fk(k)2189 5148 y Ft(\).)35 b(Let)22 b Fo(sr)j
Ft(b)r(e)d(the)h(sc)n(hedule)e(of)h(the)h(extension)e(of)h
Fo(r)j Ft(in)0 5278 y(a)d(one-time-in)n(terv)-5 b(al-latency)21
b(resource)g(sc)n(hedule)h(for)g Fl(f)p Fo(P)1850 5290
y Fn(0)1887 5278 y Fo(;)14 b(:)g(:)g(:)g(;)g(P)2125 5290
y Fk(m)p Fg(\000)p Fn(1)2273 5278 y Fl(g)p Ft(,)23 b(where)f
Fo(r)k Ft(is)c(the)h(migration)e(request)h(asso)r(ciated)0
5407 y(with)28 b(clause)f Fo(C)493 5419 y Fk(j)528 5407
y Ft(.)37 b(Then,)28 b(there)g(exists)f(some)g(migration)f(sc)n(hedule)
h Fo(sr)2264 5377 y Fg(0)2316 5407 y Ft(for)g Fo(r)k
Ft(on)c Fo(A)h Ft(suc)n(h)f(that)h Fo(sr)3161 5377 y
Fg(0)3213 5407 y Ft(is)f(smaller)g(than)h Fo(sr)r Ft(.)1908
5656 y(25)p eop
%%Page: 26 27
26 26 bop 0 90 a Fu(Pro)s(of:)86 b Ft(It)30 b(su\016ces)f(to)g
(consider)g(the)g(case)g(when)g(the)h(system)f(c)n(hanges)f
Fo(R)q(et)h Ft(to)g(accommo)r(date)g(the)g(sc)n(heduling)g(of)g(a)0
220 y(migration)c(for)h Fo(r)r Ft(.)38 b Fo(sr)29 b Ft(m)n(ust)e(end)g
(with)g(a)f(write)g(page)g(on)g(driv)n(e)g Fo(d)2093
232 y Fk(j)s(i)2178 220 y Ft(or)g(driv)n(e)f Fo(e)2524
232 y Fk(j)s(i)2583 220 y Ft(.)36 b(This)27 b(write)f(page)g(m)n(ust)g
(b)r(e)h(sc)n(heduled)0 349 y(at)c(an)g(in)n(terv)-5
b(al)23 b Fo(l)h Ft(suc)n(h)f(that)h(there)f(is)g(memory)f(a)n(v)-5
b(ailable)22 b(at)h(instan)n(t)h Fo(l)r Ft(.)34 b(Therefore,)23
b(the)h(write)f(page)f(m)n(ust)i(b)r(e)f(sc)n(heduled)0
479 y(during)31 b(an)f(o)r(dd)i(time)f(in)n(terv)-5 b(al)31
b(\(i.e.,)h(1)p Fo(;)14 b Ft(3)p Fo(;)g Ft(5)30 b(etc.\).)47
b(Supp)r(ose)32 b(that)f(the)g(write)g(page)f(is)h(sc)n(heduled)g
(during)g(an)g(in)n(terv)-5 b(al)0 608 y Fo(l)32 b Ft(that)e(do)r(es)g
(not)h(ha)n(v)n(e)e(bandwidth)h(a)n(v)-5 b(ailable)29
b(for)h(an)n(y)g(driv)n(e)f(in)i(the)f(target)g(set.)45
b(Then,)31 b(there)f(are)f(t)n(w)n(o)h(alternativ)n(es:)0
738 y(\(1\))k(to)f(pre-fetc)n(h)g(a)g(page)g(retriev)n(ed)f(during)h
Fo(l)i Ft(in)f Fo(R)q(et)f Ft(from)g(a)g(target)f(driv)n(e)h(at)g(an)h
(earlier)e(time)i(in)n(terv)-5 b(al,)34 b(or)f(\(2\))g(to)0
867 y(migrate)h(a)h(page)f Fo(a)i Ft(retriev)n(ed)e(during)g
Fo(l)j Ft(in)e Fo(R)q(et)g Ft(from)g(a)g(target)f(driv)n(e)g(to)i(a)e
(driv)n(e)h(with)g(a)n(v)-5 b(ailable)34 b(bandwidth)i(in)g
Fo(l)r Ft(,)0 997 y(so)d(that)i Fo(a)f Ft(can)f(b)r(e)i(retriev)n(ed)e
(from)g(another)g(driv)n(e)h(during)f Fo(l)r Ft(.)56
b(The)34 b(\014rst)g(alternativ)n(e)f(is)h(not)g(p)r(ossible,)h(b)r
(ecause)f(the)0 1126 y(write)c(a)f(page)g(op)r(eration)f(requires)h(an)
g(additional)g(memory)g(frame)g(at)h(instan)n(t)g Fo(l)h
Ft(to)e(hold)h(the)g(page.)43 b(The)29 b(memory)g(is)0
1256 y(th)n(us)j(exhausted)f(at)h(instan)n(t)f Fo(l)r
Ft(,)i(then)f(there)f(is)h(not)g(memory)f(a)n(v)-5 b(ailable)30
b(to)i(hold)f(the)h(pre-fetc)n(hed)g(page.)48 b(The)32
b(second)0 1385 y(alternativ)n(e)23 b(is)h(not)h(p)r(ossible)f(either,)
h(b)r(ecause)f(the)g(disk)h(driv)n(es)e(with)i(a)n(v)-5
b(ailable)23 b(bandwidth)i(during)f(o)r(dd)g(time)h(in)n(terv)-5
b(als)0 1515 y(\(e.g.,)23 b Fo(u)251 1527 y Fk(i)278
1515 y Fo(;)14 b(t)345 1527 y Fk(i)373 1515 y Fo(;)g(e)449
1527 y Fk(j)s(i)507 1515 y Fo(;)g(d)587 1527 y Fk(j)s(i)645
1515 y Ft(\))23 b(do)e(not)h(ha)n(v)n(e)f(disk)g(bandwidth)i(a)n(v)-5
b(ailable)20 b(at)i(an)g(earlier)e(time)j(in)n(terv)-5
b(al.)34 b(Therefore,)22 b(the)g(migration)0 1644 y(of)33
b Fo(a)g Ft(w)n(ould)f(increase)g(the)h(disk)g(bandwidth)h(requiremen)n
(t)e(of)h(suc)n(h)f(driv)n(es)g(to)h(more)f(than)h(what)g(is)g(a)n(v)-5
b(ailable)32 b(during)0 1774 y(the)27 b(p)r(erio)r(d)g([0)p
Fo(;)14 b(l)r Ft(].)35 b(In)27 b(sum,)g(the)g(write)g(page)f(op)r
(eration)f(m)n(ust)i(b)r(e)g(sc)n(heduled)g(during)f(an)g(o)r(dd)h
(time)g(in)n(terv)-5 b(al)26 b Fo(l)j Ft(that)e(has)0
1903 y(bandwidth)33 b(a)n(v)-5 b(ailable)31 b(for)h(a)g(driv)n(e)f(in)i
(the)g(target)e(set.)51 b(Because)31 b(there)i(is)f(not)g(memory)g(a)n
(v)-5 b(ailable)31 b(at)h(instan)n(t)g Fo(l)23 b Fl(\000)e
Ft(1,)0 2033 y(the)28 b(page)f(m)n(ust)h(b)r(e)g(read)f(during)g(in)n
(terv)-5 b(al)28 b Fo(l)20 b Fl(\000)e Ft(1.)37 b(In)28
b(conclusion,)f(one)g(of)h(the)g(migration)f(sc)n(hedules)g(in)h(Lemma)
f(A.2)h(is)0 2162 y(smaller)f(than)g Fo(sr)r Ft(.)p 619
2138 47 4 v 619 2187 4 50 v 662 2187 V 619 2190 47 4
v 0 2436 a Fu(Lemma)j(B.3)-7 b(:)86 b Ft(Let)31 b Fl(f)p
Fo(P)835 2448 y Fn(0)872 2436 y Fo(;)14 b(:)g(:)g(:)g(;)g(P)1110
2448 y Fk(m)p Fg(\000)p Fn(1)1258 2436 y Fl(g)p Fo(;)g
Fl(P)7 b Fo(;)14 b(B)t(;)g(C)q(;)g(D)32 b Ft(b)r(e)g(the)f(output)g(of)
f Fo(S)5 b(AT)12 b Ft(2)p Fo(R)q(esS)5 b(c)p Ft(\()p
Fo(C)2922 2448 y Fn(1)2958 2436 y Fo(;)14 b(:)g(:)g(:)f(;)h(C)3201
2448 y Fk(n)3247 2436 y Fo(;)31 b(v)3341 2448 y Fn(1)3378
2436 y Fo(;)g(:)14 b(:)g(:)g(;)30 b(v)3636 2448 y Fk(k)3677
2436 y Ft(\).)47 b(Let)0 2565 y Fo(M)t(;)14 b(A;)g(N)31
b Ft(b)r(e)22 b(the)h(output)f(of)g Fo(S)5 b(AT)12 b
Ft(2)p Fo(M)d(ig)s(S)c(c)p Ft(\()p Fo(C)1485 2577 y Fn(1)1520
2565 y Fo(;)14 b(:)g(:)g(:)f(;)h(C)1763 2577 y Fk(n)1809
2565 y Fo(;)g(v)1886 2577 y Fn(1)1923 2565 y Fo(;)g(:)g(:)g(:)g(;)g(v)
2148 2577 y Fk(k)2189 2565 y Ft(\).)35 b(Let)22 b Fo(sr)j
Ft(b)r(e)d(the)h(sc)n(hedule)e(of)h(the)h(extension)e(of)h
Fo(r)j Ft(in)0 2695 y(a)d(one-time-in)n(terv)-5 b(al-latency)21
b(resource)g(sc)n(hedule)h(for)g Fl(f)p Fo(P)1850 2707
y Fn(0)1887 2695 y Fo(;)14 b(:)g(:)g(:)g(;)g(P)2125 2707
y Fk(m)p Fg(\000)p Fn(1)2273 2695 y Fl(g)p Ft(,)23 b(where)f
Fo(r)k Ft(is)c(the)h(migration)e(request)h(asso)r(ciated)0
2824 y(with)27 b(v)-5 b(ariable)26 b Fo(v)539 2836 y
Fk(i)567 2824 y Ft(.)36 b(Then,)27 b(there)g(exists)f(some)g(migration)
g(sc)n(hedule)g Fo(sr)2297 2794 y Fg(0)2348 2824 y Ft(for)g
Fo(r)j Ft(on)d Fo(A)h Ft(suc)n(h)g(that)g Fo(sr)3187
2794 y Fg(0)3237 2824 y Ft(is)g(smaller)f(than)g Fo(sr)r
Ft(.)0 3072 y Fu(Pro)s(of:)82 b Ft(It)29 b(su\016ces)e(to)i(consider)e
(the)i(case)e(when)i(the)f(system)g(c)n(hanges)f Fo(R)q(et)h
Ft(to)g(accommo)r(date)f(the)i(sc)n(heduling)f(of)g Fo(r)r
Ft(.)0 3202 y Fo(sr)g Ft(m)n(ust)d(end)h(with)f(a)g(write)g(page)g
Fo(a)g Ft(to)g(either)g(driv)n(e)f Fo(t)1753 3214 y Fk(i)1806
3202 y Ft(or)h(driv)n(e)f Fo(u)2159 3214 y Fk(i)2186
3202 y Ft(.)36 b(As)26 b(for)e(the)i(case)e(of)h(write)h(page)e(on)h(a)
g(target)f(driv)n(e)0 3331 y(in)g(pro)r(of)g(of)g(Lemma)f(B.2,)i(the)f
(write)g(page)f(on)h(either)f(driv)n(e)h Fo(t)1978 3343
y Fk(i)2029 3331 y Ft(or)f Fo(u)2175 3343 y Fk(i)2227
3331 y Ft(m)n(ust)h(b)r(e)g(sc)n(heduled)g(during)f(an)h(o)r(dd)g(time)
h(in)n(terv)-5 b(al)0 3461 y Fo(l)34 b Ft(that)e(has)f(bandwidth)i(a)n
(v)-5 b(ailable)31 b(for)g(either)h(driv)n(e)g Fo(t)1775
3473 y Fk(i)1834 3461 y Ft(or)f Fo(u)1988 3473 y Fk(i)2016
3461 y Ft(.)50 b(Without)33 b(loss)e(of)h(generalit)n(y)-7
b(,)32 b(supp)r(ose)g(that)g(it)h(writes)0 3591 y(the)c(page)f(on)g
(driv)n(e)g Fo(t)694 3603 y Fk(i)721 3591 y Ft(.)40 b(Because)28
b(there)g(is)h(not)g(memory)e(a)n(v)-5 b(ailable)28 b(at)g(instan)n(t)h
Fo(l)20 b Fl(\000)f Ft(1,)28 b(the)h(page)f(m)n(ust)h(b)r(e)g(read)f
(during)0 3720 y(in)n(terv)-5 b(al)31 b Fo(l)22 b Fl(\000)f
Ft(1.)47 b(Ho)n(w)n(ev)n(er,)31 b(there)g(is)g(not)g(a)n(v)-5
b(ailable)31 b(disk)g(bandwidth)h(for)e(driv)n(e)h Fo(s)2689
3732 y Fk(i)2748 3720 y Ft(during)g(in)n(terv)-5 b(al)31
b Fo(l)22 b Fl(\000)e Ft(1.)48 b(Then)32 b(the)0 3850
y(system)d(m)n(ust)h(either)f(\(1\))h(migrate)f Fo(a)g
Ft(from)h Fo(s)1476 3862 y Fk(i)1533 3850 y Ft(to)f(a)g(disk)h(with)g
(a)n(v)-5 b(ailable)28 b(bandwidth)i(during)f Fo(l)22
b Fl(\000)d Ft(1)29 b(so)g(that)h Fo(a)f Ft(can)h(b)r(e)0
3979 y(retriev)n(ed)22 b(from)h(this)h(disk,)g(or)f(\(2\))h(migrate)e
(a)h(page)g Fo(b)g Ft(retriev)n(ed)f(from)h Fo(s)2300
3991 y Fk(i)2351 3979 y Ft(during)g Fo(l)12 b Fl(\000)e
Ft(1)23 b(in)g Fo(R)q(et)g Ft(to)h(a)f(driv)n(e)f(with)i(a)n(v)-5
b(ailable)0 4109 y(bandwidth)31 b(during)g Fo(l)22 b
Fl(\000)e Ft(1)30 b(so)g(that)h Fo(a)g Ft(is)g(retriev)n(ed)e(from)i
Fo(s)1927 4121 y Fk(i)1985 4109 y Ft(and)g Fo(b)f Ft(from)h(the)g(new)g
(lo)r(cation)f(during)g Fo(l)22 b Fl(\000)f Ft(1.)46
b(Then)31 b(the)0 4238 y(system)25 b(m)n(ust)g(migrate)f(a)g(page)g(\()
p Fo(a)h Ft(or)f Fo(b)p Ft(\))h(from)g Fo(s)1561 4250
y Fk(i)1613 4238 y Ft(to)g Fo(d)1755 4250 y Fk(ni)1824
4238 y Ft(.)36 b(T)-7 b(o)24 b(sc)n(hedule)h(this)g(migration,)f(the)i
(write)e(op)r(eration)g(on)h(driv)n(e)0 4368 y Fo(d)43
4380 y Fk(ni)143 4368 y Ft(m)n(ust)31 b(b)r(e)g(sc)n(heduled)f(at)h(in)
n(terv)-5 b(al)30 b Fo(l)22 b Fl(\000)e Ft(2)31 b(b)r(ecause)f(it)h(is)
g(the)g(only)g(o)r(dd)g(time)g(in)n(terv)-5 b(al)30 b(b)r(efore)h
Fo(l)22 b Fl(\000)e Ft(1)30 b(with)h(a)n(v)-5 b(ailable)0
4497 y(disk)24 b(bandwidth)i(for)e Fo(d)750 4509 y Fk(ni)819
4497 y Ft(.)36 b(Then)25 b(the)g(system)f(has)g(to)h(sc)n(hedule)f(a)g
(read)g(from)g Fo(s)2555 4509 y Fk(i)2608 4497 y Ft(at)g(in)n(terv)-5
b(al)24 b Fo(l)14 b Fl(\000)f Ft(3)24 b(b)r(ecause)g(there)h(is)f(not)0
4627 y(memory)h(a)n(v)-5 b(ailable)25 b(at)h(instan)n(t)g
Fo(l)16 b Fl(\000)f Ft(3.)36 b(If)26 b(there)g(is)g(only)g(one)f
(clause)h(in)g(the)g(SA)-7 b(T)27 b(instance,)f(then)g(one)g(of)g(the)g
(migration)0 4756 y(sc)n(hedules)d(in)h(Lemma)g(A.1)g(is)f(smaller)g
(than)h Fo(sr)r Ft(.)36 b(If)25 b(there)e(is)h(more)f(than)h(one)f
(clauses)g(in)h(the)g(SA)-7 b(T)25 b(instance,)f(then)g(there)0
4886 y(is)g(not)h(a)n(v)-5 b(ailable)23 b(disk)h(bandwidth)h(for)f
Fo(s)1308 4898 y Fk(i)1360 4886 y Ft(at)g(in)n(terv)-5
b(al)24 b Fo(l)14 b Fl(\000)e Ft(3.)34 b(Therefore,)24
b(as)g(b)r(efore)g(the)g(system)h(has)e(to)i(migrate)e(a)h(page)0
5015 y(from)31 b Fo(s)239 5027 y Fk(i)297 5015 y Ft(to)g(either)g
Fo(d)684 5027 y Fk(n)761 5015 y Ft(\(if)h(there)f(is)g(a)n(v)-5
b(ailable)30 b(bandwidth)h(in)h Fo(d)2083 5027 y Fk(n)2128
5015 y Ft(\))f(or)g Fo(d)2340 5030 y Fn(\()p Fk(n)p Fg(\000)p
Fn(1\))p Fk(i)2545 5015 y Ft(.)48 b(Because)30 b(a)h(write)g(m)n(ust)g
(b)r(e)g(sc)n(heduled)0 5145 y(during)e(an)g(in)n(terv)-5
b(al)29 b Fo(ti)g Ft(with)h(memory)e(a)n(v)-5 b(ailable)28
b(at)i(instan)n(t)f Fo(ti)g Ft(and)g(there)g(is)h(not)f(a)n(v)-5
b(ailable)28 b(bandwidth)i(for)f(driv)n(e)g Fo(d)3855
5157 y Fk(n)0 5274 y Ft(during)e(an)g(o)r(dd)h(time)g(in)n(terv)-5
b(al,)27 b(the)g(system)h(has)e(to)i(sc)n(hedule)f(the)h(migration)e
(from)h Fo(s)2807 5286 y Fk(i)2862 5274 y Ft(to)g Fo(d)3006
5289 y Fn(\()p Fk(n)p Fg(\000)p Fn(1\))p Fk(i)3212 5274
y Ft(.)37 b(Similar)27 b(reasoning)0 5404 y(can)f(b)r(e)h(applied)g
(iterativ)n(ely)e(to)i(conclude)f(that)h(one)f(of)h(the)g(migration)f
(sc)n(hedules)g(in)g(Lemma)h(A.1)f(is)h(smaller)f(than)g
Fo(sr)r Ft(.)1908 5656 y(26)p eop
%%Page: 27 28
27 27 bop 0 65 47 4 v 0 115 4 50 v 43 115 V 0 118 47
4 v 177 280 a Ft(W)-7 b(e)28 b(no)n(w)f(conclude)g(the)h(pro)r(of)f(of)
h(the)g(other)f(direction)g(of)h(the)g(equiv)-5 b(alence)27
b(of)g(instances.)0 446 y Fu(Lemma)32 b(5.2:)85 b Ft(Let)30
b Fo(M)t(;)14 b(A;)g(N)38 b Ft(b)r(e)30 b(the)f(output)h(of)g
Fo(S)5 b(AT)12 b Ft(2)p Fo(M)d(ig)s(S)c(c)p Ft(\()p Fo(C)2249
458 y Fn(1)2283 446 y Fo(;)14 b(:)g(:)g(:)g(;)g(C)2527
458 y Fk(n)2572 446 y Fo(;)g(v)2649 458 y Fn(1)2687 446
y Fo(;)g(:)g(:)g(:)f(;)h(v)2911 458 y Fk(k)2952 446 y
Ft(\).)43 b(Let)29 b Fl(f)p Fo(P)3295 458 y Fn(0)3333
446 y Fo(;)14 b(:)g(:)g(:)f(;)h(P)3570 458 y Fk(m)p Fg(\000)p
Fn(1)3718 446 y Fl(g)p Fo(;)29 b Fl(P)7 b Ft(,)0 575
y Fo(B)t Ft(,)31 b Fo(C)6 b Ft(,)31 b Fo(D)h Ft(b)r(e)f(the)f(output)h
(of)f Fo(S)5 b(AT)12 b Ft(2)p Fo(R)q(esS)5 b(c)p Ft(\()p
Fo(C)1520 587 y Fn(1)1555 575 y Fo(;)14 b(:)g(:)g(:)g(;)g(C)1799
587 y Fk(n)1844 575 y Fo(;)g(v)1921 587 y Fn(1)1958 575
y Fo(;)g(:)g(:)g(:)g(;)g(v)2183 587 y Fk(k)2224 575 y
Ft(\).)44 b(If)31 b(there)f(is)g(a)f(resource)g(sc)n(hedule)g(that)i
(yields)e(a)0 705 y(one-time-in)n(terv)-5 b(al)30 b(latency)h(and)h
(supp)r(orts)f(a)g(co)r(ordinated)f(displa)n(y)h(of)g
Fl(f)p Fo(P)2457 717 y Fn(0)2494 705 y Fo(;)14 b(:)g(:)g(:)g(;)g(P)2732
717 y Fk(m)p Fg(\000)p Fn(1)2880 705 y Fl(g)31 b Ft(on)g(a)g(system)h
(con\014guration)0 834 y(\()p Fo(B)t(;)14 b(C)q(;)g(D)r
Ft(\))27 b(and)e(an)g(initial)g(placemen)n(t)g(of)h(data)f
Fl(P)7 b Ft(,)25 b(then)h(there)f(is)g(a)g(sc)n(hedule)g(for)g
(migrations)f Fo(M)34 b Ft(on)25 b Fo(A)h Ft(during)f([0)p
Fo(;)14 b(N)9 b Ft(].)0 1049 y Fu(Pro)s(of:)73 b Ft(Supp)r(ose)23
b(that)g(there)f(is)h(a)f(resource)f(sc)n(hedule)h Fo(S)5
b(c)22 b Ft(for)g Fl(f)p Fo(P)2153 1061 y Fn(0)2190 1049
y Fo(;)14 b(:)g(:)g(:)g(;)g(P)2428 1061 y Fk(m)p Fg(\000)p
Fn(1)2576 1049 y Fl(g)22 b Ft(that)h(yields)f(a)h(latency)f(of)g(one)h
(in)n(terv)-5 b(al)0 1179 y(and)25 b(there)f(do)r(es)h(not)f(exist)h(a)
f(sc)n(hedule)h(of)f(migrations)g(for)g Fo(M)34 b Ft(on)24
b Fo(A)h Ft(during)f([0)p Fo(;)14 b(N)9 b Ft(].)36 b(Consider)24
b(the)h(follo)n(wing)e(sc)n(hedule,)0 1308 y Fo(S)5 b(a)p
Ft(,)27 b(for)g(requests)g(in)h Fo(M)36 b Ft(on)28 b
Fo(A)p Ft(:)37 b(F)-7 b(or)27 b(eac)n(h)g(request)g Fo(r)f
Fl(2)d Fo(M)9 b Ft(,)28 b(consider)e(a)i(migration)e(sc)n(hedule)h
Fo(sr)3137 1278 y Fg(0)3189 1308 y Ft(in)h(Lemmas)f(B.2)g(and)0
1438 y(B.3)g(suc)n(h)g(that)h Fo(sr)596 1408 y Fg(0)643
1438 y Fo(<)23 b(sr)r Ft(,)28 b(where)f Fo(sr)k Ft(is)c(the)h(sc)n
(hedule)f(of)h Fo(r)r Ft('s)g(extension)f(in)h Fo(S)5
b(c)p Ft(.)177 1603 y(Because)26 b(there)g(is)g(not)g(a)g(sc)n(hedule)h
(of)f(migrations)f(for)h Fo(M)35 b Ft(on)26 b Fo(A)p
Ft(,)h(there)f(m)n(ust)h(b)r(e)g(t)n(w)n(o)e(requests)h(in)g
Fo(M)9 b Ft(,)27 b Fo(r)3578 1615 y Fn(1)3642 1603 y
Ft(and)f Fo(r)3839 1615 y Fn(2)3877 1603 y Ft(,)0 1733
y(suc)n(h)e(that)h(their)g(corresp)r(onding)e(sc)n(hedules)h(in)h
Fo(S)5 b(a)24 b Ft(con\015ict.)36 b(The)25 b(only)f(p)r(ossibilit)n(y)h
(of)f(con\015ict)h(b)r(et)n(w)n(een)g(the)g(sc)n(hedules)0
1862 y(for)35 b Fo(r)172 1874 y Fn(1)246 1862 y Ft(and)h
Fo(r)453 1874 y Fn(2)526 1862 y Ft(in)g Fo(S)5 b(a)36
b Ft(is)f(if)i Fo(r)980 1874 y Fn(1)1053 1862 y Ft(is)f(asso)r(ciated)e
(with)j(a)e(v)-5 b(ariable)35 b Fo(v)2183 1874 y Fk(i)2247
1862 y Ft(and)g Fo(r)2453 1874 y Fn(2)2527 1862 y Ft(with)h(a)g(clause)
f Fo(C)3114 1874 y Fk(j)3149 1862 y Ft(.)62 b(Because)34
b(the)j(other)0 1992 y(com)n(binations)30 b(do)i(not)f(ha)n(v)n(e)g(o)n
(v)n(erlapping)e(p)r(erio)r(ds.)48 b(Without)33 b(loss)d(of)i
(generalit)n(y)e(supp)r(ose)h(that)h(the)g(sc)n(hedule)f(of)g
Fo(r)3862 2004 y Fn(1)0 2121 y Ft(in)h Fo(S)5 b(a)31
b Ft(span)h(the)g(p)r(erio)r(d)f(\()p Fo(x;)14 b(x)23
b Ft(+)d(2)h Fl(\001)g Ft(\()p Fo(n)h Ft(+)e(1\)\))32
b(where)f Fo(x)g Ft(=)e(4)21 b Fl(\001)g Ft(\()p Fo(n)h
Ft(+)e(1\))h Fl(\001)h Ft(\()p Fo(i)f Fl(\000)f Ft(1\))32
b(and)f(the)i(sc)n(hedule)e(of)h Fo(r)3453 2133 y Fn(2)3522
2121 y Ft(the)g(p)r(erio)r(d)0 2251 y(\()p Fo(x)21 b
Ft(+)g(2)f Fl(\001)h Ft(\()p Fo(j)26 b Fl(\000)20 b Ft(1\))p
Fo(;)14 b(x)21 b Ft(+)f(2)g Fl(\001)h Ft(\()p Fo(j)26
b Fl(\000)20 b Ft(1\))g(+)h(1\).)46 b(Both)31 b(sc)n(hedules)g(require)
e(a)i(memory)f(frame)h(at)f(instan)n(t)h Fo(x)21 b Ft(+)g(2)f
Fl(\001)h Ft(\()p Fo(j)k Fl(\000)c Ft(1\))f(+)g(1.)0
2380 y(Then,)31 b(the)g(sc)n(hedules)f(of)g(the)h(extensions)f(of)g
Fo(r)1535 2392 y Fn(1)1604 2380 y Ft(and)g Fo(r)1805
2392 y Fn(2)1873 2380 y Ft(in)h Fo(S)5 b(c)30 b Ft(w)n(ould)g(also)f
(require)h(t)n(w)n(o)f(memory)h(frames)g(at)g(instan)n(t)0
2510 y Fo(x)17 b Ft(+)f(2)h Fl(\001)f Ft(\()p Fo(j)22
b Fl(\000)17 b Ft(1\))f(+)g(1.)37 b(Ho)n(w)n(ev)n(er,)25
b(there)h(is)h(only)f(one)g(memory)g(frame)h(a)n(v)-5
b(ailable)25 b(at)i(this)g(instan)n(t.)36 b(Therefore)26
b Fo(S)5 b(c)26 b Ft(is)h(not)f(a)0 2639 y(resource)d(sc)n(hedule)i
(for)g Fl(f)p Fo(P)869 2651 y Fn(0)906 2639 y Fo(;)14
b(:)g(:)g(:)g(;)g(P)1144 2651 y Fk(m)p Fg(\000)p Fn(1)1292
2639 y Fl(g)25 b Ft(that)g(yields)g(a)g(latency)g(of)g(one)g(in)n(terv)
-5 b(al,)25 b(whic)n(h)g(con)n(tradicts)f(our)h(assumption)0
2769 y(ab)r(out)j Fo(S)5 b(c)p Ft(.)p 389 2744 V 389
2794 4 50 v 432 2794 V 389 2797 47 4 v 1908 5656 a(27)p
eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF


